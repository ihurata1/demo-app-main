// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/ftp/ftp.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.ftp;

@kotlin.jvm.JvmName("-initializeprogressData")
public inline fun progressData(block: io.mavsdk.ftp.ProgressDataKt.Dsl.() -> kotlin.Unit): io.mavsdk.ftp.FtpProto.ProgressData =
  io.mavsdk.ftp.ProgressDataKt.Dsl._create(io.mavsdk.ftp.FtpProto.ProgressData.newBuilder()).apply { block() }._build()
/**
 * ```
 * Progress data type for file transfer.
 * ```
 *
 * Protobuf type `mavsdk.rpc.ftp.ProgressData`
 */
public object ProgressDataKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.ftp.FtpProto.ProgressData.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.ftp.FtpProto.ProgressData.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.ftp.FtpProto.ProgressData = _builder.build()

    /**
     * <pre>
     * The number of bytes already transferred.
     * </pre>
     *
     * <code>uint32 bytes_transferred = 1;</code>
     */
    public var bytesTransferred: kotlin.Int
      @JvmName("getBytesTransferred")
      get() = _builder.getBytesTransferred()
      @JvmName("setBytesTransferred")
      set(value) {
        _builder.setBytesTransferred(value)
      }
    /**
     * ```
     * The number of bytes already transferred.
     * ```
     *
     * `uint32 bytes_transferred = 1;`
     */
    public fun clearBytesTransferred() {
      _builder.clearBytesTransferred()
    }

    /**
     * <pre>
     * The total bytes to transfer.
     * </pre>
     *
     * <code>uint32 total_bytes = 2;</code>
     */
    public var totalBytes: kotlin.Int
      @JvmName("getTotalBytes")
      get() = _builder.getTotalBytes()
      @JvmName("setTotalBytes")
      set(value) {
        _builder.setTotalBytes(value)
      }
    /**
     * ```
     * The total bytes to transfer.
     * ```
     *
     * `uint32 total_bytes = 2;`
     */
    public fun clearTotalBytes() {
      _builder.clearTotalBytes()
    }
  }
}
public inline fun io.mavsdk.ftp.FtpProto.ProgressData.copy(block: `io.mavsdk.ftp`.ProgressDataKt.Dsl.() -> kotlin.Unit): io.mavsdk.ftp.FtpProto.ProgressData =
  `io.mavsdk.ftp`.ProgressDataKt.Dsl._create(this.toBuilder()).apply { block() }._build()


// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/rtk/rtk.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.rtk;

@kotlin.jvm.JvmName("-initializesendRtcmDataResponse")
public inline fun sendRtcmDataResponse(block: io.mavsdk.rtk.SendRtcmDataResponseKt.Dsl.() -> kotlin.Unit): io.mavsdk.rtk.RtkProto.SendRtcmDataResponse =
  io.mavsdk.rtk.SendRtcmDataResponseKt.Dsl._create(io.mavsdk.rtk.RtkProto.SendRtcmDataResponse.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `mavsdk.rpc.rtk.SendRtcmDataResponse`
 */
public object SendRtcmDataResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.rtk.RtkProto.SendRtcmDataResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.rtk.RtkProto.SendRtcmDataResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.rtk.RtkProto.SendRtcmDataResponse = _builder.build()

    /**
     * `.mavsdk.rpc.rtk.RtkResult rtk_result = 1;`
     */
    public var rtkResult: io.mavsdk.rtk.RtkProto.RtkResult
      @JvmName("getRtkResult")
      get() = _builder.getRtkResult()
      @JvmName("setRtkResult")
      set(value) {
        _builder.setRtkResult(value)
      }
    /**
     * `.mavsdk.rpc.rtk.RtkResult rtk_result = 1;`
     */
    public fun clearRtkResult() {
      _builder.clearRtkResult()
    }
    /**
     * `.mavsdk.rpc.rtk.RtkResult rtk_result = 1;`
     * @return Whether the rtkResult field is set.
     */
    public fun hasRtkResult(): kotlin.Boolean {
      return _builder.hasRtkResult()
    }
  }
}
public inline fun io.mavsdk.rtk.RtkProto.SendRtcmDataResponse.copy(block: `io.mavsdk.rtk`.SendRtcmDataResponseKt.Dsl.() -> kotlin.Unit): io.mavsdk.rtk.RtkProto.SendRtcmDataResponse =
  `io.mavsdk.rtk`.SendRtcmDataResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val io.mavsdk.rtk.RtkProto.SendRtcmDataResponseOrBuilder.rtkResultOrNull: io.mavsdk.rtk.RtkProto.RtkResult?
  get() = if (hasRtkResult()) getRtkResult() else null


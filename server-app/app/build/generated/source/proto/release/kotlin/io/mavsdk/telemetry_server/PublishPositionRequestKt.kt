// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/telemetry_server/telemetry_server.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.telemetry_server;

@kotlin.jvm.JvmName("-initializepublishPositionRequest")
public inline fun publishPositionRequest(block: io.mavsdk.telemetry_server.PublishPositionRequestKt.Dsl.() -> kotlin.Unit): io.mavsdk.telemetry_server.TelemetryServerProto.PublishPositionRequest =
  io.mavsdk.telemetry_server.PublishPositionRequestKt.Dsl._create(io.mavsdk.telemetry_server.TelemetryServerProto.PublishPositionRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `mavsdk.rpc.telemetry_server.PublishPositionRequest`
 */
public object PublishPositionRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.telemetry_server.TelemetryServerProto.PublishPositionRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.telemetry_server.TelemetryServerProto.PublishPositionRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.telemetry_server.TelemetryServerProto.PublishPositionRequest = _builder.build()

    /**
     * ```
     * The next position
     * ```
     *
     * `.mavsdk.rpc.telemetry_server.Position position = 1;`
     */
    public var position: io.mavsdk.telemetry_server.TelemetryServerProto.Position
      @JvmName("getPosition")
      get() = _builder.getPosition()
      @JvmName("setPosition")
      set(value) {
        _builder.setPosition(value)
      }
    /**
     * ```
     * The next position
     * ```
     *
     * `.mavsdk.rpc.telemetry_server.Position position = 1;`
     */
    public fun clearPosition() {
      _builder.clearPosition()
    }
    /**
     * ```
     * The next position
     * ```
     *
     * `.mavsdk.rpc.telemetry_server.Position position = 1;`
     * @return Whether the position field is set.
     */
    public fun hasPosition(): kotlin.Boolean {
      return _builder.hasPosition()
    }

    /**
     * ```
     * The next velocity (NED)
     * ```
     *
     * `.mavsdk.rpc.telemetry_server.VelocityNed velocity_ned = 2;`
     */
    public var velocityNed: io.mavsdk.telemetry_server.TelemetryServerProto.VelocityNed
      @JvmName("getVelocityNed")
      get() = _builder.getVelocityNed()
      @JvmName("setVelocityNed")
      set(value) {
        _builder.setVelocityNed(value)
      }
    /**
     * ```
     * The next velocity (NED)
     * ```
     *
     * `.mavsdk.rpc.telemetry_server.VelocityNed velocity_ned = 2;`
     */
    public fun clearVelocityNed() {
      _builder.clearVelocityNed()
    }
    /**
     * ```
     * The next velocity (NED)
     * ```
     *
     * `.mavsdk.rpc.telemetry_server.VelocityNed velocity_ned = 2;`
     * @return Whether the velocityNed field is set.
     */
    public fun hasVelocityNed(): kotlin.Boolean {
      return _builder.hasVelocityNed()
    }

    /**
     * ```
     * Heading (yaw) in degrees
     * ```
     *
     * `.mavsdk.rpc.telemetry_server.Heading heading = 3;`
     */
    public var heading: io.mavsdk.telemetry_server.TelemetryServerProto.Heading
      @JvmName("getHeading")
      get() = _builder.getHeading()
      @JvmName("setHeading")
      set(value) {
        _builder.setHeading(value)
      }
    /**
     * ```
     * Heading (yaw) in degrees
     * ```
     *
     * `.mavsdk.rpc.telemetry_server.Heading heading = 3;`
     */
    public fun clearHeading() {
      _builder.clearHeading()
    }
    /**
     * ```
     * Heading (yaw) in degrees
     * ```
     *
     * `.mavsdk.rpc.telemetry_server.Heading heading = 3;`
     * @return Whether the heading field is set.
     */
    public fun hasHeading(): kotlin.Boolean {
      return _builder.hasHeading()
    }
  }
}
public inline fun io.mavsdk.telemetry_server.TelemetryServerProto.PublishPositionRequest.copy(block: `io.mavsdk.telemetry_server`.PublishPositionRequestKt.Dsl.() -> kotlin.Unit): io.mavsdk.telemetry_server.TelemetryServerProto.PublishPositionRequest =
  `io.mavsdk.telemetry_server`.PublishPositionRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val io.mavsdk.telemetry_server.TelemetryServerProto.PublishPositionRequestOrBuilder.positionOrNull: io.mavsdk.telemetry_server.TelemetryServerProto.Position?
  get() = if (hasPosition()) getPosition() else null

public val io.mavsdk.telemetry_server.TelemetryServerProto.PublishPositionRequestOrBuilder.velocityNedOrNull: io.mavsdk.telemetry_server.TelemetryServerProto.VelocityNed?
  get() = if (hasVelocityNed()) getVelocityNed() else null

public val io.mavsdk.telemetry_server.TelemetryServerProto.PublishPositionRequestOrBuilder.headingOrNull: io.mavsdk.telemetry_server.TelemetryServerProto.Heading?
  get() = if (hasHeading()) getHeading() else null


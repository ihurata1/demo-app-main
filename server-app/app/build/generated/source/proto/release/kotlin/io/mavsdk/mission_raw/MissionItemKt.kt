// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/mission_raw/mission_raw.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.mission_raw;

@kotlin.jvm.JvmName("-initializemissionItem")
public inline fun missionItem(block: io.mavsdk.mission_raw.MissionItemKt.Dsl.() -> kotlin.Unit): io.mavsdk.mission_raw.MissionRawProto.MissionItem =
  io.mavsdk.mission_raw.MissionItemKt.Dsl._create(io.mavsdk.mission_raw.MissionRawProto.MissionItem.newBuilder()).apply { block() }._build()
/**
 * ```
 * Mission item exactly identical to MAVLink MISSION_ITEM_INT.
 * ```
 *
 * Protobuf type `mavsdk.rpc.mission_raw.MissionItem`
 */
public object MissionItemKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.mission_raw.MissionRawProto.MissionItem.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.mission_raw.MissionRawProto.MissionItem.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.mission_raw.MissionRawProto.MissionItem = _builder.build()

    /**
     * <pre>
     * Sequence (uint16_t)
     * </pre>
     *
     * <code>uint32 seq = 1;</code>
     */
    public var seq: kotlin.Int
      @JvmName("getSeq")
      get() = _builder.getSeq()
      @JvmName("setSeq")
      set(value) {
        _builder.setSeq(value)
      }
    /**
     * ```
     * Sequence (uint16_t)
     * ```
     *
     * `uint32 seq = 1;`
     */
    public fun clearSeq() {
      _builder.clearSeq()
    }

    /**
     * <pre>
     * The coordinate system of the waypoint (actually uint8_t)
     * </pre>
     *
     * <code>uint32 frame = 2;</code>
     */
    public var frame: kotlin.Int
      @JvmName("getFrame")
      get() = _builder.getFrame()
      @JvmName("setFrame")
      set(value) {
        _builder.setFrame(value)
      }
    /**
     * ```
     * The coordinate system of the waypoint (actually uint8_t)
     * ```
     *
     * `uint32 frame = 2;`
     */
    public fun clearFrame() {
      _builder.clearFrame()
    }

    /**
     * <pre>
     * The scheduled action for the waypoint (actually uint16_t)
     * </pre>
     *
     * <code>uint32 command = 3;</code>
     */
    public var command: kotlin.Int
      @JvmName("getCommand")
      get() = _builder.getCommand()
      @JvmName("setCommand")
      set(value) {
        _builder.setCommand(value)
      }
    /**
     * ```
     * The scheduled action for the waypoint (actually uint16_t)
     * ```
     *
     * `uint32 command = 3;`
     */
    public fun clearCommand() {
      _builder.clearCommand()
    }

    /**
     * <pre>
     * false:0, true:1 (actually uint8_t)
     * </pre>
     *
     * <code>uint32 current = 4;</code>
     */
    public var current: kotlin.Int
      @JvmName("getCurrent")
      get() = _builder.getCurrent()
      @JvmName("setCurrent")
      set(value) {
        _builder.setCurrent(value)
      }
    /**
     * ```
     * false:0, true:1 (actually uint8_t)
     * ```
     *
     * `uint32 current = 4;`
     */
    public fun clearCurrent() {
      _builder.clearCurrent()
    }

    /**
     * <pre>
     * Autocontinue to next waypoint (actually uint8_t)
     * </pre>
     *
     * <code>uint32 autocontinue = 5;</code>
     */
    public var autocontinue: kotlin.Int
      @JvmName("getAutocontinue")
      get() = _builder.getAutocontinue()
      @JvmName("setAutocontinue")
      set(value) {
        _builder.setAutocontinue(value)
      }
    /**
     * ```
     * Autocontinue to next waypoint (actually uint8_t)
     * ```
     *
     * `uint32 autocontinue = 5;`
     */
    public fun clearAutocontinue() {
      _builder.clearAutocontinue()
    }

    /**
     * <pre>
     * PARAM1, see MAV_CMD enum
     * </pre>
     *
     * <code>float param1 = 6;</code>
     */
    public var param1: kotlin.Float
      @JvmName("getParam1")
      get() = _builder.getParam1()
      @JvmName("setParam1")
      set(value) {
        _builder.setParam1(value)
      }
    /**
     * ```
     * PARAM1, see MAV_CMD enum
     * ```
     *
     * `float param1 = 6;`
     */
    public fun clearParam1() {
      _builder.clearParam1()
    }

    /**
     * <pre>
     * PARAM2, see MAV_CMD enum
     * </pre>
     *
     * <code>float param2 = 7;</code>
     */
    public var param2: kotlin.Float
      @JvmName("getParam2")
      get() = _builder.getParam2()
      @JvmName("setParam2")
      set(value) {
        _builder.setParam2(value)
      }
    /**
     * ```
     * PARAM2, see MAV_CMD enum
     * ```
     *
     * `float param2 = 7;`
     */
    public fun clearParam2() {
      _builder.clearParam2()
    }

    /**
     * <pre>
     * PARAM3, see MAV_CMD enum
     * </pre>
     *
     * <code>float param3 = 8;</code>
     */
    public var param3: kotlin.Float
      @JvmName("getParam3")
      get() = _builder.getParam3()
      @JvmName("setParam3")
      set(value) {
        _builder.setParam3(value)
      }
    /**
     * ```
     * PARAM3, see MAV_CMD enum
     * ```
     *
     * `float param3 = 8;`
     */
    public fun clearParam3() {
      _builder.clearParam3()
    }

    /**
     * <pre>
     * PARAM4, see MAV_CMD enum
     * </pre>
     *
     * <code>float param4 = 9;</code>
     */
    public var param4: kotlin.Float
      @JvmName("getParam4")
      get() = _builder.getParam4()
      @JvmName("setParam4")
      set(value) {
        _builder.setParam4(value)
      }
    /**
     * ```
     * PARAM4, see MAV_CMD enum
     * ```
     *
     * `float param4 = 9;`
     */
    public fun clearParam4() {
      _builder.clearParam4()
    }

    /**
     * <pre>
     * PARAM5 / local: x position in meters * 1e4, global: latitude in degrees * 10^7
     * </pre>
     *
     * <code>int32 x = 10;</code>
     */
    public var x: kotlin.Int
      @JvmName("getX")
      get() = _builder.getX()
      @JvmName("setX")
      set(value) {
        _builder.setX(value)
      }
    /**
     * ```
     * PARAM5 / local: x position in meters * 1e4, global: latitude in degrees * 10^7
     * ```
     *
     * `int32 x = 10;`
     */
    public fun clearX() {
      _builder.clearX()
    }

    /**
     * <pre>
     * PARAM6 / y position: local: x position in meters * 1e4, global: longitude in degrees *10^7
     * </pre>
     *
     * <code>int32 y = 11;</code>
     */
    public var y: kotlin.Int
      @JvmName("getY")
      get() = _builder.getY()
      @JvmName("setY")
      set(value) {
        _builder.setY(value)
      }
    /**
     * ```
     * PARAM6 / y position: local: x position in meters * 1e4, global: longitude in degrees *10^7
     * ```
     *
     * `int32 y = 11;`
     */
    public fun clearY() {
      _builder.clearY()
    }

    /**
     * <pre>
     * PARAM7 / local: Z coordinate, global: altitude (relative or absolute, depending on frame)
     * </pre>
     *
     * <code>float z = 12;</code>
     */
    public var z: kotlin.Float
      @JvmName("getZ")
      get() = _builder.getZ()
      @JvmName("setZ")
      set(value) {
        _builder.setZ(value)
      }
    /**
     * ```
     * PARAM7 / local: Z coordinate, global: altitude (relative or absolute, depending on frame)
     * ```
     *
     * `float z = 12;`
     */
    public fun clearZ() {
      _builder.clearZ()
    }

    /**
     * <pre>
     * Mission type (actually uint8_t)
     * </pre>
     *
     * <code>uint32 mission_type = 13;</code>
     */
    public var missionType: kotlin.Int
      @JvmName("getMissionType")
      get() = _builder.getMissionType()
      @JvmName("setMissionType")
      set(value) {
        _builder.setMissionType(value)
      }
    /**
     * ```
     * Mission type (actually uint8_t)
     * ```
     *
     * `uint32 mission_type = 13;`
     */
    public fun clearMissionType() {
      _builder.clearMissionType()
    }
  }
}
public inline fun io.mavsdk.mission_raw.MissionRawProto.MissionItem.copy(block: `io.mavsdk.mission_raw`.MissionItemKt.Dsl.() -> kotlin.Unit): io.mavsdk.mission_raw.MissionRawProto.MissionItem =
  `io.mavsdk.mission_raw`.MissionItemKt.Dsl._create(this.toBuilder()).apply { block() }._build()


// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/telemetry/telemetry.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.telemetry;

@kotlin.jvm.JvmName("-initializeflightModeResponse")
public inline fun flightModeResponse(block: io.mavsdk.telemetry.FlightModeResponseKt.Dsl.() -> kotlin.Unit): io.mavsdk.telemetry.TelemetryProto.FlightModeResponse =
  io.mavsdk.telemetry.FlightModeResponseKt.Dsl._create(io.mavsdk.telemetry.TelemetryProto.FlightModeResponse.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `mavsdk.rpc.telemetry.FlightModeResponse`
 */
public object FlightModeResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.telemetry.TelemetryProto.FlightModeResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.telemetry.TelemetryProto.FlightModeResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.telemetry.TelemetryProto.FlightModeResponse = _builder.build()

    /**
     * ```
     * The next flight mode
     * ```
     *
     * `.mavsdk.rpc.telemetry.FlightMode flight_mode = 1;`
     */
    public var flightMode: io.mavsdk.telemetry.TelemetryProto.FlightMode
      @JvmName("getFlightMode")
      get() = _builder.getFlightMode()
      @JvmName("setFlightMode")
      set(value) {
        _builder.setFlightMode(value)
      }
    public var flightModeValue: kotlin.Int
      @JvmName("getFlightModeValue")
      get() = _builder.getFlightModeValue()
      @JvmName("setFlightModeValue")
      set(value) {
        _builder.setFlightModeValue(value)
      }
    /**
     * ```
     * The next flight mode
     * ```
     *
     * `.mavsdk.rpc.telemetry.FlightMode flight_mode = 1;`
     */
    public fun clearFlightMode() {
      _builder.clearFlightMode()
    }
  }
}
public inline fun io.mavsdk.telemetry.TelemetryProto.FlightModeResponse.copy(block: `io.mavsdk.telemetry`.FlightModeResponseKt.Dsl.() -> kotlin.Unit): io.mavsdk.telemetry.TelemetryProto.FlightModeResponse =
  `io.mavsdk.telemetry`.FlightModeResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()


// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/rtk/rtk.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.rtk;

@kotlin.jvm.JvmName("-initializesendRtcmDataRequest")
public inline fun sendRtcmDataRequest(block: io.mavsdk.rtk.SendRtcmDataRequestKt.Dsl.() -> kotlin.Unit): io.mavsdk.rtk.RtkProto.SendRtcmDataRequest =
  io.mavsdk.rtk.SendRtcmDataRequestKt.Dsl._create(io.mavsdk.rtk.RtkProto.SendRtcmDataRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `mavsdk.rpc.rtk.SendRtcmDataRequest`
 */
public object SendRtcmDataRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.rtk.RtkProto.SendRtcmDataRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.rtk.RtkProto.SendRtcmDataRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.rtk.RtkProto.SendRtcmDataRequest = _builder.build()

    /**
     * ```
     * The data
     * ```
     *
     * `.mavsdk.rpc.rtk.RtcmData rtcm_data = 1;`
     */
    public var rtcmData: io.mavsdk.rtk.RtkProto.RtcmData
      @JvmName("getRtcmData")
      get() = _builder.getRtcmData()
      @JvmName("setRtcmData")
      set(value) {
        _builder.setRtcmData(value)
      }
    /**
     * ```
     * The data
     * ```
     *
     * `.mavsdk.rpc.rtk.RtcmData rtcm_data = 1;`
     */
    public fun clearRtcmData() {
      _builder.clearRtcmData()
    }
    /**
     * ```
     * The data
     * ```
     *
     * `.mavsdk.rpc.rtk.RtcmData rtcm_data = 1;`
     * @return Whether the rtcmData field is set.
     */
    public fun hasRtcmData(): kotlin.Boolean {
      return _builder.hasRtcmData()
    }
  }
}
public inline fun io.mavsdk.rtk.RtkProto.SendRtcmDataRequest.copy(block: `io.mavsdk.rtk`.SendRtcmDataRequestKt.Dsl.() -> kotlin.Unit): io.mavsdk.rtk.RtkProto.SendRtcmDataRequest =
  `io.mavsdk.rtk`.SendRtcmDataRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val io.mavsdk.rtk.RtkProto.SendRtcmDataRequestOrBuilder.rtcmDataOrNull: io.mavsdk.rtk.RtkProto.RtcmData?
  get() = if (hasRtcmData()) getRtcmData() else null


// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/camera_server/camera_server.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.camera_server;

@kotlin.jvm.JvmName("-initializetrackingRectangleCommandResponse")
public inline fun trackingRectangleCommandResponse(block: io.mavsdk.camera_server.TrackingRectangleCommandResponseKt.Dsl.() -> kotlin.Unit): io.mavsdk.camera_server.CameraServerProto.TrackingRectangleCommandResponse =
  io.mavsdk.camera_server.TrackingRectangleCommandResponseKt.Dsl._create(io.mavsdk.camera_server.CameraServerProto.TrackingRectangleCommandResponse.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `mavsdk.rpc.camera_server.TrackingRectangleCommandResponse`
 */
public object TrackingRectangleCommandResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.camera_server.CameraServerProto.TrackingRectangleCommandResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.camera_server.CameraServerProto.TrackingRectangleCommandResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.camera_server.CameraServerProto.TrackingRectangleCommandResponse = _builder.build()

    /**
     * ```
     * The point to track if a point is to be tracked
     * ```
     *
     * `.mavsdk.rpc.camera_server.TrackRectangle track_rectangle = 1;`
     */
    public var trackRectangle: io.mavsdk.camera_server.CameraServerProto.TrackRectangle
      @JvmName("getTrackRectangle")
      get() = _builder.getTrackRectangle()
      @JvmName("setTrackRectangle")
      set(value) {
        _builder.setTrackRectangle(value)
      }
    /**
     * ```
     * The point to track if a point is to be tracked
     * ```
     *
     * `.mavsdk.rpc.camera_server.TrackRectangle track_rectangle = 1;`
     */
    public fun clearTrackRectangle() {
      _builder.clearTrackRectangle()
    }
    /**
     * ```
     * The point to track if a point is to be tracked
     * ```
     *
     * `.mavsdk.rpc.camera_server.TrackRectangle track_rectangle = 1;`
     * @return Whether the trackRectangle field is set.
     */
    public fun hasTrackRectangle(): kotlin.Boolean {
      return _builder.hasTrackRectangle()
    }
  }
}
public inline fun io.mavsdk.camera_server.CameraServerProto.TrackingRectangleCommandResponse.copy(block: `io.mavsdk.camera_server`.TrackingRectangleCommandResponseKt.Dsl.() -> kotlin.Unit): io.mavsdk.camera_server.CameraServerProto.TrackingRectangleCommandResponse =
  `io.mavsdk.camera_server`.TrackingRectangleCommandResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val io.mavsdk.camera_server.CameraServerProto.TrackingRectangleCommandResponseOrBuilder.trackRectangleOrNull: io.mavsdk.camera_server.CameraServerProto.TrackRectangle?
  get() = if (hasTrackRectangle()) getTrackRectangle() else null


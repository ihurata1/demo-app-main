// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/camera_server/camera_server.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.camera_server;

@kotlin.jvm.JvmName("-initializetrackingPointCommandResponse")
public inline fun trackingPointCommandResponse(block: io.mavsdk.camera_server.TrackingPointCommandResponseKt.Dsl.() -> kotlin.Unit): io.mavsdk.camera_server.CameraServerProto.TrackingPointCommandResponse =
  io.mavsdk.camera_server.TrackingPointCommandResponseKt.Dsl._create(io.mavsdk.camera_server.CameraServerProto.TrackingPointCommandResponse.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `mavsdk.rpc.camera_server.TrackingPointCommandResponse`
 */
public object TrackingPointCommandResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.camera_server.CameraServerProto.TrackingPointCommandResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.camera_server.CameraServerProto.TrackingPointCommandResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.camera_server.CameraServerProto.TrackingPointCommandResponse = _builder.build()

    /**
     * ```
     * The point to track if a point is to be tracked
     * ```
     *
     * `.mavsdk.rpc.camera_server.TrackPoint track_point = 1;`
     */
    public var trackPoint: io.mavsdk.camera_server.CameraServerProto.TrackPoint
      @JvmName("getTrackPoint")
      get() = _builder.getTrackPoint()
      @JvmName("setTrackPoint")
      set(value) {
        _builder.setTrackPoint(value)
      }
    /**
     * ```
     * The point to track if a point is to be tracked
     * ```
     *
     * `.mavsdk.rpc.camera_server.TrackPoint track_point = 1;`
     */
    public fun clearTrackPoint() {
      _builder.clearTrackPoint()
    }
    /**
     * ```
     * The point to track if a point is to be tracked
     * ```
     *
     * `.mavsdk.rpc.camera_server.TrackPoint track_point = 1;`
     * @return Whether the trackPoint field is set.
     */
    public fun hasTrackPoint(): kotlin.Boolean {
      return _builder.hasTrackPoint()
    }
  }
}
public inline fun io.mavsdk.camera_server.CameraServerProto.TrackingPointCommandResponse.copy(block: `io.mavsdk.camera_server`.TrackingPointCommandResponseKt.Dsl.() -> kotlin.Unit): io.mavsdk.camera_server.CameraServerProto.TrackingPointCommandResponse =
  `io.mavsdk.camera_server`.TrackingPointCommandResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val io.mavsdk.camera_server.CameraServerProto.TrackingPointCommandResponseOrBuilder.trackPointOrNull: io.mavsdk.camera_server.CameraServerProto.TrackPoint?
  get() = if (hasTrackPoint()) getTrackPoint() else null


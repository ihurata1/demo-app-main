// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/action_server/action_server.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.action_server;

@kotlin.jvm.JvmName("-initializesetAllowableFlightModesRequest")
public inline fun setAllowableFlightModesRequest(block: io.mavsdk.action_server.SetAllowableFlightModesRequestKt.Dsl.() -> kotlin.Unit): io.mavsdk.action_server.ActionServerProto.SetAllowableFlightModesRequest =
  io.mavsdk.action_server.SetAllowableFlightModesRequestKt.Dsl._create(io.mavsdk.action_server.ActionServerProto.SetAllowableFlightModesRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `mavsdk.rpc.action_server.SetAllowableFlightModesRequest`
 */
public object SetAllowableFlightModesRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.action_server.ActionServerProto.SetAllowableFlightModesRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.action_server.ActionServerProto.SetAllowableFlightModesRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.action_server.ActionServerProto.SetAllowableFlightModesRequest = _builder.build()

    /**
     * `.mavsdk.rpc.action_server.AllowableFlightModes flight_modes = 1;`
     */
    public var flightModes: io.mavsdk.action_server.ActionServerProto.AllowableFlightModes
      @JvmName("getFlightModes")
      get() = _builder.getFlightModes()
      @JvmName("setFlightModes")
      set(value) {
        _builder.setFlightModes(value)
      }
    /**
     * `.mavsdk.rpc.action_server.AllowableFlightModes flight_modes = 1;`
     */
    public fun clearFlightModes() {
      _builder.clearFlightModes()
    }
    /**
     * `.mavsdk.rpc.action_server.AllowableFlightModes flight_modes = 1;`
     * @return Whether the flightModes field is set.
     */
    public fun hasFlightModes(): kotlin.Boolean {
      return _builder.hasFlightModes()
    }
  }
}
public inline fun io.mavsdk.action_server.ActionServerProto.SetAllowableFlightModesRequest.copy(block: `io.mavsdk.action_server`.SetAllowableFlightModesRequestKt.Dsl.() -> kotlin.Unit): io.mavsdk.action_server.ActionServerProto.SetAllowableFlightModesRequest =
  `io.mavsdk.action_server`.SetAllowableFlightModesRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val io.mavsdk.action_server.ActionServerProto.SetAllowableFlightModesRequestOrBuilder.flightModesOrNull: io.mavsdk.action_server.ActionServerProto.AllowableFlightModes?
  get() = if (hasFlightModes()) getFlightModes() else null


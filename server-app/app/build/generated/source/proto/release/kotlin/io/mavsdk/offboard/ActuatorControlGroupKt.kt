// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/offboard/offboard.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.offboard;

@kotlin.jvm.JvmName("-initializeactuatorControlGroup")
public inline fun actuatorControlGroup(block: io.mavsdk.offboard.ActuatorControlGroupKt.Dsl.() -> kotlin.Unit): io.mavsdk.offboard.OffboardProto.ActuatorControlGroup =
  io.mavsdk.offboard.ActuatorControlGroupKt.Dsl._create(io.mavsdk.offboard.OffboardProto.ActuatorControlGroup.newBuilder()).apply { block() }._build()
/**
 * ```
 *
 * Eight controls that will be given to the group. Each control is a normalized
 * (-1..+1) command value, which will be mapped and scaled through the mixer.
 * ```
 *
 * Protobuf type `mavsdk.rpc.offboard.ActuatorControlGroup`
 */
public object ActuatorControlGroupKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.offboard.OffboardProto.ActuatorControlGroup.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.offboard.OffboardProto.ActuatorControlGroup.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.offboard.OffboardProto.ActuatorControlGroup = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ControlsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * Controls in the group
     * </pre>
     *
     * <code>repeated float controls = 1;</code>
     */
     public val controls: com.google.protobuf.kotlin.DslList<kotlin.Float, ControlsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getControlsList()
      )
    /**
     * ```
     * Controls in the group
     * ```
     *
     * `repeated float controls = 1;`
     * @param value The controls to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addControls")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Float, ControlsProxy>.add(value: kotlin.Float) {
      _builder.addControls(value)
    }/**
     * ```
     * Controls in the group
     * ```
     *
     * `repeated float controls = 1;`
     * @param value The controls to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignControls")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, ControlsProxy>.plusAssign(value: kotlin.Float) {
      add(value)
    }/**
     * ```
     * Controls in the group
     * ```
     *
     * `repeated float controls = 1;`
     * @param values The controls to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllControls")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Float, ControlsProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Float>) {
      _builder.addAllControls(values)
    }/**
     * ```
     * Controls in the group
     * ```
     *
     * `repeated float controls = 1;`
     * @param values The controls to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllControls")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, ControlsProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Float>) {
      addAll(values)
    }/**
     * ```
     * Controls in the group
     * ```
     *
     * `repeated float controls = 1;`
     * @param index The index to set the value at.
     * @param value The controls to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setControls")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, ControlsProxy>.set(index: kotlin.Int, value: kotlin.Float) {
      _builder.setControls(index, value)
    }/**
     * ```
     * Controls in the group
     * ```
     *
     * `repeated float controls = 1;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearControls")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Float, ControlsProxy>.clear() {
      _builder.clearControls()
    }}
}
public inline fun io.mavsdk.offboard.OffboardProto.ActuatorControlGroup.copy(block: `io.mavsdk.offboard`.ActuatorControlGroupKt.Dsl.() -> kotlin.Unit): io.mavsdk.offboard.OffboardProto.ActuatorControlGroup =
  `io.mavsdk.offboard`.ActuatorControlGroupKt.Dsl._create(this.toBuilder()).apply { block() }._build()


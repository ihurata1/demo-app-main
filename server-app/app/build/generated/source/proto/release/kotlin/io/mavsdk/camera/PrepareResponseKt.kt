// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/camera/camera.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.camera;

@kotlin.jvm.JvmName("-initializeprepareResponse")
public inline fun prepareResponse(block: io.mavsdk.camera.PrepareResponseKt.Dsl.() -> kotlin.Unit): io.mavsdk.camera.CameraProto.PrepareResponse =
  io.mavsdk.camera.PrepareResponseKt.Dsl._create(io.mavsdk.camera.CameraProto.PrepareResponse.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `mavsdk.rpc.camera.PrepareResponse`
 */
public object PrepareResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.camera.CameraProto.PrepareResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.camera.CameraProto.PrepareResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.camera.CameraProto.PrepareResponse = _builder.build()

    /**
     * `.mavsdk.rpc.camera.CameraResult camera_result = 1;`
     */
    public var cameraResult: io.mavsdk.camera.CameraProto.CameraResult
      @JvmName("getCameraResult")
      get() = _builder.getCameraResult()
      @JvmName("setCameraResult")
      set(value) {
        _builder.setCameraResult(value)
      }
    /**
     * `.mavsdk.rpc.camera.CameraResult camera_result = 1;`
     */
    public fun clearCameraResult() {
      _builder.clearCameraResult()
    }
    /**
     * `.mavsdk.rpc.camera.CameraResult camera_result = 1;`
     * @return Whether the cameraResult field is set.
     */
    public fun hasCameraResult(): kotlin.Boolean {
      return _builder.hasCameraResult()
    }
  }
}
public inline fun io.mavsdk.camera.CameraProto.PrepareResponse.copy(block: `io.mavsdk.camera`.PrepareResponseKt.Dsl.() -> kotlin.Unit): io.mavsdk.camera.CameraProto.PrepareResponse =
  `io.mavsdk.camera`.PrepareResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val io.mavsdk.camera.CameraProto.PrepareResponseOrBuilder.cameraResultOrNull: io.mavsdk.camera.CameraProto.CameraResult?
  get() = if (hasCameraResult()) getCameraResult() else null


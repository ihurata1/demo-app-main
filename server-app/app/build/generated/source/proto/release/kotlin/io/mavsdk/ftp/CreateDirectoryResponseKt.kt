// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/ftp/ftp.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.ftp;

@kotlin.jvm.JvmName("-initializecreateDirectoryResponse")
public inline fun createDirectoryResponse(block: io.mavsdk.ftp.CreateDirectoryResponseKt.Dsl.() -> kotlin.Unit): io.mavsdk.ftp.FtpProto.CreateDirectoryResponse =
  io.mavsdk.ftp.CreateDirectoryResponseKt.Dsl._create(io.mavsdk.ftp.FtpProto.CreateDirectoryResponse.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `mavsdk.rpc.ftp.CreateDirectoryResponse`
 */
public object CreateDirectoryResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.ftp.FtpProto.CreateDirectoryResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.ftp.FtpProto.CreateDirectoryResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.ftp.FtpProto.CreateDirectoryResponse = _builder.build()

    /**
     * `.mavsdk.rpc.ftp.FtpResult ftp_result = 1;`
     */
    public var ftpResult: io.mavsdk.ftp.FtpProto.FtpResult
      @JvmName("getFtpResult")
      get() = _builder.getFtpResult()
      @JvmName("setFtpResult")
      set(value) {
        _builder.setFtpResult(value)
      }
    /**
     * `.mavsdk.rpc.ftp.FtpResult ftp_result = 1;`
     */
    public fun clearFtpResult() {
      _builder.clearFtpResult()
    }
    /**
     * `.mavsdk.rpc.ftp.FtpResult ftp_result = 1;`
     * @return Whether the ftpResult field is set.
     */
    public fun hasFtpResult(): kotlin.Boolean {
      return _builder.hasFtpResult()
    }
  }
}
public inline fun io.mavsdk.ftp.FtpProto.CreateDirectoryResponse.copy(block: `io.mavsdk.ftp`.CreateDirectoryResponseKt.Dsl.() -> kotlin.Unit): io.mavsdk.ftp.FtpProto.CreateDirectoryResponse =
  `io.mavsdk.ftp`.CreateDirectoryResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val io.mavsdk.ftp.FtpProto.CreateDirectoryResponseOrBuilder.ftpResultOrNull: io.mavsdk.ftp.FtpProto.FtpResult?
  get() = if (hasFtpResult()) getFtpResult() else null


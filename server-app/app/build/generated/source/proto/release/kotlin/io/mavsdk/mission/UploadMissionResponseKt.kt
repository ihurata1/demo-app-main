// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/mission/mission.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.mission;

@kotlin.jvm.JvmName("-initializeuploadMissionResponse")
public inline fun uploadMissionResponse(block: io.mavsdk.mission.UploadMissionResponseKt.Dsl.() -> kotlin.Unit): io.mavsdk.mission.MissionProto.UploadMissionResponse =
  io.mavsdk.mission.UploadMissionResponseKt.Dsl._create(io.mavsdk.mission.MissionProto.UploadMissionResponse.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `mavsdk.rpc.mission.UploadMissionResponse`
 */
public object UploadMissionResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.mission.MissionProto.UploadMissionResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.mission.MissionProto.UploadMissionResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.mission.MissionProto.UploadMissionResponse = _builder.build()

    /**
     * `.mavsdk.rpc.mission.MissionResult mission_result = 1;`
     */
    public var missionResult: io.mavsdk.mission.MissionProto.MissionResult
      @JvmName("getMissionResult")
      get() = _builder.getMissionResult()
      @JvmName("setMissionResult")
      set(value) {
        _builder.setMissionResult(value)
      }
    /**
     * `.mavsdk.rpc.mission.MissionResult mission_result = 1;`
     */
    public fun clearMissionResult() {
      _builder.clearMissionResult()
    }
    /**
     * `.mavsdk.rpc.mission.MissionResult mission_result = 1;`
     * @return Whether the missionResult field is set.
     */
    public fun hasMissionResult(): kotlin.Boolean {
      return _builder.hasMissionResult()
    }
  }
}
public inline fun io.mavsdk.mission.MissionProto.UploadMissionResponse.copy(block: `io.mavsdk.mission`.UploadMissionResponseKt.Dsl.() -> kotlin.Unit): io.mavsdk.mission.MissionProto.UploadMissionResponse =
  `io.mavsdk.mission`.UploadMissionResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val io.mavsdk.mission.MissionProto.UploadMissionResponseOrBuilder.missionResultOrNull: io.mavsdk.mission.MissionProto.MissionResult?
  get() = if (hasMissionResult()) getMissionResult() else null


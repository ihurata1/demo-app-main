// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/geofence/geofence.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.geofence;

@kotlin.jvm.JvmName("-initializegeofenceData")
public inline fun geofenceData(block: io.mavsdk.geofence.GeofenceDataKt.Dsl.() -> kotlin.Unit): io.mavsdk.geofence.GeofenceProto.GeofenceData =
  io.mavsdk.geofence.GeofenceDataKt.Dsl._create(io.mavsdk.geofence.GeofenceProto.GeofenceData.newBuilder()).apply { block() }._build()
/**
 * ```
 * Geofence data type.
 * ```
 *
 * Protobuf type `mavsdk.rpc.geofence.GeofenceData`
 */
public object GeofenceDataKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.geofence.GeofenceProto.GeofenceData.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.geofence.GeofenceProto.GeofenceData.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.geofence.GeofenceProto.GeofenceData = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class PolygonsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * Polygon(s) representing the geofence(s)
     * ```
     *
     * `repeated .mavsdk.rpc.geofence.Polygon polygons = 1;`
     */
     public val polygons: com.google.protobuf.kotlin.DslList<io.mavsdk.geofence.GeofenceProto.Polygon, PolygonsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getPolygonsList()
      )
    /**
     * ```
     * Polygon(s) representing the geofence(s)
     * ```
     *
     * `repeated .mavsdk.rpc.geofence.Polygon polygons = 1;`
     * @param value The polygons to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addPolygons")
    public fun com.google.protobuf.kotlin.DslList<io.mavsdk.geofence.GeofenceProto.Polygon, PolygonsProxy>.add(value: io.mavsdk.geofence.GeofenceProto.Polygon) {
      _builder.addPolygons(value)
    }
    /**
     * ```
     * Polygon(s) representing the geofence(s)
     * ```
     *
     * `repeated .mavsdk.rpc.geofence.Polygon polygons = 1;`
     * @param value The polygons to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignPolygons")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<io.mavsdk.geofence.GeofenceProto.Polygon, PolygonsProxy>.plusAssign(value: io.mavsdk.geofence.GeofenceProto.Polygon) {
      add(value)
    }
    /**
     * ```
     * Polygon(s) representing the geofence(s)
     * ```
     *
     * `repeated .mavsdk.rpc.geofence.Polygon polygons = 1;`
     * @param values The polygons to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllPolygons")
    public fun com.google.protobuf.kotlin.DslList<io.mavsdk.geofence.GeofenceProto.Polygon, PolygonsProxy>.addAll(values: kotlin.collections.Iterable<io.mavsdk.geofence.GeofenceProto.Polygon>) {
      _builder.addAllPolygons(values)
    }
    /**
     * ```
     * Polygon(s) representing the geofence(s)
     * ```
     *
     * `repeated .mavsdk.rpc.geofence.Polygon polygons = 1;`
     * @param values The polygons to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllPolygons")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<io.mavsdk.geofence.GeofenceProto.Polygon, PolygonsProxy>.plusAssign(values: kotlin.collections.Iterable<io.mavsdk.geofence.GeofenceProto.Polygon>) {
      addAll(values)
    }
    /**
     * ```
     * Polygon(s) representing the geofence(s)
     * ```
     *
     * `repeated .mavsdk.rpc.geofence.Polygon polygons = 1;`
     * @param index The index to set the value at.
     * @param value The polygons to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setPolygons")
    public operator fun com.google.protobuf.kotlin.DslList<io.mavsdk.geofence.GeofenceProto.Polygon, PolygonsProxy>.set(index: kotlin.Int, value: io.mavsdk.geofence.GeofenceProto.Polygon) {
      _builder.setPolygons(index, value)
    }
    /**
     * ```
     * Polygon(s) representing the geofence(s)
     * ```
     *
     * `repeated .mavsdk.rpc.geofence.Polygon polygons = 1;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearPolygons")
    public fun com.google.protobuf.kotlin.DslList<io.mavsdk.geofence.GeofenceProto.Polygon, PolygonsProxy>.clear() {
      _builder.clearPolygons()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class CirclesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * Circle(s) representing the geofence(s)
     * ```
     *
     * `repeated .mavsdk.rpc.geofence.Circle circles = 2;`
     */
     public val circles: com.google.protobuf.kotlin.DslList<io.mavsdk.geofence.GeofenceProto.Circle, CirclesProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getCirclesList()
      )
    /**
     * ```
     * Circle(s) representing the geofence(s)
     * ```
     *
     * `repeated .mavsdk.rpc.geofence.Circle circles = 2;`
     * @param value The circles to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addCircles")
    public fun com.google.protobuf.kotlin.DslList<io.mavsdk.geofence.GeofenceProto.Circle, CirclesProxy>.add(value: io.mavsdk.geofence.GeofenceProto.Circle) {
      _builder.addCircles(value)
    }
    /**
     * ```
     * Circle(s) representing the geofence(s)
     * ```
     *
     * `repeated .mavsdk.rpc.geofence.Circle circles = 2;`
     * @param value The circles to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignCircles")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<io.mavsdk.geofence.GeofenceProto.Circle, CirclesProxy>.plusAssign(value: io.mavsdk.geofence.GeofenceProto.Circle) {
      add(value)
    }
    /**
     * ```
     * Circle(s) representing the geofence(s)
     * ```
     *
     * `repeated .mavsdk.rpc.geofence.Circle circles = 2;`
     * @param values The circles to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllCircles")
    public fun com.google.protobuf.kotlin.DslList<io.mavsdk.geofence.GeofenceProto.Circle, CirclesProxy>.addAll(values: kotlin.collections.Iterable<io.mavsdk.geofence.GeofenceProto.Circle>) {
      _builder.addAllCircles(values)
    }
    /**
     * ```
     * Circle(s) representing the geofence(s)
     * ```
     *
     * `repeated .mavsdk.rpc.geofence.Circle circles = 2;`
     * @param values The circles to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllCircles")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<io.mavsdk.geofence.GeofenceProto.Circle, CirclesProxy>.plusAssign(values: kotlin.collections.Iterable<io.mavsdk.geofence.GeofenceProto.Circle>) {
      addAll(values)
    }
    /**
     * ```
     * Circle(s) representing the geofence(s)
     * ```
     *
     * `repeated .mavsdk.rpc.geofence.Circle circles = 2;`
     * @param index The index to set the value at.
     * @param value The circles to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setCircles")
    public operator fun com.google.protobuf.kotlin.DslList<io.mavsdk.geofence.GeofenceProto.Circle, CirclesProxy>.set(index: kotlin.Int, value: io.mavsdk.geofence.GeofenceProto.Circle) {
      _builder.setCircles(index, value)
    }
    /**
     * ```
     * Circle(s) representing the geofence(s)
     * ```
     *
     * `repeated .mavsdk.rpc.geofence.Circle circles = 2;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearCircles")
    public fun com.google.protobuf.kotlin.DslList<io.mavsdk.geofence.GeofenceProto.Circle, CirclesProxy>.clear() {
      _builder.clearCircles()
    }
  }
}
public inline fun io.mavsdk.geofence.GeofenceProto.GeofenceData.copy(block: `io.mavsdk.geofence`.GeofenceDataKt.Dsl.() -> kotlin.Unit): io.mavsdk.geofence.GeofenceProto.GeofenceData =
  `io.mavsdk.geofence`.GeofenceDataKt.Dsl._create(this.toBuilder()).apply { block() }._build()


// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/telemetry/telemetry.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.telemetry;

@kotlin.jvm.JvmName("-initializevelocityNed")
public inline fun velocityNed(block: io.mavsdk.telemetry.VelocityNedKt.Dsl.() -> kotlin.Unit): io.mavsdk.telemetry.TelemetryProto.VelocityNed =
  io.mavsdk.telemetry.VelocityNedKt.Dsl._create(io.mavsdk.telemetry.TelemetryProto.VelocityNed.newBuilder()).apply { block() }._build()
/**
 * ```
 * VelocityNed message type.
 * ```
 *
 * Protobuf type `mavsdk.rpc.telemetry.VelocityNed`
 */
public object VelocityNedKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.telemetry.TelemetryProto.VelocityNed.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.telemetry.TelemetryProto.VelocityNed.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.telemetry.TelemetryProto.VelocityNed = _builder.build()

    /**
     * <pre>
     * Velocity along north direction in metres per second
     * </pre>
     *
     * <code>float north_m_s = 1;</code>
     */
    public var northMS: kotlin.Float
      @JvmName("getNorthMS")
      get() = _builder.getNorthMS()
      @JvmName("setNorthMS")
      set(value) {
        _builder.setNorthMS(value)
      }
    /**
     * ```
     * Velocity along north direction in metres per second
     * ```
     *
     * `float north_m_s = 1;`
     */
    public fun clearNorthMS() {
      _builder.clearNorthMS()
    }

    /**
     * <pre>
     * Velocity along east direction in metres per second
     * </pre>
     *
     * <code>float east_m_s = 2;</code>
     */
    public var eastMS: kotlin.Float
      @JvmName("getEastMS")
      get() = _builder.getEastMS()
      @JvmName("setEastMS")
      set(value) {
        _builder.setEastMS(value)
      }
    /**
     * ```
     * Velocity along east direction in metres per second
     * ```
     *
     * `float east_m_s = 2;`
     */
    public fun clearEastMS() {
      _builder.clearEastMS()
    }

    /**
     * <pre>
     * Velocity along down direction in metres per second
     * </pre>
     *
     * <code>float down_m_s = 3;</code>
     */
    public var downMS: kotlin.Float
      @JvmName("getDownMS")
      get() = _builder.getDownMS()
      @JvmName("setDownMS")
      set(value) {
        _builder.setDownMS(value)
      }
    /**
     * ```
     * Velocity along down direction in metres per second
     * ```
     *
     * `float down_m_s = 3;`
     */
    public fun clearDownMS() {
      _builder.clearDownMS()
    }
  }
}
public inline fun io.mavsdk.telemetry.TelemetryProto.VelocityNed.copy(block: `io.mavsdk.telemetry`.VelocityNedKt.Dsl.() -> kotlin.Unit): io.mavsdk.telemetry.TelemetryProto.VelocityNed =
  `io.mavsdk.telemetry`.VelocityNedKt.Dsl._create(this.toBuilder()).apply { block() }._build()


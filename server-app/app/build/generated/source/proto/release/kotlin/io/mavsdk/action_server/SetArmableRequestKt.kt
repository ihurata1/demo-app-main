// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/action_server/action_server.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.action_server;

@kotlin.jvm.JvmName("-initializesetArmableRequest")
public inline fun setArmableRequest(block: io.mavsdk.action_server.SetArmableRequestKt.Dsl.() -> kotlin.Unit): io.mavsdk.action_server.ActionServerProto.SetArmableRequest =
  io.mavsdk.action_server.SetArmableRequestKt.Dsl._create(io.mavsdk.action_server.ActionServerProto.SetArmableRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `mavsdk.rpc.action_server.SetArmableRequest`
 */
public object SetArmableRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.action_server.ActionServerProto.SetArmableRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.action_server.ActionServerProto.SetArmableRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.action_server.ActionServerProto.SetArmableRequest = _builder.build()

    /**
     * <pre>
     * Is Armable now?
     * </pre>
     *
     * <code>bool armable = 1;</code>
     */
    public var armable: kotlin.Boolean
      @JvmName("getArmable")
      get() = _builder.getArmable()
      @JvmName("setArmable")
      set(value) {
        _builder.setArmable(value)
      }
    /**
     * ```
     * Is Armable now?
     * ```
     *
     * `bool armable = 1;`
     */
    public fun clearArmable() {
      _builder.clearArmable()
    }

    /**
     * <pre>
     * Is armable with force?
     * </pre>
     *
     * <code>bool force_armable = 2;</code>
     */
    public var forceArmable: kotlin.Boolean
      @JvmName("getForceArmable")
      get() = _builder.getForceArmable()
      @JvmName("setForceArmable")
      set(value) {
        _builder.setForceArmable(value)
      }
    /**
     * ```
     * Is armable with force?
     * ```
     *
     * `bool force_armable = 2;`
     */
    public fun clearForceArmable() {
      _builder.clearForceArmable()
    }
  }
}
public inline fun io.mavsdk.action_server.ActionServerProto.SetArmableRequest.copy(block: `io.mavsdk.action_server`.SetArmableRequestKt.Dsl.() -> kotlin.Unit): io.mavsdk.action_server.ActionServerProto.SetArmableRequest =
  `io.mavsdk.action_server`.SetArmableRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()


// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/camera_server/camera_server.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.camera_server;

@kotlin.jvm.JvmName("-initializerespondStartVideoRequest")
public inline fun respondStartVideoRequest(block: io.mavsdk.camera_server.RespondStartVideoRequestKt.Dsl.() -> kotlin.Unit): io.mavsdk.camera_server.CameraServerProto.RespondStartVideoRequest =
  io.mavsdk.camera_server.RespondStartVideoRequestKt.Dsl._create(io.mavsdk.camera_server.CameraServerProto.RespondStartVideoRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `mavsdk.rpc.camera_server.RespondStartVideoRequest`
 */
public object RespondStartVideoRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.camera_server.CameraServerProto.RespondStartVideoRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.camera_server.CameraServerProto.RespondStartVideoRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.camera_server.CameraServerProto.RespondStartVideoRequest = _builder.build()

    /**
     * ```
     * the feedback
     * ```
     *
     * `.mavsdk.rpc.camera_server.CameraFeedback start_video_feedback = 1;`
     */
    public var startVideoFeedback: io.mavsdk.camera_server.CameraServerProto.CameraFeedback
      @JvmName("getStartVideoFeedback")
      get() = _builder.getStartVideoFeedback()
      @JvmName("setStartVideoFeedback")
      set(value) {
        _builder.setStartVideoFeedback(value)
      }
    public var startVideoFeedbackValue: kotlin.Int
      @JvmName("getStartVideoFeedbackValue")
      get() = _builder.getStartVideoFeedbackValue()
      @JvmName("setStartVideoFeedbackValue")
      set(value) {
        _builder.setStartVideoFeedbackValue(value)
      }
    /**
     * ```
     * the feedback
     * ```
     *
     * `.mavsdk.rpc.camera_server.CameraFeedback start_video_feedback = 1;`
     */
    public fun clearStartVideoFeedback() {
      _builder.clearStartVideoFeedback()
    }
  }
}
public inline fun io.mavsdk.camera_server.CameraServerProto.RespondStartVideoRequest.copy(block: `io.mavsdk.camera_server`.RespondStartVideoRequestKt.Dsl.() -> kotlin.Unit): io.mavsdk.camera_server.CameraServerProto.RespondStartVideoRequest =
  `io.mavsdk.camera_server`.RespondStartVideoRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()


// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/telemetry/telemetry.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.telemetry;

@kotlin.jvm.JvmName("-initializerawGpsResponse")
public inline fun rawGpsResponse(block: io.mavsdk.telemetry.RawGpsResponseKt.Dsl.() -> kotlin.Unit): io.mavsdk.telemetry.TelemetryProto.RawGpsResponse =
  io.mavsdk.telemetry.RawGpsResponseKt.Dsl._create(io.mavsdk.telemetry.TelemetryProto.RawGpsResponse.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `mavsdk.rpc.telemetry.RawGpsResponse`
 */
public object RawGpsResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.telemetry.TelemetryProto.RawGpsResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.telemetry.TelemetryProto.RawGpsResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.telemetry.TelemetryProto.RawGpsResponse = _builder.build()

    /**
     * ```
     * The next 'Raw GPS' state. Warning: this is an advanced feature, use `Position` updates to get the location of the drone!
     * ```
     *
     * `.mavsdk.rpc.telemetry.RawGps raw_gps = 1;`
     */
    public var rawGps: io.mavsdk.telemetry.TelemetryProto.RawGps
      @JvmName("getRawGps")
      get() = _builder.getRawGps()
      @JvmName("setRawGps")
      set(value) {
        _builder.setRawGps(value)
      }
    /**
     * ```
     * The next 'Raw GPS' state. Warning: this is an advanced feature, use `Position` updates to get the location of the drone!
     * ```
     *
     * `.mavsdk.rpc.telemetry.RawGps raw_gps = 1;`
     */
    public fun clearRawGps() {
      _builder.clearRawGps()
    }
    /**
     * ```
     * The next 'Raw GPS' state. Warning: this is an advanced feature, use `Position` updates to get the location of the drone!
     * ```
     *
     * `.mavsdk.rpc.telemetry.RawGps raw_gps = 1;`
     * @return Whether the rawGps field is set.
     */
    public fun hasRawGps(): kotlin.Boolean {
      return _builder.hasRawGps()
    }
  }
}
public inline fun io.mavsdk.telemetry.TelemetryProto.RawGpsResponse.copy(block: `io.mavsdk.telemetry`.RawGpsResponseKt.Dsl.() -> kotlin.Unit): io.mavsdk.telemetry.TelemetryProto.RawGpsResponse =
  `io.mavsdk.telemetry`.RawGpsResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val io.mavsdk.telemetry.TelemetryProto.RawGpsResponseOrBuilder.rawGpsOrNull: io.mavsdk.telemetry.TelemetryProto.RawGps?
  get() = if (hasRawGps()) getRawGps() else null


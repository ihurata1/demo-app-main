// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/manual_control/manual_control.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.manual_control;

@kotlin.jvm.JvmName("-initializesetManualControlInputRequest")
public inline fun setManualControlInputRequest(block: io.mavsdk.manual_control.SetManualControlInputRequestKt.Dsl.() -> kotlin.Unit): io.mavsdk.manual_control.ManualControlProto.SetManualControlInputRequest =
  io.mavsdk.manual_control.SetManualControlInputRequestKt.Dsl._create(io.mavsdk.manual_control.ManualControlProto.SetManualControlInputRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `mavsdk.rpc.manual_control.SetManualControlInputRequest`
 */
public object SetManualControlInputRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.manual_control.ManualControlProto.SetManualControlInputRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.manual_control.ManualControlProto.SetManualControlInputRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.manual_control.ManualControlProto.SetManualControlInputRequest = _builder.build()

    /**
     * <pre>
     * value between -1. to 1. negative -&gt; backwards, positive -&gt; forwards
     * </pre>
     *
     * <code>float x = 1;</code>
     */
    public var x: kotlin.Float
      @JvmName("getX")
      get() = _builder.getX()
      @JvmName("setX")
      set(value) {
        _builder.setX(value)
      }
    /**
     * ```
     * value between -1. to 1. negative -> backwards, positive -> forwards
     * ```
     *
     * `float x = 1;`
     */
    public fun clearX() {
      _builder.clearX()
    }

    /**
     * <pre>
     * value between -1. to 1. negative -&gt; left, positive -&gt; right
     * </pre>
     *
     * <code>float y = 2;</code>
     */
    public var y: kotlin.Float
      @JvmName("getY")
      get() = _builder.getY()
      @JvmName("setY")
      set(value) {
        _builder.setY(value)
      }
    /**
     * ```
     * value between -1. to 1. negative -> left, positive -> right
     * ```
     *
     * `float y = 2;`
     */
    public fun clearY() {
      _builder.clearY()
    }

    /**
     * <pre>
     * value between -1. to 1. negative -&gt; down, positive -&gt; up (usually for now, for multicopter 0 to 1 is expected)
     * </pre>
     *
     * <code>float z = 3;</code>
     */
    public var z: kotlin.Float
      @JvmName("getZ")
      get() = _builder.getZ()
      @JvmName("setZ")
      set(value) {
        _builder.setZ(value)
      }
    /**
     * ```
     * value between -1. to 1. negative -> down, positive -> up (usually for now, for multicopter 0 to 1 is expected)
     * ```
     *
     * `float z = 3;`
     */
    public fun clearZ() {
      _builder.clearZ()
    }

    /**
     * <pre>
     * value between -1. to 1. negative -&gt; turn anti-clockwise (towards the left), positive -&gt; turn clockwise (towards the right)
     * </pre>
     *
     * <code>float r = 4;</code>
     */
    public var r: kotlin.Float
      @JvmName("getR")
      get() = _builder.getR()
      @JvmName("setR")
      set(value) {
        _builder.setR(value)
      }
    /**
     * ```
     * value between -1. to 1. negative -> turn anti-clockwise (towards the left), positive -> turn clockwise (towards the right)
     * ```
     *
     * `float r = 4;`
     */
    public fun clearR() {
      _builder.clearR()
    }
  }
}
public inline fun io.mavsdk.manual_control.ManualControlProto.SetManualControlInputRequest.copy(block: `io.mavsdk.manual_control`.SetManualControlInputRequestKt.Dsl.() -> kotlin.Unit): io.mavsdk.manual_control.ManualControlProto.SetManualControlInputRequest =
  `io.mavsdk.manual_control`.SetManualControlInputRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()


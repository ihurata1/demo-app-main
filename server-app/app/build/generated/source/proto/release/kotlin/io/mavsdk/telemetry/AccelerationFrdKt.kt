// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/telemetry/telemetry.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.telemetry;

@kotlin.jvm.JvmName("-initializeaccelerationFrd")
public inline fun accelerationFrd(block: io.mavsdk.telemetry.AccelerationFrdKt.Dsl.() -> kotlin.Unit): io.mavsdk.telemetry.TelemetryProto.AccelerationFrd =
  io.mavsdk.telemetry.AccelerationFrdKt.Dsl._create(io.mavsdk.telemetry.TelemetryProto.AccelerationFrd.newBuilder()).apply { block() }._build()
/**
 * ```
 * AccelerationFrd message type.
 * ```
 *
 * Protobuf type `mavsdk.rpc.telemetry.AccelerationFrd`
 */
public object AccelerationFrdKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.telemetry.TelemetryProto.AccelerationFrd.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.telemetry.TelemetryProto.AccelerationFrd.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.telemetry.TelemetryProto.AccelerationFrd = _builder.build()

    /**
     * <pre>
     * Acceleration in forward direction in metres per second^2
     * </pre>
     *
     * <code>float forward_m_s2 = 1 [(.mavsdk.options.default_value) = "NaN"];</code>
     */
    public var forwardMS2: kotlin.Float
      @JvmName("getForwardMS2")
      get() = _builder.getForwardMS2()
      @JvmName("setForwardMS2")
      set(value) {
        _builder.setForwardMS2(value)
      }
    /**
     * ```
     * Acceleration in forward direction in metres per second^2
     * ```
     *
     * `float forward_m_s2 = 1 [(.mavsdk.options.default_value) = "NaN"];`
     */
    public fun clearForwardMS2() {
      _builder.clearForwardMS2()
    }

    /**
     * <pre>
     * Acceleration in right direction in metres per second^2
     * </pre>
     *
     * <code>float right_m_s2 = 2 [(.mavsdk.options.default_value) = "NaN"];</code>
     */
    public var rightMS2: kotlin.Float
      @JvmName("getRightMS2")
      get() = _builder.getRightMS2()
      @JvmName("setRightMS2")
      set(value) {
        _builder.setRightMS2(value)
      }
    /**
     * ```
     * Acceleration in right direction in metres per second^2
     * ```
     *
     * `float right_m_s2 = 2 [(.mavsdk.options.default_value) = "NaN"];`
     */
    public fun clearRightMS2() {
      _builder.clearRightMS2()
    }

    /**
     * <pre>
     * Acceleration in down direction in metres per second^2
     * </pre>
     *
     * <code>float down_m_s2 = 3 [(.mavsdk.options.default_value) = "NaN"];</code>
     */
    public var downMS2: kotlin.Float
      @JvmName("getDownMS2")
      get() = _builder.getDownMS2()
      @JvmName("setDownMS2")
      set(value) {
        _builder.setDownMS2(value)
      }
    /**
     * ```
     * Acceleration in down direction in metres per second^2
     * ```
     *
     * `float down_m_s2 = 3 [(.mavsdk.options.default_value) = "NaN"];`
     */
    public fun clearDownMS2() {
      _builder.clearDownMS2()
    }
  }
}
public inline fun io.mavsdk.telemetry.TelemetryProto.AccelerationFrd.copy(block: `io.mavsdk.telemetry`.AccelerationFrdKt.Dsl.() -> kotlin.Unit): io.mavsdk.telemetry.TelemetryProto.AccelerationFrd =
  `io.mavsdk.telemetry`.AccelerationFrdKt.Dsl._create(this.toBuilder()).apply { block() }._build()


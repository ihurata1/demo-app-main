// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/camera/camera.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.camera;

@kotlin.jvm.JvmName("-initializestatus")
public inline fun status(block: io.mavsdk.camera.StatusKt.Dsl.() -> kotlin.Unit): io.mavsdk.camera.CameraProto.Status =
  io.mavsdk.camera.StatusKt.Dsl._create(io.mavsdk.camera.CameraProto.Status.newBuilder()).apply { block() }._build()
/**
 * ```
 * Information about the camera status.
 * ```
 *
 * Protobuf type `mavsdk.rpc.camera.Status`
 */
public object StatusKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.camera.CameraProto.Status.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.camera.CameraProto.Status.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.camera.CameraProto.Status = _builder.build()

    /**
     * <pre>
     * Whether video recording is currently in process
     * </pre>
     *
     * <code>bool video_on = 1;</code>
     */
    public var videoOn: kotlin.Boolean
      @JvmName("getVideoOn")
      get() = _builder.getVideoOn()
      @JvmName("setVideoOn")
      set(value) {
        _builder.setVideoOn(value)
      }
    /**
     * ```
     * Whether video recording is currently in process
     * ```
     *
     * `bool video_on = 1;`
     */
    public fun clearVideoOn() {
      _builder.clearVideoOn()
    }

    /**
     * <pre>
     * Whether a photo interval is currently in process
     * </pre>
     *
     * <code>bool photo_interval_on = 2;</code>
     */
    public var photoIntervalOn: kotlin.Boolean
      @JvmName("getPhotoIntervalOn")
      get() = _builder.getPhotoIntervalOn()
      @JvmName("setPhotoIntervalOn")
      set(value) {
        _builder.setPhotoIntervalOn(value)
      }
    /**
     * ```
     * Whether a photo interval is currently in process
     * ```
     *
     * `bool photo_interval_on = 2;`
     */
    public fun clearPhotoIntervalOn() {
      _builder.clearPhotoIntervalOn()
    }

    /**
     * <pre>
     * Used storage (in MiB)
     * </pre>
     *
     * <code>float used_storage_mib = 3;</code>
     */
    public var usedStorageMib: kotlin.Float
      @JvmName("getUsedStorageMib")
      get() = _builder.getUsedStorageMib()
      @JvmName("setUsedStorageMib")
      set(value) {
        _builder.setUsedStorageMib(value)
      }
    /**
     * ```
     * Used storage (in MiB)
     * ```
     *
     * `float used_storage_mib = 3;`
     */
    public fun clearUsedStorageMib() {
      _builder.clearUsedStorageMib()
    }

    /**
     * <pre>
     * Available storage (in MiB)
     * </pre>
     *
     * <code>float available_storage_mib = 4;</code>
     */
    public var availableStorageMib: kotlin.Float
      @JvmName("getAvailableStorageMib")
      get() = _builder.getAvailableStorageMib()
      @JvmName("setAvailableStorageMib")
      set(value) {
        _builder.setAvailableStorageMib(value)
      }
    /**
     * ```
     * Available storage (in MiB)
     * ```
     *
     * `float available_storage_mib = 4;`
     */
    public fun clearAvailableStorageMib() {
      _builder.clearAvailableStorageMib()
    }

    /**
     * <pre>
     * Total storage (in MiB)
     * </pre>
     *
     * <code>float total_storage_mib = 5;</code>
     */
    public var totalStorageMib: kotlin.Float
      @JvmName("getTotalStorageMib")
      get() = _builder.getTotalStorageMib()
      @JvmName("setTotalStorageMib")
      set(value) {
        _builder.setTotalStorageMib(value)
      }
    /**
     * ```
     * Total storage (in MiB)
     * ```
     *
     * `float total_storage_mib = 5;`
     */
    public fun clearTotalStorageMib() {
      _builder.clearTotalStorageMib()
    }

    /**
     * <pre>
     * Elapsed time since starting the video recording (in seconds)
     * </pre>
     *
     * <code>float recording_time_s = 6;</code>
     */
    public var recordingTimeS: kotlin.Float
      @JvmName("getRecordingTimeS")
      get() = _builder.getRecordingTimeS()
      @JvmName("setRecordingTimeS")
      set(value) {
        _builder.setRecordingTimeS(value)
      }
    /**
     * ```
     * Elapsed time since starting the video recording (in seconds)
     * ```
     *
     * `float recording_time_s = 6;`
     */
    public fun clearRecordingTimeS() {
      _builder.clearRecordingTimeS()
    }

    /**
     * ```
     * Current folder name where media are saved
     * ```
     *
     * `string media_folder_name = 7;`
     */
    public var mediaFolderName: kotlin.String
      @JvmName("getMediaFolderName")
      get() = _builder.getMediaFolderName()
      @JvmName("setMediaFolderName")
      set(value) {
        _builder.setMediaFolderName(value)
      }
    /**
     * ```
     * Current folder name where media are saved
     * ```
     *
     * `string media_folder_name = 7;`
     */
    public fun clearMediaFolderName() {
      _builder.clearMediaFolderName()
    }

    /**
     * ```
     * Storage status
     * ```
     *
     * `.mavsdk.rpc.camera.Status.StorageStatus storage_status = 8;`
     */
    public var storageStatus: io.mavsdk.camera.CameraProto.Status.StorageStatus
      @JvmName("getStorageStatus")
      get() = _builder.getStorageStatus()
      @JvmName("setStorageStatus")
      set(value) {
        _builder.setStorageStatus(value)
      }
    public var storageStatusValue: kotlin.Int
      @JvmName("getStorageStatusValue")
      get() = _builder.getStorageStatusValue()
      @JvmName("setStorageStatusValue")
      set(value) {
        _builder.setStorageStatusValue(value)
      }
    /**
     * ```
     * Storage status
     * ```
     *
     * `.mavsdk.rpc.camera.Status.StorageStatus storage_status = 8;`
     */
    public fun clearStorageStatus() {
      _builder.clearStorageStatus()
    }

    /**
     * <pre>
     * Storage ID starting at 1
     * </pre>
     *
     * <code>uint32 storage_id = 9;</code>
     */
    public var storageId: kotlin.Int
      @JvmName("getStorageId")
      get() = _builder.getStorageId()
      @JvmName("setStorageId")
      set(value) {
        _builder.setStorageId(value)
      }
    /**
     * ```
     * Storage ID starting at 1
     * ```
     *
     * `uint32 storage_id = 9;`
     */
    public fun clearStorageId() {
      _builder.clearStorageId()
    }

    /**
     * ```
     * Storage type
     * ```
     *
     * `.mavsdk.rpc.camera.Status.StorageType storage_type = 10;`
     */
    public var storageType: io.mavsdk.camera.CameraProto.Status.StorageType
      @JvmName("getStorageType")
      get() = _builder.getStorageType()
      @JvmName("setStorageType")
      set(value) {
        _builder.setStorageType(value)
      }
    public var storageTypeValue: kotlin.Int
      @JvmName("getStorageTypeValue")
      get() = _builder.getStorageTypeValue()
      @JvmName("setStorageTypeValue")
      set(value) {
        _builder.setStorageTypeValue(value)
      }
    /**
     * ```
     * Storage type
     * ```
     *
     * `.mavsdk.rpc.camera.Status.StorageType storage_type = 10;`
     */
    public fun clearStorageType() {
      _builder.clearStorageType()
    }
  }
}
public inline fun io.mavsdk.camera.CameraProto.Status.copy(block: `io.mavsdk.camera`.StatusKt.Dsl.() -> kotlin.Unit): io.mavsdk.camera.CameraProto.Status =
  `io.mavsdk.camera`.StatusKt.Dsl._create(this.toBuilder()).apply { block() }._build()


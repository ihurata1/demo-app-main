// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mavsdk/geofence/geofence.proto

// Protobuf Java Version: 3.25.3
package io.mavsdk.geofence;

public final class GeofenceProto {
  private GeofenceProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  /**
   * <pre>
   * Geofence types.
   * </pre>
   *
   * Protobuf enum {@code mavsdk.rpc.geofence.FenceType}
   */
  public enum FenceType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     * Type representing an inclusion fence
     * </pre>
     *
     * <code>FENCE_TYPE_INCLUSION = 0;</code>
     */
    FENCE_TYPE_INCLUSION(0),
    /**
     * <pre>
     * Type representing an exclusion fence
     * </pre>
     *
     * <code>FENCE_TYPE_EXCLUSION = 1;</code>
     */
    FENCE_TYPE_EXCLUSION(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Type representing an inclusion fence
     * </pre>
     *
     * <code>FENCE_TYPE_INCLUSION = 0;</code>
     */
    public static final int FENCE_TYPE_INCLUSION_VALUE = 0;
    /**
     * <pre>
     * Type representing an exclusion fence
     * </pre>
     *
     * <code>FENCE_TYPE_EXCLUSION = 1;</code>
     */
    public static final int FENCE_TYPE_EXCLUSION_VALUE = 1;


    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static FenceType valueOf(int value) {
      return forNumber(value);
    }

    public static FenceType forNumber(int value) {
      switch (value) {
        case 0: return FENCE_TYPE_INCLUSION;
        case 1: return FENCE_TYPE_EXCLUSION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<FenceType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        FenceType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FenceType>() {
            @java.lang.Override
            public FenceType findValueByNumber(int number) {
              return FenceType.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return FenceTypeVerifier.INSTANCE;
    }

    private static final class FenceTypeVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new FenceTypeVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return FenceType.forNumber(number) != null;
            }
          };

    private final int value;

    private FenceType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:mavsdk.rpc.geofence.FenceType)
  }

  public interface PointOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.geofence.Point)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Latitude in degrees (range: -90 to +90)
     * </pre>
     *
     * <code>double latitude_deg = 1;</code>
     * @return The latitudeDeg.
     */
    double getLatitudeDeg();

    /**
     * <pre>
     * Longitude in degrees (range: -180 to +180)
     * </pre>
     *
     * <code>double longitude_deg = 2;</code>
     * @return The longitudeDeg.
     */
    double getLongitudeDeg();
  }
  /**
   * <pre>
   * Point type.
   * </pre>
   *
   * Protobuf type {@code mavsdk.rpc.geofence.Point}
   */
  public  static final class Point extends
      com.google.protobuf.GeneratedMessageLite<
          Point, Point.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.geofence.Point)
      PointOrBuilder {
    private Point() {
    }
    public static final int LATITUDE_DEG_FIELD_NUMBER = 1;
    private double latitudeDeg_;
    /**
     * <pre>
     * Latitude in degrees (range: -90 to +90)
     * </pre>
     *
     * <code>double latitude_deg = 1;</code>
     * @return The latitudeDeg.
     */
    @java.lang.Override
    public double getLatitudeDeg() {
      return latitudeDeg_;
    }
    /**
     * <pre>
     * Latitude in degrees (range: -90 to +90)
     * </pre>
     *
     * <code>double latitude_deg = 1;</code>
     * @param value The latitudeDeg to set.
     */
    private void setLatitudeDeg(double value) {
      
      latitudeDeg_ = value;
    }
    /**
     * <pre>
     * Latitude in degrees (range: -90 to +90)
     * </pre>
     *
     * <code>double latitude_deg = 1;</code>
     */
    private void clearLatitudeDeg() {

      latitudeDeg_ = 0D;
    }

    public static final int LONGITUDE_DEG_FIELD_NUMBER = 2;
    private double longitudeDeg_;
    /**
     * <pre>
     * Longitude in degrees (range: -180 to +180)
     * </pre>
     *
     * <code>double longitude_deg = 2;</code>
     * @return The longitudeDeg.
     */
    @java.lang.Override
    public double getLongitudeDeg() {
      return longitudeDeg_;
    }
    /**
     * <pre>
     * Longitude in degrees (range: -180 to +180)
     * </pre>
     *
     * <code>double longitude_deg = 2;</code>
     * @param value The longitudeDeg to set.
     */
    private void setLongitudeDeg(double value) {
      
      longitudeDeg_ = value;
    }
    /**
     * <pre>
     * Longitude in degrees (range: -180 to +180)
     * </pre>
     *
     * <code>double longitude_deg = 2;</code>
     */
    private void clearLongitudeDeg() {

      longitudeDeg_ = 0D;
    }

    public static io.mavsdk.geofence.GeofenceProto.Point parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.geofence.GeofenceProto.Point parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.geofence.GeofenceProto.Point parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.geofence.GeofenceProto.Point parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.geofence.GeofenceProto.Point parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.geofence.GeofenceProto.Point parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.geofence.GeofenceProto.Point parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.geofence.GeofenceProto.Point parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.geofence.GeofenceProto.Point parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.geofence.GeofenceProto.Point parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.geofence.GeofenceProto.Point parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.geofence.GeofenceProto.Point parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.geofence.GeofenceProto.Point prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Point type.
     * </pre>
     *
     * Protobuf type {@code mavsdk.rpc.geofence.Point}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.geofence.GeofenceProto.Point, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.geofence.Point)
        io.mavsdk.geofence.GeofenceProto.PointOrBuilder {
      // Construct using io.mavsdk.geofence.GeofenceProto.Point.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Latitude in degrees (range: -90 to +90)
       * </pre>
       *
       * <code>double latitude_deg = 1;</code>
       * @return The latitudeDeg.
       */
      @java.lang.Override
      public double getLatitudeDeg() {
        return instance.getLatitudeDeg();
      }
      /**
       * <pre>
       * Latitude in degrees (range: -90 to +90)
       * </pre>
       *
       * <code>double latitude_deg = 1;</code>
       * @param value The latitudeDeg to set.
       * @return This builder for chaining.
       */
      public Builder setLatitudeDeg(double value) {
        copyOnWrite();
        instance.setLatitudeDeg(value);
        return this;
      }
      /**
       * <pre>
       * Latitude in degrees (range: -90 to +90)
       * </pre>
       *
       * <code>double latitude_deg = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearLatitudeDeg() {
        copyOnWrite();
        instance.clearLatitudeDeg();
        return this;
      }

      /**
       * <pre>
       * Longitude in degrees (range: -180 to +180)
       * </pre>
       *
       * <code>double longitude_deg = 2;</code>
       * @return The longitudeDeg.
       */
      @java.lang.Override
      public double getLongitudeDeg() {
        return instance.getLongitudeDeg();
      }
      /**
       * <pre>
       * Longitude in degrees (range: -180 to +180)
       * </pre>
       *
       * <code>double longitude_deg = 2;</code>
       * @param value The longitudeDeg to set.
       * @return This builder for chaining.
       */
      public Builder setLongitudeDeg(double value) {
        copyOnWrite();
        instance.setLongitudeDeg(value);
        return this;
      }
      /**
       * <pre>
       * Longitude in degrees (range: -180 to +180)
       * </pre>
       *
       * <code>double longitude_deg = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLongitudeDeg() {
        copyOnWrite();
        instance.clearLongitudeDeg();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.geofence.Point)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.geofence.GeofenceProto.Point();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "latitudeDeg_",
              "longitudeDeg_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.geofence.GeofenceProto.Point> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.geofence.GeofenceProto.Point.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.geofence.GeofenceProto.Point>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.geofence.Point)
    private static final io.mavsdk.geofence.GeofenceProto.Point DEFAULT_INSTANCE;
    static {
      Point defaultInstance = new Point();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Point.class, defaultInstance);
    }

    public static io.mavsdk.geofence.GeofenceProto.Point getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Point> PARSER;

    public static com.google.protobuf.Parser<Point> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface PolygonOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.geofence.Polygon)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Points defining the polygon
     * </pre>
     *
     * <code>repeated .mavsdk.rpc.geofence.Point points = 1;</code>
     */
    java.util.List<io.mavsdk.geofence.GeofenceProto.Point> 
        getPointsList();
    /**
     * <pre>
     * Points defining the polygon
     * </pre>
     *
     * <code>repeated .mavsdk.rpc.geofence.Point points = 1;</code>
     */
    io.mavsdk.geofence.GeofenceProto.Point getPoints(int index);
    /**
     * <pre>
     * Points defining the polygon
     * </pre>
     *
     * <code>repeated .mavsdk.rpc.geofence.Point points = 1;</code>
     */
    int getPointsCount();

    /**
     * <pre>
     * Fence type
     * </pre>
     *
     * <code>.mavsdk.rpc.geofence.FenceType fence_type = 2;</code>
     * @return The enum numeric value on the wire for fenceType.
     */
    int getFenceTypeValue();
    /**
     * <pre>
     * Fence type
     * </pre>
     *
     * <code>.mavsdk.rpc.geofence.FenceType fence_type = 2;</code>
     * @return The fenceType.
     */
    io.mavsdk.geofence.GeofenceProto.FenceType getFenceType();
  }
  /**
   * <pre>
   * Polygon type.
   * </pre>
   *
   * Protobuf type {@code mavsdk.rpc.geofence.Polygon}
   */
  public  static final class Polygon extends
      com.google.protobuf.GeneratedMessageLite<
          Polygon, Polygon.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.geofence.Polygon)
      PolygonOrBuilder {
    private Polygon() {
      points_ = emptyProtobufList();
    }
    public static final int POINTS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<io.mavsdk.geofence.GeofenceProto.Point> points_;
    /**
     * <pre>
     * Points defining the polygon
     * </pre>
     *
     * <code>repeated .mavsdk.rpc.geofence.Point points = 1;</code>
     */
    @java.lang.Override
    public java.util.List<io.mavsdk.geofence.GeofenceProto.Point> getPointsList() {
      return points_;
    }
    /**
     * <pre>
     * Points defining the polygon
     * </pre>
     *
     * <code>repeated .mavsdk.rpc.geofence.Point points = 1;</code>
     */
    public java.util.List<? extends io.mavsdk.geofence.GeofenceProto.PointOrBuilder> 
        getPointsOrBuilderList() {
      return points_;
    }
    /**
     * <pre>
     * Points defining the polygon
     * </pre>
     *
     * <code>repeated .mavsdk.rpc.geofence.Point points = 1;</code>
     */
    @java.lang.Override
    public int getPointsCount() {
      return points_.size();
    }
    /**
     * <pre>
     * Points defining the polygon
     * </pre>
     *
     * <code>repeated .mavsdk.rpc.geofence.Point points = 1;</code>
     */
    @java.lang.Override
    public io.mavsdk.geofence.GeofenceProto.Point getPoints(int index) {
      return points_.get(index);
    }
    /**
     * <pre>
     * Points defining the polygon
     * </pre>
     *
     * <code>repeated .mavsdk.rpc.geofence.Point points = 1;</code>
     */
    public io.mavsdk.geofence.GeofenceProto.PointOrBuilder getPointsOrBuilder(
        int index) {
      return points_.get(index);
    }
    private void ensurePointsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<io.mavsdk.geofence.GeofenceProto.Point> tmp = points_;
      if (!tmp.isModifiable()) {
        points_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * Points defining the polygon
     * </pre>
     *
     * <code>repeated .mavsdk.rpc.geofence.Point points = 1;</code>
     */
    private void setPoints(
        int index, io.mavsdk.geofence.GeofenceProto.Point value) {
      value.getClass();
  ensurePointsIsMutable();
      points_.set(index, value);
    }
    /**
     * <pre>
     * Points defining the polygon
     * </pre>
     *
     * <code>repeated .mavsdk.rpc.geofence.Point points = 1;</code>
     */
    private void addPoints(io.mavsdk.geofence.GeofenceProto.Point value) {
      value.getClass();
  ensurePointsIsMutable();
      points_.add(value);
    }
    /**
     * <pre>
     * Points defining the polygon
     * </pre>
     *
     * <code>repeated .mavsdk.rpc.geofence.Point points = 1;</code>
     */
    private void addPoints(
        int index, io.mavsdk.geofence.GeofenceProto.Point value) {
      value.getClass();
  ensurePointsIsMutable();
      points_.add(index, value);
    }
    /**
     * <pre>
     * Points defining the polygon
     * </pre>
     *
     * <code>repeated .mavsdk.rpc.geofence.Point points = 1;</code>
     */
    private void addAllPoints(
        java.lang.Iterable<? extends io.mavsdk.geofence.GeofenceProto.Point> values) {
      ensurePointsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, points_);
    }
    /**
     * <pre>
     * Points defining the polygon
     * </pre>
     *
     * <code>repeated .mavsdk.rpc.geofence.Point points = 1;</code>
     */
    private void clearPoints() {
      points_ = emptyProtobufList();
    }
    /**
     * <pre>
     * Points defining the polygon
     * </pre>
     *
     * <code>repeated .mavsdk.rpc.geofence.Point points = 1;</code>
     */
    private void removePoints(int index) {
      ensurePointsIsMutable();
      points_.remove(index);
    }

    public static final int FENCE_TYPE_FIELD_NUMBER = 2;
    private int fenceType_;
    /**
     * <pre>
     * Fence type
     * </pre>
     *
     * <code>.mavsdk.rpc.geofence.FenceType fence_type = 2;</code>
     * @return The enum numeric value on the wire for fenceType.
     */
    @java.lang.Override
    public int getFenceTypeValue() {
      return fenceType_;
    }
    /**
     * <pre>
     * Fence type
     * </pre>
     *
     * <code>.mavsdk.rpc.geofence.FenceType fence_type = 2;</code>
     * @return The fenceType.
     */
    @java.lang.Override
    public io.mavsdk.geofence.GeofenceProto.FenceType getFenceType() {
      io.mavsdk.geofence.GeofenceProto.FenceType result = io.mavsdk.geofence.GeofenceProto.FenceType.forNumber(fenceType_);
      return result == null ? io.mavsdk.geofence.GeofenceProto.FenceType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Fence type
     * </pre>
     *
     * <code>.mavsdk.rpc.geofence.FenceType fence_type = 2;</code>
     * @param value The enum numeric value on the wire for fenceType to set.
     */
    private void setFenceTypeValue(int value) {
        fenceType_ = value;
    }
    /**
     * <pre>
     * Fence type
     * </pre>
     *
     * <code>.mavsdk.rpc.geofence.FenceType fence_type = 2;</code>
     * @param value The fenceType to set.
     */
    private void setFenceType(io.mavsdk.geofence.GeofenceProto.FenceType value) {
      fenceType_ = value.getNumber();

    }
    /**
     * <pre>
     * Fence type
     * </pre>
     *
     * <code>.mavsdk.rpc.geofence.FenceType fence_type = 2;</code>
     */
    private void clearFenceType() {

      fenceType_ = 0;
    }

    public static io.mavsdk.geofence.GeofenceProto.Polygon parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.geofence.GeofenceProto.Polygon parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.geofence.GeofenceProto.Polygon parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.geofence.GeofenceProto.Polygon parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.geofence.GeofenceProto.Polygon parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.geofence.GeofenceProto.Polygon parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.geofence.GeofenceProto.Polygon parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.geofence.GeofenceProto.Polygon parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.geofence.GeofenceProto.Polygon parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.geofence.GeofenceProto.Polygon parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.geofence.GeofenceProto.Polygon parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.geofence.GeofenceProto.Polygon parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.geofence.GeofenceProto.Polygon prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Polygon type.
     * </pre>
     *
     * Protobuf type {@code mavsdk.rpc.geofence.Polygon}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.geofence.GeofenceProto.Polygon, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.geofence.Polygon)
        io.mavsdk.geofence.GeofenceProto.PolygonOrBuilder {
      // Construct using io.mavsdk.geofence.GeofenceProto.Polygon.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Points defining the polygon
       * </pre>
       *
       * <code>repeated .mavsdk.rpc.geofence.Point points = 1;</code>
       */
      @java.lang.Override
      public java.util.List<io.mavsdk.geofence.GeofenceProto.Point> getPointsList() {
        return java.util.Collections.unmodifiableList(
            instance.getPointsList());
      }
      /**
       * <pre>
       * Points defining the polygon
       * </pre>
       *
       * <code>repeated .mavsdk.rpc.geofence.Point points = 1;</code>
       */
      @java.lang.Override
      public int getPointsCount() {
        return instance.getPointsCount();
      }/**
       * <pre>
       * Points defining the polygon
       * </pre>
       *
       * <code>repeated .mavsdk.rpc.geofence.Point points = 1;</code>
       */
      @java.lang.Override
      public io.mavsdk.geofence.GeofenceProto.Point getPoints(int index) {
        return instance.getPoints(index);
      }
      /**
       * <pre>
       * Points defining the polygon
       * </pre>
       *
       * <code>repeated .mavsdk.rpc.geofence.Point points = 1;</code>
       */
      public Builder setPoints(
          int index, io.mavsdk.geofence.GeofenceProto.Point value) {
        copyOnWrite();
        instance.setPoints(index, value);
        return this;
      }
      /**
       * <pre>
       * Points defining the polygon
       * </pre>
       *
       * <code>repeated .mavsdk.rpc.geofence.Point points = 1;</code>
       */
      public Builder setPoints(
          int index, io.mavsdk.geofence.GeofenceProto.Point.Builder builderForValue) {
        copyOnWrite();
        instance.setPoints(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Points defining the polygon
       * </pre>
       *
       * <code>repeated .mavsdk.rpc.geofence.Point points = 1;</code>
       */
      public Builder addPoints(io.mavsdk.geofence.GeofenceProto.Point value) {
        copyOnWrite();
        instance.addPoints(value);
        return this;
      }
      /**
       * <pre>
       * Points defining the polygon
       * </pre>
       *
       * <code>repeated .mavsdk.rpc.geofence.Point points = 1;</code>
       */
      public Builder addPoints(
          int index, io.mavsdk.geofence.GeofenceProto.Point value) {
        copyOnWrite();
        instance.addPoints(index, value);
        return this;
      }
      /**
       * <pre>
       * Points defining the polygon
       * </pre>
       *
       * <code>repeated .mavsdk.rpc.geofence.Point points = 1;</code>
       */
      public Builder addPoints(
          io.mavsdk.geofence.GeofenceProto.Point.Builder builderForValue) {
        copyOnWrite();
        instance.addPoints(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Points defining the polygon
       * </pre>
       *
       * <code>repeated .mavsdk.rpc.geofence.Point points = 1;</code>
       */
      public Builder addPoints(
          int index, io.mavsdk.geofence.GeofenceProto.Point.Builder builderForValue) {
        copyOnWrite();
        instance.addPoints(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Points defining the polygon
       * </pre>
       *
       * <code>repeated .mavsdk.rpc.geofence.Point points = 1;</code>
       */
      public Builder addAllPoints(
          java.lang.Iterable<? extends io.mavsdk.geofence.GeofenceProto.Point> values) {
        copyOnWrite();
        instance.addAllPoints(values);
        return this;
      }
      /**
       * <pre>
       * Points defining the polygon
       * </pre>
       *
       * <code>repeated .mavsdk.rpc.geofence.Point points = 1;</code>
       */
      public Builder clearPoints() {
        copyOnWrite();
        instance.clearPoints();
        return this;
      }
      /**
       * <pre>
       * Points defining the polygon
       * </pre>
       *
       * <code>repeated .mavsdk.rpc.geofence.Point points = 1;</code>
       */
      public Builder removePoints(int index) {
        copyOnWrite();
        instance.removePoints(index);
        return this;
      }

      /**
       * <pre>
       * Fence type
       * </pre>
       *
       * <code>.mavsdk.rpc.geofence.FenceType fence_type = 2;</code>
       * @return The enum numeric value on the wire for fenceType.
       */
      @java.lang.Override
      public int getFenceTypeValue() {
        return instance.getFenceTypeValue();
      }
      /**
       * <pre>
       * Fence type
       * </pre>
       *
       * <code>.mavsdk.rpc.geofence.FenceType fence_type = 2;</code>
       * @param value The fenceType to set.
       * @return This builder for chaining.
       */
      public Builder setFenceTypeValue(int value) {
        copyOnWrite();
        instance.setFenceTypeValue(value);
        return this;
      }
      /**
       * <pre>
       * Fence type
       * </pre>
       *
       * <code>.mavsdk.rpc.geofence.FenceType fence_type = 2;</code>
       * @return The fenceType.
       */
      @java.lang.Override
      public io.mavsdk.geofence.GeofenceProto.FenceType getFenceType() {
        return instance.getFenceType();
      }
      /**
       * <pre>
       * Fence type
       * </pre>
       *
       * <code>.mavsdk.rpc.geofence.FenceType fence_type = 2;</code>
       * @param value The enum numeric value on the wire for fenceType to set.
       * @return This builder for chaining.
       */
      public Builder setFenceType(io.mavsdk.geofence.GeofenceProto.FenceType value) {
        copyOnWrite();
        instance.setFenceType(value);
        return this;
      }
      /**
       * <pre>
       * Fence type
       * </pre>
       *
       * <code>.mavsdk.rpc.geofence.FenceType fence_type = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearFenceType() {
        copyOnWrite();
        instance.clearFenceType();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.geofence.Polygon)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.geofence.GeofenceProto.Polygon();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "points_",
              io.mavsdk.geofence.GeofenceProto.Point.class,
              "fenceType_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0001\u0000\u0001\u001b\u0002\f" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.geofence.GeofenceProto.Polygon> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.geofence.GeofenceProto.Polygon.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.geofence.GeofenceProto.Polygon>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.geofence.Polygon)
    private static final io.mavsdk.geofence.GeofenceProto.Polygon DEFAULT_INSTANCE;
    static {
      Polygon defaultInstance = new Polygon();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Polygon.class, defaultInstance);
    }

    public static io.mavsdk.geofence.GeofenceProto.Polygon getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Polygon> PARSER;

    public static com.google.protobuf.Parser<Polygon> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface CircleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.geofence.Circle)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Point defining the center
     * </pre>
     *
     * <code>.mavsdk.rpc.geofence.Point point = 1;</code>
     * @return Whether the point field is set.
     */
    boolean hasPoint();
    /**
     * <pre>
     * Point defining the center
     * </pre>
     *
     * <code>.mavsdk.rpc.geofence.Point point = 1;</code>
     * @return The point.
     */
    io.mavsdk.geofence.GeofenceProto.Point getPoint();

    /**
     * <pre>
     * Radius of the circular fence
     * </pre>
     *
     * <code>float radius = 2 [(.mavsdk.options.default_value) = "NaN"];</code>
     * @return The radius.
     */
    float getRadius();

    /**
     * <pre>
     * Fence type
     * </pre>
     *
     * <code>.mavsdk.rpc.geofence.FenceType fence_type = 3;</code>
     * @return The enum numeric value on the wire for fenceType.
     */
    int getFenceTypeValue();
    /**
     * <pre>
     * Fence type
     * </pre>
     *
     * <code>.mavsdk.rpc.geofence.FenceType fence_type = 3;</code>
     * @return The fenceType.
     */
    io.mavsdk.geofence.GeofenceProto.FenceType getFenceType();
  }
  /**
   * <pre>
   * Circular type.
   * </pre>
   *
   * Protobuf type {@code mavsdk.rpc.geofence.Circle}
   */
  public  static final class Circle extends
      com.google.protobuf.GeneratedMessageLite<
          Circle, Circle.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.geofence.Circle)
      CircleOrBuilder {
    private Circle() {
    }
    private int bitField0_;
    public static final int POINT_FIELD_NUMBER = 1;
    private io.mavsdk.geofence.GeofenceProto.Point point_;
    /**
     * <pre>
     * Point defining the center
     * </pre>
     *
     * <code>.mavsdk.rpc.geofence.Point point = 1;</code>
     */
    @java.lang.Override
    public boolean hasPoint() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Point defining the center
     * </pre>
     *
     * <code>.mavsdk.rpc.geofence.Point point = 1;</code>
     */
    @java.lang.Override
    public io.mavsdk.geofence.GeofenceProto.Point getPoint() {
      return point_ == null ? io.mavsdk.geofence.GeofenceProto.Point.getDefaultInstance() : point_;
    }
    /**
     * <pre>
     * Point defining the center
     * </pre>
     *
     * <code>.mavsdk.rpc.geofence.Point point = 1;</code>
     */
    private void setPoint(io.mavsdk.geofence.GeofenceProto.Point value) {
      value.getClass();
  point_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <pre>
     * Point defining the center
     * </pre>
     *
     * <code>.mavsdk.rpc.geofence.Point point = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergePoint(io.mavsdk.geofence.GeofenceProto.Point value) {
      value.getClass();
  if (point_ != null &&
          point_ != io.mavsdk.geofence.GeofenceProto.Point.getDefaultInstance()) {
        point_ =
          io.mavsdk.geofence.GeofenceProto.Point.newBuilder(point_).mergeFrom(value).buildPartial();
      } else {
        point_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <pre>
     * Point defining the center
     * </pre>
     *
     * <code>.mavsdk.rpc.geofence.Point point = 1;</code>
     */
    private void clearPoint() {  point_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static final int RADIUS_FIELD_NUMBER = 2;
    private float radius_;
    /**
     * <pre>
     * Radius of the circular fence
     * </pre>
     *
     * <code>float radius = 2 [(.mavsdk.options.default_value) = "NaN"];</code>
     * @return The radius.
     */
    @java.lang.Override
    public float getRadius() {
      return radius_;
    }
    /**
     * <pre>
     * Radius of the circular fence
     * </pre>
     *
     * <code>float radius = 2 [(.mavsdk.options.default_value) = "NaN"];</code>
     * @param value The radius to set.
     */
    private void setRadius(float value) {
      
      radius_ = value;
    }
    /**
     * <pre>
     * Radius of the circular fence
     * </pre>
     *
     * <code>float radius = 2 [(.mavsdk.options.default_value) = "NaN"];</code>
     */
    private void clearRadius() {

      radius_ = 0F;
    }

    public static final int FENCE_TYPE_FIELD_NUMBER = 3;
    private int fenceType_;
    /**
     * <pre>
     * Fence type
     * </pre>
     *
     * <code>.mavsdk.rpc.geofence.FenceType fence_type = 3;</code>
     * @return The enum numeric value on the wire for fenceType.
     */
    @java.lang.Override
    public int getFenceTypeValue() {
      return fenceType_;
    }
    /**
     * <pre>
     * Fence type
     * </pre>
     *
     * <code>.mavsdk.rpc.geofence.FenceType fence_type = 3;</code>
     * @return The fenceType.
     */
    @java.lang.Override
    public io.mavsdk.geofence.GeofenceProto.FenceType getFenceType() {
      io.mavsdk.geofence.GeofenceProto.FenceType result = io.mavsdk.geofence.GeofenceProto.FenceType.forNumber(fenceType_);
      return result == null ? io.mavsdk.geofence.GeofenceProto.FenceType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Fence type
     * </pre>
     *
     * <code>.mavsdk.rpc.geofence.FenceType fence_type = 3;</code>
     * @param value The enum numeric value on the wire for fenceType to set.
     */
    private void setFenceTypeValue(int value) {
        fenceType_ = value;
    }
    /**
     * <pre>
     * Fence type
     * </pre>
     *
     * <code>.mavsdk.rpc.geofence.FenceType fence_type = 3;</code>
     * @param value The fenceType to set.
     */
    private void setFenceType(io.mavsdk.geofence.GeofenceProto.FenceType value) {
      fenceType_ = value.getNumber();

    }
    /**
     * <pre>
     * Fence type
     * </pre>
     *
     * <code>.mavsdk.rpc.geofence.FenceType fence_type = 3;</code>
     */
    private void clearFenceType() {

      fenceType_ = 0;
    }

    public static io.mavsdk.geofence.GeofenceProto.Circle parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.geofence.GeofenceProto.Circle parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.geofence.GeofenceProto.Circle parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.geofence.GeofenceProto.Circle parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.geofence.GeofenceProto.Circle parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.geofence.GeofenceProto.Circle parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.geofence.GeofenceProto.Circle parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.geofence.GeofenceProto.Circle parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.geofence.GeofenceProto.Circle parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.geofence.GeofenceProto.Circle parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.geofence.GeofenceProto.Circle parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.geofence.GeofenceProto.Circle parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.geofence.GeofenceProto.Circle prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Circular type.
     * </pre>
     *
     * Protobuf type {@code mavsdk.rpc.geofence.Circle}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.geofence.GeofenceProto.Circle, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.geofence.Circle)
        io.mavsdk.geofence.GeofenceProto.CircleOrBuilder {
      // Construct using io.mavsdk.geofence.GeofenceProto.Circle.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Point defining the center
       * </pre>
       *
       * <code>.mavsdk.rpc.geofence.Point point = 1;</code>
       */
      @java.lang.Override
      public boolean hasPoint() {
        return instance.hasPoint();
      }
      /**
       * <pre>
       * Point defining the center
       * </pre>
       *
       * <code>.mavsdk.rpc.geofence.Point point = 1;</code>
       */
      @java.lang.Override
      public io.mavsdk.geofence.GeofenceProto.Point getPoint() {
        return instance.getPoint();
      }
      /**
       * <pre>
       * Point defining the center
       * </pre>
       *
       * <code>.mavsdk.rpc.geofence.Point point = 1;</code>
       */
      public Builder setPoint(io.mavsdk.geofence.GeofenceProto.Point value) {
        copyOnWrite();
        instance.setPoint(value);
        return this;
        }
      /**
       * <pre>
       * Point defining the center
       * </pre>
       *
       * <code>.mavsdk.rpc.geofence.Point point = 1;</code>
       */
      public Builder setPoint(
          io.mavsdk.geofence.GeofenceProto.Point.Builder builderForValue) {
        copyOnWrite();
        instance.setPoint(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Point defining the center
       * </pre>
       *
       * <code>.mavsdk.rpc.geofence.Point point = 1;</code>
       */
      public Builder mergePoint(io.mavsdk.geofence.GeofenceProto.Point value) {
        copyOnWrite();
        instance.mergePoint(value);
        return this;
      }
      /**
       * <pre>
       * Point defining the center
       * </pre>
       *
       * <code>.mavsdk.rpc.geofence.Point point = 1;</code>
       */
      public Builder clearPoint() {  copyOnWrite();
        instance.clearPoint();
        return this;
      }

      /**
       * <pre>
       * Radius of the circular fence
       * </pre>
       *
       * <code>float radius = 2 [(.mavsdk.options.default_value) = "NaN"];</code>
       * @return The radius.
       */
      @java.lang.Override
      public float getRadius() {
        return instance.getRadius();
      }
      /**
       * <pre>
       * Radius of the circular fence
       * </pre>
       *
       * <code>float radius = 2 [(.mavsdk.options.default_value) = "NaN"];</code>
       * @param value The radius to set.
       * @return This builder for chaining.
       */
      public Builder setRadius(float value) {
        copyOnWrite();
        instance.setRadius(value);
        return this;
      }
      /**
       * <pre>
       * Radius of the circular fence
       * </pre>
       *
       * <code>float radius = 2 [(.mavsdk.options.default_value) = "NaN"];</code>
       * @return This builder for chaining.
       */
      public Builder clearRadius() {
        copyOnWrite();
        instance.clearRadius();
        return this;
      }

      /**
       * <pre>
       * Fence type
       * </pre>
       *
       * <code>.mavsdk.rpc.geofence.FenceType fence_type = 3;</code>
       * @return The enum numeric value on the wire for fenceType.
       */
      @java.lang.Override
      public int getFenceTypeValue() {
        return instance.getFenceTypeValue();
      }
      /**
       * <pre>
       * Fence type
       * </pre>
       *
       * <code>.mavsdk.rpc.geofence.FenceType fence_type = 3;</code>
       * @param value The fenceType to set.
       * @return This builder for chaining.
       */
      public Builder setFenceTypeValue(int value) {
        copyOnWrite();
        instance.setFenceTypeValue(value);
        return this;
      }
      /**
       * <pre>
       * Fence type
       * </pre>
       *
       * <code>.mavsdk.rpc.geofence.FenceType fence_type = 3;</code>
       * @return The fenceType.
       */
      @java.lang.Override
      public io.mavsdk.geofence.GeofenceProto.FenceType getFenceType() {
        return instance.getFenceType();
      }
      /**
       * <pre>
       * Fence type
       * </pre>
       *
       * <code>.mavsdk.rpc.geofence.FenceType fence_type = 3;</code>
       * @param value The enum numeric value on the wire for fenceType to set.
       * @return This builder for chaining.
       */
      public Builder setFenceType(io.mavsdk.geofence.GeofenceProto.FenceType value) {
        copyOnWrite();
        instance.setFenceType(value);
        return this;
      }
      /**
       * <pre>
       * Fence type
       * </pre>
       *
       * <code>.mavsdk.rpc.geofence.FenceType fence_type = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearFenceType() {
        copyOnWrite();
        instance.clearFenceType();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.geofence.Circle)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.geofence.GeofenceProto.Circle();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "point_",
              "radius_",
              "fenceType_",
            };
            java.lang.String info =
                "\u0000\u0003\u0000\u0001\u0001\u0003\u0003\u0000\u0000\u0000\u0001\u1009\u0000\u0002" +
                "\u0001\u0003\f";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.geofence.GeofenceProto.Circle> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.geofence.GeofenceProto.Circle.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.geofence.GeofenceProto.Circle>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.geofence.Circle)
    private static final io.mavsdk.geofence.GeofenceProto.Circle DEFAULT_INSTANCE;
    static {
      Circle defaultInstance = new Circle();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Circle.class, defaultInstance);
    }

    public static io.mavsdk.geofence.GeofenceProto.Circle getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Circle> PARSER;

    public static com.google.protobuf.Parser<Circle> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface GeofenceDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.geofence.GeofenceData)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Polygon(s) representing the geofence(s)
     * </pre>
     *
     * <code>repeated .mavsdk.rpc.geofence.Polygon polygons = 1;</code>
     */
    java.util.List<io.mavsdk.geofence.GeofenceProto.Polygon> 
        getPolygonsList();
    /**
     * <pre>
     * Polygon(s) representing the geofence(s)
     * </pre>
     *
     * <code>repeated .mavsdk.rpc.geofence.Polygon polygons = 1;</code>
     */
    io.mavsdk.geofence.GeofenceProto.Polygon getPolygons(int index);
    /**
     * <pre>
     * Polygon(s) representing the geofence(s)
     * </pre>
     *
     * <code>repeated .mavsdk.rpc.geofence.Polygon polygons = 1;</code>
     */
    int getPolygonsCount();

    /**
     * <pre>
     * Circle(s) representing the geofence(s)
     * </pre>
     *
     * <code>repeated .mavsdk.rpc.geofence.Circle circles = 2;</code>
     */
    java.util.List<io.mavsdk.geofence.GeofenceProto.Circle> 
        getCirclesList();
    /**
     * <pre>
     * Circle(s) representing the geofence(s)
     * </pre>
     *
     * <code>repeated .mavsdk.rpc.geofence.Circle circles = 2;</code>
     */
    io.mavsdk.geofence.GeofenceProto.Circle getCircles(int index);
    /**
     * <pre>
     * Circle(s) representing the geofence(s)
     * </pre>
     *
     * <code>repeated .mavsdk.rpc.geofence.Circle circles = 2;</code>
     */
    int getCirclesCount();
  }
  /**
   * <pre>
   * Geofence data type.
   * </pre>
   *
   * Protobuf type {@code mavsdk.rpc.geofence.GeofenceData}
   */
  public  static final class GeofenceData extends
      com.google.protobuf.GeneratedMessageLite<
          GeofenceData, GeofenceData.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.geofence.GeofenceData)
      GeofenceDataOrBuilder {
    private GeofenceData() {
      polygons_ = emptyProtobufList();
      circles_ = emptyProtobufList();
    }
    public static final int POLYGONS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<io.mavsdk.geofence.GeofenceProto.Polygon> polygons_;
    /**
     * <pre>
     * Polygon(s) representing the geofence(s)
     * </pre>
     *
     * <code>repeated .mavsdk.rpc.geofence.Polygon polygons = 1;</code>
     */
    @java.lang.Override
    public java.util.List<io.mavsdk.geofence.GeofenceProto.Polygon> getPolygonsList() {
      return polygons_;
    }
    /**
     * <pre>
     * Polygon(s) representing the geofence(s)
     * </pre>
     *
     * <code>repeated .mavsdk.rpc.geofence.Polygon polygons = 1;</code>
     */
    public java.util.List<? extends io.mavsdk.geofence.GeofenceProto.PolygonOrBuilder> 
        getPolygonsOrBuilderList() {
      return polygons_;
    }
    /**
     * <pre>
     * Polygon(s) representing the geofence(s)
     * </pre>
     *
     * <code>repeated .mavsdk.rpc.geofence.Polygon polygons = 1;</code>
     */
    @java.lang.Override
    public int getPolygonsCount() {
      return polygons_.size();
    }
    /**
     * <pre>
     * Polygon(s) representing the geofence(s)
     * </pre>
     *
     * <code>repeated .mavsdk.rpc.geofence.Polygon polygons = 1;</code>
     */
    @java.lang.Override
    public io.mavsdk.geofence.GeofenceProto.Polygon getPolygons(int index) {
      return polygons_.get(index);
    }
    /**
     * <pre>
     * Polygon(s) representing the geofence(s)
     * </pre>
     *
     * <code>repeated .mavsdk.rpc.geofence.Polygon polygons = 1;</code>
     */
    public io.mavsdk.geofence.GeofenceProto.PolygonOrBuilder getPolygonsOrBuilder(
        int index) {
      return polygons_.get(index);
    }
    private void ensurePolygonsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<io.mavsdk.geofence.GeofenceProto.Polygon> tmp = polygons_;
      if (!tmp.isModifiable()) {
        polygons_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * Polygon(s) representing the geofence(s)
     * </pre>
     *
     * <code>repeated .mavsdk.rpc.geofence.Polygon polygons = 1;</code>
     */
    private void setPolygons(
        int index, io.mavsdk.geofence.GeofenceProto.Polygon value) {
      value.getClass();
  ensurePolygonsIsMutable();
      polygons_.set(index, value);
    }
    /**
     * <pre>
     * Polygon(s) representing the geofence(s)
     * </pre>
     *
     * <code>repeated .mavsdk.rpc.geofence.Polygon polygons = 1;</code>
     */
    private void addPolygons(io.mavsdk.geofence.GeofenceProto.Polygon value) {
      value.getClass();
  ensurePolygonsIsMutable();
      polygons_.add(value);
    }
    /**
     * <pre>
     * Polygon(s) representing the geofence(s)
     * </pre>
     *
     * <code>repeated .mavsdk.rpc.geofence.Polygon polygons = 1;</code>
     */
    private void addPolygons(
        int index, io.mavsdk.geofence.GeofenceProto.Polygon value) {
      value.getClass();
  ensurePolygonsIsMutable();
      polygons_.add(index, value);
    }
    /**
     * <pre>
     * Polygon(s) representing the geofence(s)
     * </pre>
     *
     * <code>repeated .mavsdk.rpc.geofence.Polygon polygons = 1;</code>
     */
    private void addAllPolygons(
        java.lang.Iterable<? extends io.mavsdk.geofence.GeofenceProto.Polygon> values) {
      ensurePolygonsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, polygons_);
    }
    /**
     * <pre>
     * Polygon(s) representing the geofence(s)
     * </pre>
     *
     * <code>repeated .mavsdk.rpc.geofence.Polygon polygons = 1;</code>
     */
    private void clearPolygons() {
      polygons_ = emptyProtobufList();
    }
    /**
     * <pre>
     * Polygon(s) representing the geofence(s)
     * </pre>
     *
     * <code>repeated .mavsdk.rpc.geofence.Polygon polygons = 1;</code>
     */
    private void removePolygons(int index) {
      ensurePolygonsIsMutable();
      polygons_.remove(index);
    }

    public static final int CIRCLES_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<io.mavsdk.geofence.GeofenceProto.Circle> circles_;
    /**
     * <pre>
     * Circle(s) representing the geofence(s)
     * </pre>
     *
     * <code>repeated .mavsdk.rpc.geofence.Circle circles = 2;</code>
     */
    @java.lang.Override
    public java.util.List<io.mavsdk.geofence.GeofenceProto.Circle> getCirclesList() {
      return circles_;
    }
    /**
     * <pre>
     * Circle(s) representing the geofence(s)
     * </pre>
     *
     * <code>repeated .mavsdk.rpc.geofence.Circle circles = 2;</code>
     */
    public java.util.List<? extends io.mavsdk.geofence.GeofenceProto.CircleOrBuilder> 
        getCirclesOrBuilderList() {
      return circles_;
    }
    /**
     * <pre>
     * Circle(s) representing the geofence(s)
     * </pre>
     *
     * <code>repeated .mavsdk.rpc.geofence.Circle circles = 2;</code>
     */
    @java.lang.Override
    public int getCirclesCount() {
      return circles_.size();
    }
    /**
     * <pre>
     * Circle(s) representing the geofence(s)
     * </pre>
     *
     * <code>repeated .mavsdk.rpc.geofence.Circle circles = 2;</code>
     */
    @java.lang.Override
    public io.mavsdk.geofence.GeofenceProto.Circle getCircles(int index) {
      return circles_.get(index);
    }
    /**
     * <pre>
     * Circle(s) representing the geofence(s)
     * </pre>
     *
     * <code>repeated .mavsdk.rpc.geofence.Circle circles = 2;</code>
     */
    public io.mavsdk.geofence.GeofenceProto.CircleOrBuilder getCirclesOrBuilder(
        int index) {
      return circles_.get(index);
    }
    private void ensureCirclesIsMutable() {
      com.google.protobuf.Internal.ProtobufList<io.mavsdk.geofence.GeofenceProto.Circle> tmp = circles_;
      if (!tmp.isModifiable()) {
        circles_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * Circle(s) representing the geofence(s)
     * </pre>
     *
     * <code>repeated .mavsdk.rpc.geofence.Circle circles = 2;</code>
     */
    private void setCircles(
        int index, io.mavsdk.geofence.GeofenceProto.Circle value) {
      value.getClass();
  ensureCirclesIsMutable();
      circles_.set(index, value);
    }
    /**
     * <pre>
     * Circle(s) representing the geofence(s)
     * </pre>
     *
     * <code>repeated .mavsdk.rpc.geofence.Circle circles = 2;</code>
     */
    private void addCircles(io.mavsdk.geofence.GeofenceProto.Circle value) {
      value.getClass();
  ensureCirclesIsMutable();
      circles_.add(value);
    }
    /**
     * <pre>
     * Circle(s) representing the geofence(s)
     * </pre>
     *
     * <code>repeated .mavsdk.rpc.geofence.Circle circles = 2;</code>
     */
    private void addCircles(
        int index, io.mavsdk.geofence.GeofenceProto.Circle value) {
      value.getClass();
  ensureCirclesIsMutable();
      circles_.add(index, value);
    }
    /**
     * <pre>
     * Circle(s) representing the geofence(s)
     * </pre>
     *
     * <code>repeated .mavsdk.rpc.geofence.Circle circles = 2;</code>
     */
    private void addAllCircles(
        java.lang.Iterable<? extends io.mavsdk.geofence.GeofenceProto.Circle> values) {
      ensureCirclesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, circles_);
    }
    /**
     * <pre>
     * Circle(s) representing the geofence(s)
     * </pre>
     *
     * <code>repeated .mavsdk.rpc.geofence.Circle circles = 2;</code>
     */
    private void clearCircles() {
      circles_ = emptyProtobufList();
    }
    /**
     * <pre>
     * Circle(s) representing the geofence(s)
     * </pre>
     *
     * <code>repeated .mavsdk.rpc.geofence.Circle circles = 2;</code>
     */
    private void removeCircles(int index) {
      ensureCirclesIsMutable();
      circles_.remove(index);
    }

    public static io.mavsdk.geofence.GeofenceProto.GeofenceData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.geofence.GeofenceProto.GeofenceData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.geofence.GeofenceProto.GeofenceData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.geofence.GeofenceProto.GeofenceData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.geofence.GeofenceProto.GeofenceData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.geofence.GeofenceProto.GeofenceData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.geofence.GeofenceProto.GeofenceData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.geofence.GeofenceProto.GeofenceData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.geofence.GeofenceProto.GeofenceData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.geofence.GeofenceProto.GeofenceData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.geofence.GeofenceProto.GeofenceData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.geofence.GeofenceProto.GeofenceData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.geofence.GeofenceProto.GeofenceData prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Geofence data type.
     * </pre>
     *
     * Protobuf type {@code mavsdk.rpc.geofence.GeofenceData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.geofence.GeofenceProto.GeofenceData, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.geofence.GeofenceData)
        io.mavsdk.geofence.GeofenceProto.GeofenceDataOrBuilder {
      // Construct using io.mavsdk.geofence.GeofenceProto.GeofenceData.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Polygon(s) representing the geofence(s)
       * </pre>
       *
       * <code>repeated .mavsdk.rpc.geofence.Polygon polygons = 1;</code>
       */
      @java.lang.Override
      public java.util.List<io.mavsdk.geofence.GeofenceProto.Polygon> getPolygonsList() {
        return java.util.Collections.unmodifiableList(
            instance.getPolygonsList());
      }
      /**
       * <pre>
       * Polygon(s) representing the geofence(s)
       * </pre>
       *
       * <code>repeated .mavsdk.rpc.geofence.Polygon polygons = 1;</code>
       */
      @java.lang.Override
      public int getPolygonsCount() {
        return instance.getPolygonsCount();
      }/**
       * <pre>
       * Polygon(s) representing the geofence(s)
       * </pre>
       *
       * <code>repeated .mavsdk.rpc.geofence.Polygon polygons = 1;</code>
       */
      @java.lang.Override
      public io.mavsdk.geofence.GeofenceProto.Polygon getPolygons(int index) {
        return instance.getPolygons(index);
      }
      /**
       * <pre>
       * Polygon(s) representing the geofence(s)
       * </pre>
       *
       * <code>repeated .mavsdk.rpc.geofence.Polygon polygons = 1;</code>
       */
      public Builder setPolygons(
          int index, io.mavsdk.geofence.GeofenceProto.Polygon value) {
        copyOnWrite();
        instance.setPolygons(index, value);
        return this;
      }
      /**
       * <pre>
       * Polygon(s) representing the geofence(s)
       * </pre>
       *
       * <code>repeated .mavsdk.rpc.geofence.Polygon polygons = 1;</code>
       */
      public Builder setPolygons(
          int index, io.mavsdk.geofence.GeofenceProto.Polygon.Builder builderForValue) {
        copyOnWrite();
        instance.setPolygons(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Polygon(s) representing the geofence(s)
       * </pre>
       *
       * <code>repeated .mavsdk.rpc.geofence.Polygon polygons = 1;</code>
       */
      public Builder addPolygons(io.mavsdk.geofence.GeofenceProto.Polygon value) {
        copyOnWrite();
        instance.addPolygons(value);
        return this;
      }
      /**
       * <pre>
       * Polygon(s) representing the geofence(s)
       * </pre>
       *
       * <code>repeated .mavsdk.rpc.geofence.Polygon polygons = 1;</code>
       */
      public Builder addPolygons(
          int index, io.mavsdk.geofence.GeofenceProto.Polygon value) {
        copyOnWrite();
        instance.addPolygons(index, value);
        return this;
      }
      /**
       * <pre>
       * Polygon(s) representing the geofence(s)
       * </pre>
       *
       * <code>repeated .mavsdk.rpc.geofence.Polygon polygons = 1;</code>
       */
      public Builder addPolygons(
          io.mavsdk.geofence.GeofenceProto.Polygon.Builder builderForValue) {
        copyOnWrite();
        instance.addPolygons(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Polygon(s) representing the geofence(s)
       * </pre>
       *
       * <code>repeated .mavsdk.rpc.geofence.Polygon polygons = 1;</code>
       */
      public Builder addPolygons(
          int index, io.mavsdk.geofence.GeofenceProto.Polygon.Builder builderForValue) {
        copyOnWrite();
        instance.addPolygons(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Polygon(s) representing the geofence(s)
       * </pre>
       *
       * <code>repeated .mavsdk.rpc.geofence.Polygon polygons = 1;</code>
       */
      public Builder addAllPolygons(
          java.lang.Iterable<? extends io.mavsdk.geofence.GeofenceProto.Polygon> values) {
        copyOnWrite();
        instance.addAllPolygons(values);
        return this;
      }
      /**
       * <pre>
       * Polygon(s) representing the geofence(s)
       * </pre>
       *
       * <code>repeated .mavsdk.rpc.geofence.Polygon polygons = 1;</code>
       */
      public Builder clearPolygons() {
        copyOnWrite();
        instance.clearPolygons();
        return this;
      }
      /**
       * <pre>
       * Polygon(s) representing the geofence(s)
       * </pre>
       *
       * <code>repeated .mavsdk.rpc.geofence.Polygon polygons = 1;</code>
       */
      public Builder removePolygons(int index) {
        copyOnWrite();
        instance.removePolygons(index);
        return this;
      }

      /**
       * <pre>
       * Circle(s) representing the geofence(s)
       * </pre>
       *
       * <code>repeated .mavsdk.rpc.geofence.Circle circles = 2;</code>
       */
      @java.lang.Override
      public java.util.List<io.mavsdk.geofence.GeofenceProto.Circle> getCirclesList() {
        return java.util.Collections.unmodifiableList(
            instance.getCirclesList());
      }
      /**
       * <pre>
       * Circle(s) representing the geofence(s)
       * </pre>
       *
       * <code>repeated .mavsdk.rpc.geofence.Circle circles = 2;</code>
       */
      @java.lang.Override
      public int getCirclesCount() {
        return instance.getCirclesCount();
      }/**
       * <pre>
       * Circle(s) representing the geofence(s)
       * </pre>
       *
       * <code>repeated .mavsdk.rpc.geofence.Circle circles = 2;</code>
       */
      @java.lang.Override
      public io.mavsdk.geofence.GeofenceProto.Circle getCircles(int index) {
        return instance.getCircles(index);
      }
      /**
       * <pre>
       * Circle(s) representing the geofence(s)
       * </pre>
       *
       * <code>repeated .mavsdk.rpc.geofence.Circle circles = 2;</code>
       */
      public Builder setCircles(
          int index, io.mavsdk.geofence.GeofenceProto.Circle value) {
        copyOnWrite();
        instance.setCircles(index, value);
        return this;
      }
      /**
       * <pre>
       * Circle(s) representing the geofence(s)
       * </pre>
       *
       * <code>repeated .mavsdk.rpc.geofence.Circle circles = 2;</code>
       */
      public Builder setCircles(
          int index, io.mavsdk.geofence.GeofenceProto.Circle.Builder builderForValue) {
        copyOnWrite();
        instance.setCircles(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Circle(s) representing the geofence(s)
       * </pre>
       *
       * <code>repeated .mavsdk.rpc.geofence.Circle circles = 2;</code>
       */
      public Builder addCircles(io.mavsdk.geofence.GeofenceProto.Circle value) {
        copyOnWrite();
        instance.addCircles(value);
        return this;
      }
      /**
       * <pre>
       * Circle(s) representing the geofence(s)
       * </pre>
       *
       * <code>repeated .mavsdk.rpc.geofence.Circle circles = 2;</code>
       */
      public Builder addCircles(
          int index, io.mavsdk.geofence.GeofenceProto.Circle value) {
        copyOnWrite();
        instance.addCircles(index, value);
        return this;
      }
      /**
       * <pre>
       * Circle(s) representing the geofence(s)
       * </pre>
       *
       * <code>repeated .mavsdk.rpc.geofence.Circle circles = 2;</code>
       */
      public Builder addCircles(
          io.mavsdk.geofence.GeofenceProto.Circle.Builder builderForValue) {
        copyOnWrite();
        instance.addCircles(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Circle(s) representing the geofence(s)
       * </pre>
       *
       * <code>repeated .mavsdk.rpc.geofence.Circle circles = 2;</code>
       */
      public Builder addCircles(
          int index, io.mavsdk.geofence.GeofenceProto.Circle.Builder builderForValue) {
        copyOnWrite();
        instance.addCircles(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Circle(s) representing the geofence(s)
       * </pre>
       *
       * <code>repeated .mavsdk.rpc.geofence.Circle circles = 2;</code>
       */
      public Builder addAllCircles(
          java.lang.Iterable<? extends io.mavsdk.geofence.GeofenceProto.Circle> values) {
        copyOnWrite();
        instance.addAllCircles(values);
        return this;
      }
      /**
       * <pre>
       * Circle(s) representing the geofence(s)
       * </pre>
       *
       * <code>repeated .mavsdk.rpc.geofence.Circle circles = 2;</code>
       */
      public Builder clearCircles() {
        copyOnWrite();
        instance.clearCircles();
        return this;
      }
      /**
       * <pre>
       * Circle(s) representing the geofence(s)
       * </pre>
       *
       * <code>repeated .mavsdk.rpc.geofence.Circle circles = 2;</code>
       */
      public Builder removeCircles(int index) {
        copyOnWrite();
        instance.removeCircles(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.geofence.GeofenceData)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.geofence.GeofenceProto.GeofenceData();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "polygons_",
              io.mavsdk.geofence.GeofenceProto.Polygon.class,
              "circles_",
              io.mavsdk.geofence.GeofenceProto.Circle.class,
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0002\u0000\u0001\u001b\u0002\u001b" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.geofence.GeofenceProto.GeofenceData> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.geofence.GeofenceProto.GeofenceData.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.geofence.GeofenceProto.GeofenceData>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.geofence.GeofenceData)
    private static final io.mavsdk.geofence.GeofenceProto.GeofenceData DEFAULT_INSTANCE;
    static {
      GeofenceData defaultInstance = new GeofenceData();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        GeofenceData.class, defaultInstance);
    }

    public static io.mavsdk.geofence.GeofenceProto.GeofenceData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<GeofenceData> PARSER;

    public static com.google.protobuf.Parser<GeofenceData> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface UploadGeofenceRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.geofence.UploadGeofenceRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Circle(s) and/or Polygon(s) representing the geofence(s)
     * </pre>
     *
     * <code>.mavsdk.rpc.geofence.GeofenceData geofence_data = 1;</code>
     * @return Whether the geofenceData field is set.
     */
    boolean hasGeofenceData();
    /**
     * <pre>
     * Circle(s) and/or Polygon(s) representing the geofence(s)
     * </pre>
     *
     * <code>.mavsdk.rpc.geofence.GeofenceData geofence_data = 1;</code>
     * @return The geofenceData.
     */
    io.mavsdk.geofence.GeofenceProto.GeofenceData getGeofenceData();
  }
  /**
   * Protobuf type {@code mavsdk.rpc.geofence.UploadGeofenceRequest}
   */
  public  static final class UploadGeofenceRequest extends
      com.google.protobuf.GeneratedMessageLite<
          UploadGeofenceRequest, UploadGeofenceRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.geofence.UploadGeofenceRequest)
      UploadGeofenceRequestOrBuilder {
    private UploadGeofenceRequest() {
    }
    private int bitField0_;
    public static final int GEOFENCE_DATA_FIELD_NUMBER = 1;
    private io.mavsdk.geofence.GeofenceProto.GeofenceData geofenceData_;
    /**
     * <pre>
     * Circle(s) and/or Polygon(s) representing the geofence(s)
     * </pre>
     *
     * <code>.mavsdk.rpc.geofence.GeofenceData geofence_data = 1;</code>
     */
    @java.lang.Override
    public boolean hasGeofenceData() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Circle(s) and/or Polygon(s) representing the geofence(s)
     * </pre>
     *
     * <code>.mavsdk.rpc.geofence.GeofenceData geofence_data = 1;</code>
     */
    @java.lang.Override
    public io.mavsdk.geofence.GeofenceProto.GeofenceData getGeofenceData() {
      return geofenceData_ == null ? io.mavsdk.geofence.GeofenceProto.GeofenceData.getDefaultInstance() : geofenceData_;
    }
    /**
     * <pre>
     * Circle(s) and/or Polygon(s) representing the geofence(s)
     * </pre>
     *
     * <code>.mavsdk.rpc.geofence.GeofenceData geofence_data = 1;</code>
     */
    private void setGeofenceData(io.mavsdk.geofence.GeofenceProto.GeofenceData value) {
      value.getClass();
  geofenceData_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <pre>
     * Circle(s) and/or Polygon(s) representing the geofence(s)
     * </pre>
     *
     * <code>.mavsdk.rpc.geofence.GeofenceData geofence_data = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeGeofenceData(io.mavsdk.geofence.GeofenceProto.GeofenceData value) {
      value.getClass();
  if (geofenceData_ != null &&
          geofenceData_ != io.mavsdk.geofence.GeofenceProto.GeofenceData.getDefaultInstance()) {
        geofenceData_ =
          io.mavsdk.geofence.GeofenceProto.GeofenceData.newBuilder(geofenceData_).mergeFrom(value).buildPartial();
      } else {
        geofenceData_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <pre>
     * Circle(s) and/or Polygon(s) representing the geofence(s)
     * </pre>
     *
     * <code>.mavsdk.rpc.geofence.GeofenceData geofence_data = 1;</code>
     */
    private void clearGeofenceData() {  geofenceData_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static io.mavsdk.geofence.GeofenceProto.UploadGeofenceRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.geofence.GeofenceProto.UploadGeofenceRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.geofence.GeofenceProto.UploadGeofenceRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.geofence.GeofenceProto.UploadGeofenceRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.geofence.GeofenceProto.UploadGeofenceRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.geofence.GeofenceProto.UploadGeofenceRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.geofence.GeofenceProto.UploadGeofenceRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.geofence.GeofenceProto.UploadGeofenceRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.geofence.GeofenceProto.UploadGeofenceRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.geofence.GeofenceProto.UploadGeofenceRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.geofence.GeofenceProto.UploadGeofenceRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.geofence.GeofenceProto.UploadGeofenceRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.geofence.GeofenceProto.UploadGeofenceRequest prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code mavsdk.rpc.geofence.UploadGeofenceRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.geofence.GeofenceProto.UploadGeofenceRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.geofence.UploadGeofenceRequest)
        io.mavsdk.geofence.GeofenceProto.UploadGeofenceRequestOrBuilder {
      // Construct using io.mavsdk.geofence.GeofenceProto.UploadGeofenceRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Circle(s) and/or Polygon(s) representing the geofence(s)
       * </pre>
       *
       * <code>.mavsdk.rpc.geofence.GeofenceData geofence_data = 1;</code>
       */
      @java.lang.Override
      public boolean hasGeofenceData() {
        return instance.hasGeofenceData();
      }
      /**
       * <pre>
       * Circle(s) and/or Polygon(s) representing the geofence(s)
       * </pre>
       *
       * <code>.mavsdk.rpc.geofence.GeofenceData geofence_data = 1;</code>
       */
      @java.lang.Override
      public io.mavsdk.geofence.GeofenceProto.GeofenceData getGeofenceData() {
        return instance.getGeofenceData();
      }
      /**
       * <pre>
       * Circle(s) and/or Polygon(s) representing the geofence(s)
       * </pre>
       *
       * <code>.mavsdk.rpc.geofence.GeofenceData geofence_data = 1;</code>
       */
      public Builder setGeofenceData(io.mavsdk.geofence.GeofenceProto.GeofenceData value) {
        copyOnWrite();
        instance.setGeofenceData(value);
        return this;
        }
      /**
       * <pre>
       * Circle(s) and/or Polygon(s) representing the geofence(s)
       * </pre>
       *
       * <code>.mavsdk.rpc.geofence.GeofenceData geofence_data = 1;</code>
       */
      public Builder setGeofenceData(
          io.mavsdk.geofence.GeofenceProto.GeofenceData.Builder builderForValue) {
        copyOnWrite();
        instance.setGeofenceData(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Circle(s) and/or Polygon(s) representing the geofence(s)
       * </pre>
       *
       * <code>.mavsdk.rpc.geofence.GeofenceData geofence_data = 1;</code>
       */
      public Builder mergeGeofenceData(io.mavsdk.geofence.GeofenceProto.GeofenceData value) {
        copyOnWrite();
        instance.mergeGeofenceData(value);
        return this;
      }
      /**
       * <pre>
       * Circle(s) and/or Polygon(s) representing the geofence(s)
       * </pre>
       *
       * <code>.mavsdk.rpc.geofence.GeofenceData geofence_data = 1;</code>
       */
      public Builder clearGeofenceData() {  copyOnWrite();
        instance.clearGeofenceData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.geofence.UploadGeofenceRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.geofence.GeofenceProto.UploadGeofenceRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "geofenceData_",
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u1009\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.geofence.GeofenceProto.UploadGeofenceRequest> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.geofence.GeofenceProto.UploadGeofenceRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.geofence.GeofenceProto.UploadGeofenceRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.geofence.UploadGeofenceRequest)
    private static final io.mavsdk.geofence.GeofenceProto.UploadGeofenceRequest DEFAULT_INSTANCE;
    static {
      UploadGeofenceRequest defaultInstance = new UploadGeofenceRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        UploadGeofenceRequest.class, defaultInstance);
    }

    public static io.mavsdk.geofence.GeofenceProto.UploadGeofenceRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<UploadGeofenceRequest> PARSER;

    public static com.google.protobuf.Parser<UploadGeofenceRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface UploadGeofenceResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.geofence.UploadGeofenceResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>.mavsdk.rpc.geofence.GeofenceResult geofence_result = 1;</code>
     * @return Whether the geofenceResult field is set.
     */
    boolean hasGeofenceResult();
    /**
     * <code>.mavsdk.rpc.geofence.GeofenceResult geofence_result = 1;</code>
     * @return The geofenceResult.
     */
    io.mavsdk.geofence.GeofenceProto.GeofenceResult getGeofenceResult();
  }
  /**
   * Protobuf type {@code mavsdk.rpc.geofence.UploadGeofenceResponse}
   */
  public  static final class UploadGeofenceResponse extends
      com.google.protobuf.GeneratedMessageLite<
          UploadGeofenceResponse, UploadGeofenceResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.geofence.UploadGeofenceResponse)
      UploadGeofenceResponseOrBuilder {
    private UploadGeofenceResponse() {
    }
    private int bitField0_;
    public static final int GEOFENCE_RESULT_FIELD_NUMBER = 1;
    private io.mavsdk.geofence.GeofenceProto.GeofenceResult geofenceResult_;
    /**
     * <code>.mavsdk.rpc.geofence.GeofenceResult geofence_result = 1;</code>
     */
    @java.lang.Override
    public boolean hasGeofenceResult() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.mavsdk.rpc.geofence.GeofenceResult geofence_result = 1;</code>
     */
    @java.lang.Override
    public io.mavsdk.geofence.GeofenceProto.GeofenceResult getGeofenceResult() {
      return geofenceResult_ == null ? io.mavsdk.geofence.GeofenceProto.GeofenceResult.getDefaultInstance() : geofenceResult_;
    }
    /**
     * <code>.mavsdk.rpc.geofence.GeofenceResult geofence_result = 1;</code>
     */
    private void setGeofenceResult(io.mavsdk.geofence.GeofenceProto.GeofenceResult value) {
      value.getClass();
  geofenceResult_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <code>.mavsdk.rpc.geofence.GeofenceResult geofence_result = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeGeofenceResult(io.mavsdk.geofence.GeofenceProto.GeofenceResult value) {
      value.getClass();
  if (geofenceResult_ != null &&
          geofenceResult_ != io.mavsdk.geofence.GeofenceProto.GeofenceResult.getDefaultInstance()) {
        geofenceResult_ =
          io.mavsdk.geofence.GeofenceProto.GeofenceResult.newBuilder(geofenceResult_).mergeFrom(value).buildPartial();
      } else {
        geofenceResult_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>.mavsdk.rpc.geofence.GeofenceResult geofence_result = 1;</code>
     */
    private void clearGeofenceResult() {  geofenceResult_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static io.mavsdk.geofence.GeofenceProto.UploadGeofenceResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.geofence.GeofenceProto.UploadGeofenceResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.geofence.GeofenceProto.UploadGeofenceResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.geofence.GeofenceProto.UploadGeofenceResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.geofence.GeofenceProto.UploadGeofenceResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.geofence.GeofenceProto.UploadGeofenceResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.geofence.GeofenceProto.UploadGeofenceResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.geofence.GeofenceProto.UploadGeofenceResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.geofence.GeofenceProto.UploadGeofenceResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.geofence.GeofenceProto.UploadGeofenceResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.geofence.GeofenceProto.UploadGeofenceResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.geofence.GeofenceProto.UploadGeofenceResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.geofence.GeofenceProto.UploadGeofenceResponse prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code mavsdk.rpc.geofence.UploadGeofenceResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.geofence.GeofenceProto.UploadGeofenceResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.geofence.UploadGeofenceResponse)
        io.mavsdk.geofence.GeofenceProto.UploadGeofenceResponseOrBuilder {
      // Construct using io.mavsdk.geofence.GeofenceProto.UploadGeofenceResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>.mavsdk.rpc.geofence.GeofenceResult geofence_result = 1;</code>
       */
      @java.lang.Override
      public boolean hasGeofenceResult() {
        return instance.hasGeofenceResult();
      }
      /**
       * <code>.mavsdk.rpc.geofence.GeofenceResult geofence_result = 1;</code>
       */
      @java.lang.Override
      public io.mavsdk.geofence.GeofenceProto.GeofenceResult getGeofenceResult() {
        return instance.getGeofenceResult();
      }
      /**
       * <code>.mavsdk.rpc.geofence.GeofenceResult geofence_result = 1;</code>
       */
      public Builder setGeofenceResult(io.mavsdk.geofence.GeofenceProto.GeofenceResult value) {
        copyOnWrite();
        instance.setGeofenceResult(value);
        return this;
        }
      /**
       * <code>.mavsdk.rpc.geofence.GeofenceResult geofence_result = 1;</code>
       */
      public Builder setGeofenceResult(
          io.mavsdk.geofence.GeofenceProto.GeofenceResult.Builder builderForValue) {
        copyOnWrite();
        instance.setGeofenceResult(builderForValue.build());
        return this;
      }
      /**
       * <code>.mavsdk.rpc.geofence.GeofenceResult geofence_result = 1;</code>
       */
      public Builder mergeGeofenceResult(io.mavsdk.geofence.GeofenceProto.GeofenceResult value) {
        copyOnWrite();
        instance.mergeGeofenceResult(value);
        return this;
      }
      /**
       * <code>.mavsdk.rpc.geofence.GeofenceResult geofence_result = 1;</code>
       */
      public Builder clearGeofenceResult() {  copyOnWrite();
        instance.clearGeofenceResult();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.geofence.UploadGeofenceResponse)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.geofence.GeofenceProto.UploadGeofenceResponse();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "geofenceResult_",
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u1009\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.geofence.GeofenceProto.UploadGeofenceResponse> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.geofence.GeofenceProto.UploadGeofenceResponse.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.geofence.GeofenceProto.UploadGeofenceResponse>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.geofence.UploadGeofenceResponse)
    private static final io.mavsdk.geofence.GeofenceProto.UploadGeofenceResponse DEFAULT_INSTANCE;
    static {
      UploadGeofenceResponse defaultInstance = new UploadGeofenceResponse();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        UploadGeofenceResponse.class, defaultInstance);
    }

    public static io.mavsdk.geofence.GeofenceProto.UploadGeofenceResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<UploadGeofenceResponse> PARSER;

    public static com.google.protobuf.Parser<UploadGeofenceResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ClearGeofenceRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.geofence.ClearGeofenceRequest)
      com.google.protobuf.MessageLiteOrBuilder {
  }
  /**
   * Protobuf type {@code mavsdk.rpc.geofence.ClearGeofenceRequest}
   */
  public  static final class ClearGeofenceRequest extends
      com.google.protobuf.GeneratedMessageLite<
          ClearGeofenceRequest, ClearGeofenceRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.geofence.ClearGeofenceRequest)
      ClearGeofenceRequestOrBuilder {
    private ClearGeofenceRequest() {
    }
    public static io.mavsdk.geofence.GeofenceProto.ClearGeofenceRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.geofence.GeofenceProto.ClearGeofenceRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.geofence.GeofenceProto.ClearGeofenceRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.geofence.GeofenceProto.ClearGeofenceRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.geofence.GeofenceProto.ClearGeofenceRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.geofence.GeofenceProto.ClearGeofenceRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.geofence.GeofenceProto.ClearGeofenceRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.geofence.GeofenceProto.ClearGeofenceRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.geofence.GeofenceProto.ClearGeofenceRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.geofence.GeofenceProto.ClearGeofenceRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.geofence.GeofenceProto.ClearGeofenceRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.geofence.GeofenceProto.ClearGeofenceRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.geofence.GeofenceProto.ClearGeofenceRequest prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code mavsdk.rpc.geofence.ClearGeofenceRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.geofence.GeofenceProto.ClearGeofenceRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.geofence.ClearGeofenceRequest)
        io.mavsdk.geofence.GeofenceProto.ClearGeofenceRequestOrBuilder {
      // Construct using io.mavsdk.geofence.GeofenceProto.ClearGeofenceRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.geofence.ClearGeofenceRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.geofence.GeofenceProto.ClearGeofenceRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = null;java.lang.String info =
                "\u0000\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.geofence.GeofenceProto.ClearGeofenceRequest> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.geofence.GeofenceProto.ClearGeofenceRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.geofence.GeofenceProto.ClearGeofenceRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.geofence.ClearGeofenceRequest)
    private static final io.mavsdk.geofence.GeofenceProto.ClearGeofenceRequest DEFAULT_INSTANCE;
    static {
      ClearGeofenceRequest defaultInstance = new ClearGeofenceRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ClearGeofenceRequest.class, defaultInstance);
    }

    public static io.mavsdk.geofence.GeofenceProto.ClearGeofenceRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ClearGeofenceRequest> PARSER;

    public static com.google.protobuf.Parser<ClearGeofenceRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ClearGeofenceResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.geofence.ClearGeofenceResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>.mavsdk.rpc.geofence.GeofenceResult geofence_result = 1;</code>
     * @return Whether the geofenceResult field is set.
     */
    boolean hasGeofenceResult();
    /**
     * <code>.mavsdk.rpc.geofence.GeofenceResult geofence_result = 1;</code>
     * @return The geofenceResult.
     */
    io.mavsdk.geofence.GeofenceProto.GeofenceResult getGeofenceResult();
  }
  /**
   * Protobuf type {@code mavsdk.rpc.geofence.ClearGeofenceResponse}
   */
  public  static final class ClearGeofenceResponse extends
      com.google.protobuf.GeneratedMessageLite<
          ClearGeofenceResponse, ClearGeofenceResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.geofence.ClearGeofenceResponse)
      ClearGeofenceResponseOrBuilder {
    private ClearGeofenceResponse() {
    }
    private int bitField0_;
    public static final int GEOFENCE_RESULT_FIELD_NUMBER = 1;
    private io.mavsdk.geofence.GeofenceProto.GeofenceResult geofenceResult_;
    /**
     * <code>.mavsdk.rpc.geofence.GeofenceResult geofence_result = 1;</code>
     */
    @java.lang.Override
    public boolean hasGeofenceResult() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.mavsdk.rpc.geofence.GeofenceResult geofence_result = 1;</code>
     */
    @java.lang.Override
    public io.mavsdk.geofence.GeofenceProto.GeofenceResult getGeofenceResult() {
      return geofenceResult_ == null ? io.mavsdk.geofence.GeofenceProto.GeofenceResult.getDefaultInstance() : geofenceResult_;
    }
    /**
     * <code>.mavsdk.rpc.geofence.GeofenceResult geofence_result = 1;</code>
     */
    private void setGeofenceResult(io.mavsdk.geofence.GeofenceProto.GeofenceResult value) {
      value.getClass();
  geofenceResult_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <code>.mavsdk.rpc.geofence.GeofenceResult geofence_result = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeGeofenceResult(io.mavsdk.geofence.GeofenceProto.GeofenceResult value) {
      value.getClass();
  if (geofenceResult_ != null &&
          geofenceResult_ != io.mavsdk.geofence.GeofenceProto.GeofenceResult.getDefaultInstance()) {
        geofenceResult_ =
          io.mavsdk.geofence.GeofenceProto.GeofenceResult.newBuilder(geofenceResult_).mergeFrom(value).buildPartial();
      } else {
        geofenceResult_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>.mavsdk.rpc.geofence.GeofenceResult geofence_result = 1;</code>
     */
    private void clearGeofenceResult() {  geofenceResult_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static io.mavsdk.geofence.GeofenceProto.ClearGeofenceResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.geofence.GeofenceProto.ClearGeofenceResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.geofence.GeofenceProto.ClearGeofenceResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.geofence.GeofenceProto.ClearGeofenceResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.geofence.GeofenceProto.ClearGeofenceResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.geofence.GeofenceProto.ClearGeofenceResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.geofence.GeofenceProto.ClearGeofenceResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.geofence.GeofenceProto.ClearGeofenceResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.geofence.GeofenceProto.ClearGeofenceResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.geofence.GeofenceProto.ClearGeofenceResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.geofence.GeofenceProto.ClearGeofenceResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.geofence.GeofenceProto.ClearGeofenceResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.geofence.GeofenceProto.ClearGeofenceResponse prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code mavsdk.rpc.geofence.ClearGeofenceResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.geofence.GeofenceProto.ClearGeofenceResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.geofence.ClearGeofenceResponse)
        io.mavsdk.geofence.GeofenceProto.ClearGeofenceResponseOrBuilder {
      // Construct using io.mavsdk.geofence.GeofenceProto.ClearGeofenceResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>.mavsdk.rpc.geofence.GeofenceResult geofence_result = 1;</code>
       */
      @java.lang.Override
      public boolean hasGeofenceResult() {
        return instance.hasGeofenceResult();
      }
      /**
       * <code>.mavsdk.rpc.geofence.GeofenceResult geofence_result = 1;</code>
       */
      @java.lang.Override
      public io.mavsdk.geofence.GeofenceProto.GeofenceResult getGeofenceResult() {
        return instance.getGeofenceResult();
      }
      /**
       * <code>.mavsdk.rpc.geofence.GeofenceResult geofence_result = 1;</code>
       */
      public Builder setGeofenceResult(io.mavsdk.geofence.GeofenceProto.GeofenceResult value) {
        copyOnWrite();
        instance.setGeofenceResult(value);
        return this;
        }
      /**
       * <code>.mavsdk.rpc.geofence.GeofenceResult geofence_result = 1;</code>
       */
      public Builder setGeofenceResult(
          io.mavsdk.geofence.GeofenceProto.GeofenceResult.Builder builderForValue) {
        copyOnWrite();
        instance.setGeofenceResult(builderForValue.build());
        return this;
      }
      /**
       * <code>.mavsdk.rpc.geofence.GeofenceResult geofence_result = 1;</code>
       */
      public Builder mergeGeofenceResult(io.mavsdk.geofence.GeofenceProto.GeofenceResult value) {
        copyOnWrite();
        instance.mergeGeofenceResult(value);
        return this;
      }
      /**
       * <code>.mavsdk.rpc.geofence.GeofenceResult geofence_result = 1;</code>
       */
      public Builder clearGeofenceResult() {  copyOnWrite();
        instance.clearGeofenceResult();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.geofence.ClearGeofenceResponse)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.geofence.GeofenceProto.ClearGeofenceResponse();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "geofenceResult_",
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u1009\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.geofence.GeofenceProto.ClearGeofenceResponse> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.geofence.GeofenceProto.ClearGeofenceResponse.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.geofence.GeofenceProto.ClearGeofenceResponse>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.geofence.ClearGeofenceResponse)
    private static final io.mavsdk.geofence.GeofenceProto.ClearGeofenceResponse DEFAULT_INSTANCE;
    static {
      ClearGeofenceResponse defaultInstance = new ClearGeofenceResponse();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ClearGeofenceResponse.class, defaultInstance);
    }

    public static io.mavsdk.geofence.GeofenceProto.ClearGeofenceResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ClearGeofenceResponse> PARSER;

    public static com.google.protobuf.Parser<ClearGeofenceResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface GeofenceResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.geofence.GeofenceResult)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Result enum value
     * </pre>
     *
     * <code>.mavsdk.rpc.geofence.GeofenceResult.Result result = 1;</code>
     * @return The enum numeric value on the wire for result.
     */
    int getResultValue();
    /**
     * <pre>
     * Result enum value
     * </pre>
     *
     * <code>.mavsdk.rpc.geofence.GeofenceResult.Result result = 1;</code>
     * @return The result.
     */
    io.mavsdk.geofence.GeofenceProto.GeofenceResult.Result getResult();

    /**
     * <pre>
     * Human-readable English string describing the result
     * </pre>
     *
     * <code>string result_str = 2;</code>
     * @return The resultStr.
     */
    java.lang.String getResultStr();
    /**
     * <pre>
     * Human-readable English string describing the result
     * </pre>
     *
     * <code>string result_str = 2;</code>
     * @return The bytes for resultStr.
     */
    com.google.protobuf.ByteString
        getResultStrBytes();
  }
  /**
   * <pre>
   * Result type.
   * </pre>
   *
   * Protobuf type {@code mavsdk.rpc.geofence.GeofenceResult}
   */
  public  static final class GeofenceResult extends
      com.google.protobuf.GeneratedMessageLite<
          GeofenceResult, GeofenceResult.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.geofence.GeofenceResult)
      GeofenceResultOrBuilder {
    private GeofenceResult() {
      resultStr_ = "";
    }
    /**
     * <pre>
     * Possible results returned for geofence requests.
     * </pre>
     *
     * Protobuf enum {@code mavsdk.rpc.geofence.GeofenceResult.Result}
     */
    public enum Result
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <pre>
       * Unknown result
       * </pre>
       *
       * <code>RESULT_UNKNOWN = 0;</code>
       */
      RESULT_UNKNOWN(0),
      /**
       * <pre>
       * Request succeeded
       * </pre>
       *
       * <code>RESULT_SUCCESS = 1;</code>
       */
      RESULT_SUCCESS(1),
      /**
       * <pre>
       * Error
       * </pre>
       *
       * <code>RESULT_ERROR = 2;</code>
       */
      RESULT_ERROR(2),
      /**
       * <pre>
       * Too many objects in the geofence
       * </pre>
       *
       * <code>RESULT_TOO_MANY_GEOFENCE_ITEMS = 3;</code>
       */
      RESULT_TOO_MANY_GEOFENCE_ITEMS(3),
      /**
       * <pre>
       * Vehicle is busy
       * </pre>
       *
       * <code>RESULT_BUSY = 4;</code>
       */
      RESULT_BUSY(4),
      /**
       * <pre>
       * Request timed out
       * </pre>
       *
       * <code>RESULT_TIMEOUT = 5;</code>
       */
      RESULT_TIMEOUT(5),
      /**
       * <pre>
       * Invalid argument
       * </pre>
       *
       * <code>RESULT_INVALID_ARGUMENT = 6;</code>
       */
      RESULT_INVALID_ARGUMENT(6),
      /**
       * <pre>
       * No system connected
       * </pre>
       *
       * <code>RESULT_NO_SYSTEM = 7;</code>
       */
      RESULT_NO_SYSTEM(7),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Unknown result
       * </pre>
       *
       * <code>RESULT_UNKNOWN = 0;</code>
       */
      public static final int RESULT_UNKNOWN_VALUE = 0;
      /**
       * <pre>
       * Request succeeded
       * </pre>
       *
       * <code>RESULT_SUCCESS = 1;</code>
       */
      public static final int RESULT_SUCCESS_VALUE = 1;
      /**
       * <pre>
       * Error
       * </pre>
       *
       * <code>RESULT_ERROR = 2;</code>
       */
      public static final int RESULT_ERROR_VALUE = 2;
      /**
       * <pre>
       * Too many objects in the geofence
       * </pre>
       *
       * <code>RESULT_TOO_MANY_GEOFENCE_ITEMS = 3;</code>
       */
      public static final int RESULT_TOO_MANY_GEOFENCE_ITEMS_VALUE = 3;
      /**
       * <pre>
       * Vehicle is busy
       * </pre>
       *
       * <code>RESULT_BUSY = 4;</code>
       */
      public static final int RESULT_BUSY_VALUE = 4;
      /**
       * <pre>
       * Request timed out
       * </pre>
       *
       * <code>RESULT_TIMEOUT = 5;</code>
       */
      public static final int RESULT_TIMEOUT_VALUE = 5;
      /**
       * <pre>
       * Invalid argument
       * </pre>
       *
       * <code>RESULT_INVALID_ARGUMENT = 6;</code>
       */
      public static final int RESULT_INVALID_ARGUMENT_VALUE = 6;
      /**
       * <pre>
       * No system connected
       * </pre>
       *
       * <code>RESULT_NO_SYSTEM = 7;</code>
       */
      public static final int RESULT_NO_SYSTEM_VALUE = 7;


      @java.lang.Override
      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Result valueOf(int value) {
        return forNumber(value);
      }

      public static Result forNumber(int value) {
        switch (value) {
          case 0: return RESULT_UNKNOWN;
          case 1: return RESULT_SUCCESS;
          case 2: return RESULT_ERROR;
          case 3: return RESULT_TOO_MANY_GEOFENCE_ITEMS;
          case 4: return RESULT_BUSY;
          case 5: return RESULT_TIMEOUT;
          case 6: return RESULT_INVALID_ARGUMENT;
          case 7: return RESULT_NO_SYSTEM;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Result>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Result> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Result>() {
              @java.lang.Override
              public Result findValueByNumber(int number) {
                return Result.forNumber(number);
              }
            };

      public static com.google.protobuf.Internal.EnumVerifier 
          internalGetVerifier() {
        return ResultVerifier.INSTANCE;
      }

      private static final class ResultVerifier implements 
           com.google.protobuf.Internal.EnumVerifier { 
              static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new ResultVerifier();
              @java.lang.Override
              public boolean isInRange(int number) {
                return Result.forNumber(number) != null;
              }
            };

      private final int value;

      private Result(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:mavsdk.rpc.geofence.GeofenceResult.Result)
    }

    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <pre>
     * Result enum value
     * </pre>
     *
     * <code>.mavsdk.rpc.geofence.GeofenceResult.Result result = 1;</code>
     * @return The enum numeric value on the wire for result.
     */
    @java.lang.Override
    public int getResultValue() {
      return result_;
    }
    /**
     * <pre>
     * Result enum value
     * </pre>
     *
     * <code>.mavsdk.rpc.geofence.GeofenceResult.Result result = 1;</code>
     * @return The result.
     */
    @java.lang.Override
    public io.mavsdk.geofence.GeofenceProto.GeofenceResult.Result getResult() {
      io.mavsdk.geofence.GeofenceProto.GeofenceResult.Result result = io.mavsdk.geofence.GeofenceProto.GeofenceResult.Result.forNumber(result_);
      return result == null ? io.mavsdk.geofence.GeofenceProto.GeofenceResult.Result.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Result enum value
     * </pre>
     *
     * <code>.mavsdk.rpc.geofence.GeofenceResult.Result result = 1;</code>
     * @param value The enum numeric value on the wire for result to set.
     */
    private void setResultValue(int value) {
        result_ = value;
    }
    /**
     * <pre>
     * Result enum value
     * </pre>
     *
     * <code>.mavsdk.rpc.geofence.GeofenceResult.Result result = 1;</code>
     * @param value The result to set.
     */
    private void setResult(io.mavsdk.geofence.GeofenceProto.GeofenceResult.Result value) {
      result_ = value.getNumber();

    }
    /**
     * <pre>
     * Result enum value
     * </pre>
     *
     * <code>.mavsdk.rpc.geofence.GeofenceResult.Result result = 1;</code>
     */
    private void clearResult() {

      result_ = 0;
    }

    public static final int RESULT_STR_FIELD_NUMBER = 2;
    private java.lang.String resultStr_;
    /**
     * <pre>
     * Human-readable English string describing the result
     * </pre>
     *
     * <code>string result_str = 2;</code>
     * @return The resultStr.
     */
    @java.lang.Override
    public java.lang.String getResultStr() {
      return resultStr_;
    }
    /**
     * <pre>
     * Human-readable English string describing the result
     * </pre>
     *
     * <code>string result_str = 2;</code>
     * @return The bytes for resultStr.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getResultStrBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(resultStr_);
    }
    /**
     * <pre>
     * Human-readable English string describing the result
     * </pre>
     *
     * <code>string result_str = 2;</code>
     * @param value The resultStr to set.
     */
    private void setResultStr(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      resultStr_ = value;
    }
    /**
     * <pre>
     * Human-readable English string describing the result
     * </pre>
     *
     * <code>string result_str = 2;</code>
     */
    private void clearResultStr() {

      resultStr_ = getDefaultInstance().getResultStr();
    }
    /**
     * <pre>
     * Human-readable English string describing the result
     * </pre>
     *
     * <code>string result_str = 2;</code>
     * @param value The bytes for resultStr to set.
     */
    private void setResultStrBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      resultStr_ = value.toStringUtf8();

    }

    public static io.mavsdk.geofence.GeofenceProto.GeofenceResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.geofence.GeofenceProto.GeofenceResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.geofence.GeofenceProto.GeofenceResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.geofence.GeofenceProto.GeofenceResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.geofence.GeofenceProto.GeofenceResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.geofence.GeofenceProto.GeofenceResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.geofence.GeofenceProto.GeofenceResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.geofence.GeofenceProto.GeofenceResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.geofence.GeofenceProto.GeofenceResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.geofence.GeofenceProto.GeofenceResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.geofence.GeofenceProto.GeofenceResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.geofence.GeofenceProto.GeofenceResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.geofence.GeofenceProto.GeofenceResult prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Result type.
     * </pre>
     *
     * Protobuf type {@code mavsdk.rpc.geofence.GeofenceResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.geofence.GeofenceProto.GeofenceResult, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.geofence.GeofenceResult)
        io.mavsdk.geofence.GeofenceProto.GeofenceResultOrBuilder {
      // Construct using io.mavsdk.geofence.GeofenceProto.GeofenceResult.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Result enum value
       * </pre>
       *
       * <code>.mavsdk.rpc.geofence.GeofenceResult.Result result = 1;</code>
       * @return The enum numeric value on the wire for result.
       */
      @java.lang.Override
      public int getResultValue() {
        return instance.getResultValue();
      }
      /**
       * <pre>
       * Result enum value
       * </pre>
       *
       * <code>.mavsdk.rpc.geofence.GeofenceResult.Result result = 1;</code>
       * @param value The result to set.
       * @return This builder for chaining.
       */
      public Builder setResultValue(int value) {
        copyOnWrite();
        instance.setResultValue(value);
        return this;
      }
      /**
       * <pre>
       * Result enum value
       * </pre>
       *
       * <code>.mavsdk.rpc.geofence.GeofenceResult.Result result = 1;</code>
       * @return The result.
       */
      @java.lang.Override
      public io.mavsdk.geofence.GeofenceProto.GeofenceResult.Result getResult() {
        return instance.getResult();
      }
      /**
       * <pre>
       * Result enum value
       * </pre>
       *
       * <code>.mavsdk.rpc.geofence.GeofenceResult.Result result = 1;</code>
       * @param value The enum numeric value on the wire for result to set.
       * @return This builder for chaining.
       */
      public Builder setResult(io.mavsdk.geofence.GeofenceProto.GeofenceResult.Result value) {
        copyOnWrite();
        instance.setResult(value);
        return this;
      }
      /**
       * <pre>
       * Result enum value
       * </pre>
       *
       * <code>.mavsdk.rpc.geofence.GeofenceResult.Result result = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearResult() {
        copyOnWrite();
        instance.clearResult();
        return this;
      }

      /**
       * <pre>
       * Human-readable English string describing the result
       * </pre>
       *
       * <code>string result_str = 2;</code>
       * @return The resultStr.
       */
      @java.lang.Override
      public java.lang.String getResultStr() {
        return instance.getResultStr();
      }
      /**
       * <pre>
       * Human-readable English string describing the result
       * </pre>
       *
       * <code>string result_str = 2;</code>
       * @return The bytes for resultStr.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getResultStrBytes() {
        return instance.getResultStrBytes();
      }
      /**
       * <pre>
       * Human-readable English string describing the result
       * </pre>
       *
       * <code>string result_str = 2;</code>
       * @param value The resultStr to set.
       * @return This builder for chaining.
       */
      public Builder setResultStr(
          java.lang.String value) {
        copyOnWrite();
        instance.setResultStr(value);
        return this;
      }
      /**
       * <pre>
       * Human-readable English string describing the result
       * </pre>
       *
       * <code>string result_str = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearResultStr() {
        copyOnWrite();
        instance.clearResultStr();
        return this;
      }
      /**
       * <pre>
       * Human-readable English string describing the result
       * </pre>
       *
       * <code>string result_str = 2;</code>
       * @param value The bytes for resultStr to set.
       * @return This builder for chaining.
       */
      public Builder setResultStrBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setResultStrBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.geofence.GeofenceResult)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.geofence.GeofenceProto.GeofenceResult();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "result_",
              "resultStr_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\f\u0002\u0208" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.geofence.GeofenceProto.GeofenceResult> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.geofence.GeofenceProto.GeofenceResult.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.geofence.GeofenceProto.GeofenceResult>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.geofence.GeofenceResult)
    private static final io.mavsdk.geofence.GeofenceProto.GeofenceResult DEFAULT_INSTANCE;
    static {
      GeofenceResult defaultInstance = new GeofenceResult();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        GeofenceResult.class, defaultInstance);
    }

    public static io.mavsdk.geofence.GeofenceProto.GeofenceResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<GeofenceResult> PARSER;

    public static com.google.protobuf.Parser<GeofenceResult> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}

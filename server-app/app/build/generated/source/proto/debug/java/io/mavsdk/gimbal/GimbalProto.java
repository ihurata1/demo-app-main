// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mavsdk/gimbal/gimbal.proto

// Protobuf Java Version: 3.25.3
package io.mavsdk.gimbal;

public final class GimbalProto {
  private GimbalProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  /**
   * <pre>
   * Gimbal mode type.
   * </pre>
   *
   * Protobuf enum {@code mavsdk.rpc.gimbal.GimbalMode}
   */
  public enum GimbalMode
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     * Yaw follow will point the gimbal to the vehicle heading
     * </pre>
     *
     * <code>GIMBAL_MODE_YAW_FOLLOW = 0;</code>
     */
    GIMBAL_MODE_YAW_FOLLOW(0),
    /**
     * <pre>
     * Yaw lock will fix the gimbal pointing to an absolute direction
     * </pre>
     *
     * <code>GIMBAL_MODE_YAW_LOCK = 1;</code>
     */
    GIMBAL_MODE_YAW_LOCK(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Yaw follow will point the gimbal to the vehicle heading
     * </pre>
     *
     * <code>GIMBAL_MODE_YAW_FOLLOW = 0;</code>
     */
    public static final int GIMBAL_MODE_YAW_FOLLOW_VALUE = 0;
    /**
     * <pre>
     * Yaw lock will fix the gimbal pointing to an absolute direction
     * </pre>
     *
     * <code>GIMBAL_MODE_YAW_LOCK = 1;</code>
     */
    public static final int GIMBAL_MODE_YAW_LOCK_VALUE = 1;


    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static GimbalMode valueOf(int value) {
      return forNumber(value);
    }

    public static GimbalMode forNumber(int value) {
      switch (value) {
        case 0: return GIMBAL_MODE_YAW_FOLLOW;
        case 1: return GIMBAL_MODE_YAW_LOCK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<GimbalMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        GimbalMode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GimbalMode>() {
            @java.lang.Override
            public GimbalMode findValueByNumber(int number) {
              return GimbalMode.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return GimbalModeVerifier.INSTANCE;
    }

    private static final class GimbalModeVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new GimbalModeVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return GimbalMode.forNumber(number) != null;
            }
          };

    private final int value;

    private GimbalMode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:mavsdk.rpc.gimbal.GimbalMode)
  }

  /**
   * <pre>
   * Control mode
   * </pre>
   *
   * Protobuf enum {@code mavsdk.rpc.gimbal.ControlMode}
   */
  public enum ControlMode
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     * Indicates that the component does not have control over the gimbal
     * </pre>
     *
     * <code>CONTROL_MODE_NONE = 0;</code>
     */
    CONTROL_MODE_NONE(0),
    /**
     * <pre>
     * To take primary control over the gimbal
     * </pre>
     *
     * <code>CONTROL_MODE_PRIMARY = 1;</code>
     */
    CONTROL_MODE_PRIMARY(1),
    /**
     * <pre>
     * To take secondary control over the gimbal
     * </pre>
     *
     * <code>CONTROL_MODE_SECONDARY = 2;</code>
     */
    CONTROL_MODE_SECONDARY(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Indicates that the component does not have control over the gimbal
     * </pre>
     *
     * <code>CONTROL_MODE_NONE = 0;</code>
     */
    public static final int CONTROL_MODE_NONE_VALUE = 0;
    /**
     * <pre>
     * To take primary control over the gimbal
     * </pre>
     *
     * <code>CONTROL_MODE_PRIMARY = 1;</code>
     */
    public static final int CONTROL_MODE_PRIMARY_VALUE = 1;
    /**
     * <pre>
     * To take secondary control over the gimbal
     * </pre>
     *
     * <code>CONTROL_MODE_SECONDARY = 2;</code>
     */
    public static final int CONTROL_MODE_SECONDARY_VALUE = 2;


    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ControlMode valueOf(int value) {
      return forNumber(value);
    }

    public static ControlMode forNumber(int value) {
      switch (value) {
        case 0: return CONTROL_MODE_NONE;
        case 1: return CONTROL_MODE_PRIMARY;
        case 2: return CONTROL_MODE_SECONDARY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ControlMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ControlMode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ControlMode>() {
            @java.lang.Override
            public ControlMode findValueByNumber(int number) {
              return ControlMode.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return ControlModeVerifier.INSTANCE;
    }

    private static final class ControlModeVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new ControlModeVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return ControlMode.forNumber(number) != null;
            }
          };

    private final int value;

    private ControlMode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:mavsdk.rpc.gimbal.ControlMode)
  }

  public interface SetAnglesRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.gimbal.SetAnglesRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Roll angle in degrees
     * </pre>
     *
     * <code>float roll_deg = 1;</code>
     * @return The rollDeg.
     */
    float getRollDeg();

    /**
     * <pre>
     * Pitch angle in degrees (negative points down)
     * </pre>
     *
     * <code>float pitch_deg = 2;</code>
     * @return The pitchDeg.
     */
    float getPitchDeg();

    /**
     * <pre>
     * Yaw angle in degrees (positive is clock-wise, range: -180 to 180 or 0 to 360)
     * </pre>
     *
     * <code>float yaw_deg = 3;</code>
     * @return The yawDeg.
     */
    float getYawDeg();
  }
  /**
   * Protobuf type {@code mavsdk.rpc.gimbal.SetAnglesRequest}
   */
  public  static final class SetAnglesRequest extends
      com.google.protobuf.GeneratedMessageLite<
          SetAnglesRequest, SetAnglesRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.gimbal.SetAnglesRequest)
      SetAnglesRequestOrBuilder {
    private SetAnglesRequest() {
    }
    public static final int ROLL_DEG_FIELD_NUMBER = 1;
    private float rollDeg_;
    /**
     * <pre>
     * Roll angle in degrees
     * </pre>
     *
     * <code>float roll_deg = 1;</code>
     * @return The rollDeg.
     */
    @java.lang.Override
    public float getRollDeg() {
      return rollDeg_;
    }
    /**
     * <pre>
     * Roll angle in degrees
     * </pre>
     *
     * <code>float roll_deg = 1;</code>
     * @param value The rollDeg to set.
     */
    private void setRollDeg(float value) {
      
      rollDeg_ = value;
    }
    /**
     * <pre>
     * Roll angle in degrees
     * </pre>
     *
     * <code>float roll_deg = 1;</code>
     */
    private void clearRollDeg() {

      rollDeg_ = 0F;
    }

    public static final int PITCH_DEG_FIELD_NUMBER = 2;
    private float pitchDeg_;
    /**
     * <pre>
     * Pitch angle in degrees (negative points down)
     * </pre>
     *
     * <code>float pitch_deg = 2;</code>
     * @return The pitchDeg.
     */
    @java.lang.Override
    public float getPitchDeg() {
      return pitchDeg_;
    }
    /**
     * <pre>
     * Pitch angle in degrees (negative points down)
     * </pre>
     *
     * <code>float pitch_deg = 2;</code>
     * @param value The pitchDeg to set.
     */
    private void setPitchDeg(float value) {
      
      pitchDeg_ = value;
    }
    /**
     * <pre>
     * Pitch angle in degrees (negative points down)
     * </pre>
     *
     * <code>float pitch_deg = 2;</code>
     */
    private void clearPitchDeg() {

      pitchDeg_ = 0F;
    }

    public static final int YAW_DEG_FIELD_NUMBER = 3;
    private float yawDeg_;
    /**
     * <pre>
     * Yaw angle in degrees (positive is clock-wise, range: -180 to 180 or 0 to 360)
     * </pre>
     *
     * <code>float yaw_deg = 3;</code>
     * @return The yawDeg.
     */
    @java.lang.Override
    public float getYawDeg() {
      return yawDeg_;
    }
    /**
     * <pre>
     * Yaw angle in degrees (positive is clock-wise, range: -180 to 180 or 0 to 360)
     * </pre>
     *
     * <code>float yaw_deg = 3;</code>
     * @param value The yawDeg to set.
     */
    private void setYawDeg(float value) {
      
      yawDeg_ = value;
    }
    /**
     * <pre>
     * Yaw angle in degrees (positive is clock-wise, range: -180 to 180 or 0 to 360)
     * </pre>
     *
     * <code>float yaw_deg = 3;</code>
     */
    private void clearYawDeg() {

      yawDeg_ = 0F;
    }

    public static io.mavsdk.gimbal.GimbalProto.SetAnglesRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetAnglesRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetAnglesRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetAnglesRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetAnglesRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetAnglesRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetAnglesRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetAnglesRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.gimbal.GimbalProto.SetAnglesRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.gimbal.GimbalProto.SetAnglesRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetAnglesRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetAnglesRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.gimbal.GimbalProto.SetAnglesRequest prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code mavsdk.rpc.gimbal.SetAnglesRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.gimbal.GimbalProto.SetAnglesRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.gimbal.SetAnglesRequest)
        io.mavsdk.gimbal.GimbalProto.SetAnglesRequestOrBuilder {
      // Construct using io.mavsdk.gimbal.GimbalProto.SetAnglesRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Roll angle in degrees
       * </pre>
       *
       * <code>float roll_deg = 1;</code>
       * @return The rollDeg.
       */
      @java.lang.Override
      public float getRollDeg() {
        return instance.getRollDeg();
      }
      /**
       * <pre>
       * Roll angle in degrees
       * </pre>
       *
       * <code>float roll_deg = 1;</code>
       * @param value The rollDeg to set.
       * @return This builder for chaining.
       */
      public Builder setRollDeg(float value) {
        copyOnWrite();
        instance.setRollDeg(value);
        return this;
      }
      /**
       * <pre>
       * Roll angle in degrees
       * </pre>
       *
       * <code>float roll_deg = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearRollDeg() {
        copyOnWrite();
        instance.clearRollDeg();
        return this;
      }

      /**
       * <pre>
       * Pitch angle in degrees (negative points down)
       * </pre>
       *
       * <code>float pitch_deg = 2;</code>
       * @return The pitchDeg.
       */
      @java.lang.Override
      public float getPitchDeg() {
        return instance.getPitchDeg();
      }
      /**
       * <pre>
       * Pitch angle in degrees (negative points down)
       * </pre>
       *
       * <code>float pitch_deg = 2;</code>
       * @param value The pitchDeg to set.
       * @return This builder for chaining.
       */
      public Builder setPitchDeg(float value) {
        copyOnWrite();
        instance.setPitchDeg(value);
        return this;
      }
      /**
       * <pre>
       * Pitch angle in degrees (negative points down)
       * </pre>
       *
       * <code>float pitch_deg = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPitchDeg() {
        copyOnWrite();
        instance.clearPitchDeg();
        return this;
      }

      /**
       * <pre>
       * Yaw angle in degrees (positive is clock-wise, range: -180 to 180 or 0 to 360)
       * </pre>
       *
       * <code>float yaw_deg = 3;</code>
       * @return The yawDeg.
       */
      @java.lang.Override
      public float getYawDeg() {
        return instance.getYawDeg();
      }
      /**
       * <pre>
       * Yaw angle in degrees (positive is clock-wise, range: -180 to 180 or 0 to 360)
       * </pre>
       *
       * <code>float yaw_deg = 3;</code>
       * @param value The yawDeg to set.
       * @return This builder for chaining.
       */
      public Builder setYawDeg(float value) {
        copyOnWrite();
        instance.setYawDeg(value);
        return this;
      }
      /**
       * <pre>
       * Yaw angle in degrees (positive is clock-wise, range: -180 to 180 or 0 to 360)
       * </pre>
       *
       * <code>float yaw_deg = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearYawDeg() {
        copyOnWrite();
        instance.clearYawDeg();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.gimbal.SetAnglesRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.gimbal.GimbalProto.SetAnglesRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "rollDeg_",
              "pitchDeg_",
              "yawDeg_",
            };
            java.lang.String info =
                "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0000\u0000\u0001\u0001\u0002\u0001" +
                "\u0003\u0001";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.gimbal.GimbalProto.SetAnglesRequest> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.gimbal.GimbalProto.SetAnglesRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.gimbal.GimbalProto.SetAnglesRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.gimbal.SetAnglesRequest)
    private static final io.mavsdk.gimbal.GimbalProto.SetAnglesRequest DEFAULT_INSTANCE;
    static {
      SetAnglesRequest defaultInstance = new SetAnglesRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SetAnglesRequest.class, defaultInstance);
    }

    public static io.mavsdk.gimbal.GimbalProto.SetAnglesRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SetAnglesRequest> PARSER;

    public static com.google.protobuf.Parser<SetAnglesRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SetAnglesResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.gimbal.SetAnglesResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     * @return Whether the gimbalResult field is set.
     */
    boolean hasGimbalResult();
    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     * @return The gimbalResult.
     */
    io.mavsdk.gimbal.GimbalProto.GimbalResult getGimbalResult();
  }
  /**
   * Protobuf type {@code mavsdk.rpc.gimbal.SetAnglesResponse}
   */
  public  static final class SetAnglesResponse extends
      com.google.protobuf.GeneratedMessageLite<
          SetAnglesResponse, SetAnglesResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.gimbal.SetAnglesResponse)
      SetAnglesResponseOrBuilder {
    private SetAnglesResponse() {
    }
    private int bitField0_;
    public static final int GIMBAL_RESULT_FIELD_NUMBER = 1;
    private io.mavsdk.gimbal.GimbalProto.GimbalResult gimbalResult_;
    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     */
    @java.lang.Override
    public boolean hasGimbalResult() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     */
    @java.lang.Override
    public io.mavsdk.gimbal.GimbalProto.GimbalResult getGimbalResult() {
      return gimbalResult_ == null ? io.mavsdk.gimbal.GimbalProto.GimbalResult.getDefaultInstance() : gimbalResult_;
    }
    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     */
    private void setGimbalResult(io.mavsdk.gimbal.GimbalProto.GimbalResult value) {
      value.getClass();
  gimbalResult_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeGimbalResult(io.mavsdk.gimbal.GimbalProto.GimbalResult value) {
      value.getClass();
  if (gimbalResult_ != null &&
          gimbalResult_ != io.mavsdk.gimbal.GimbalProto.GimbalResult.getDefaultInstance()) {
        gimbalResult_ =
          io.mavsdk.gimbal.GimbalProto.GimbalResult.newBuilder(gimbalResult_).mergeFrom(value).buildPartial();
      } else {
        gimbalResult_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     */
    private void clearGimbalResult() {  gimbalResult_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static io.mavsdk.gimbal.GimbalProto.SetAnglesResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetAnglesResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetAnglesResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetAnglesResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetAnglesResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetAnglesResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetAnglesResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetAnglesResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.gimbal.GimbalProto.SetAnglesResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.gimbal.GimbalProto.SetAnglesResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetAnglesResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetAnglesResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.gimbal.GimbalProto.SetAnglesResponse prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code mavsdk.rpc.gimbal.SetAnglesResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.gimbal.GimbalProto.SetAnglesResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.gimbal.SetAnglesResponse)
        io.mavsdk.gimbal.GimbalProto.SetAnglesResponseOrBuilder {
      // Construct using io.mavsdk.gimbal.GimbalProto.SetAnglesResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
       */
      @java.lang.Override
      public boolean hasGimbalResult() {
        return instance.hasGimbalResult();
      }
      /**
       * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
       */
      @java.lang.Override
      public io.mavsdk.gimbal.GimbalProto.GimbalResult getGimbalResult() {
        return instance.getGimbalResult();
      }
      /**
       * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
       */
      public Builder setGimbalResult(io.mavsdk.gimbal.GimbalProto.GimbalResult value) {
        copyOnWrite();
        instance.setGimbalResult(value);
        return this;
        }
      /**
       * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
       */
      public Builder setGimbalResult(
          io.mavsdk.gimbal.GimbalProto.GimbalResult.Builder builderForValue) {
        copyOnWrite();
        instance.setGimbalResult(builderForValue.build());
        return this;
      }
      /**
       * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
       */
      public Builder mergeGimbalResult(io.mavsdk.gimbal.GimbalProto.GimbalResult value) {
        copyOnWrite();
        instance.mergeGimbalResult(value);
        return this;
      }
      /**
       * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
       */
      public Builder clearGimbalResult() {  copyOnWrite();
        instance.clearGimbalResult();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.gimbal.SetAnglesResponse)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.gimbal.GimbalProto.SetAnglesResponse();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "gimbalResult_",
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u1009\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.gimbal.GimbalProto.SetAnglesResponse> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.gimbal.GimbalProto.SetAnglesResponse.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.gimbal.GimbalProto.SetAnglesResponse>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.gimbal.SetAnglesResponse)
    private static final io.mavsdk.gimbal.GimbalProto.SetAnglesResponse DEFAULT_INSTANCE;
    static {
      SetAnglesResponse defaultInstance = new SetAnglesResponse();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SetAnglesResponse.class, defaultInstance);
    }

    public static io.mavsdk.gimbal.GimbalProto.SetAnglesResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SetAnglesResponse> PARSER;

    public static com.google.protobuf.Parser<SetAnglesResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SetPitchAndYawRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.gimbal.SetPitchAndYawRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Pitch angle in degrees (negative points down)
     * </pre>
     *
     * <code>float pitch_deg = 1;</code>
     * @return The pitchDeg.
     */
    float getPitchDeg();

    /**
     * <pre>
     * Yaw angle in degrees (positive is clock-wise, range: -180 to 180 or 0 to 360)
     * </pre>
     *
     * <code>float yaw_deg = 2;</code>
     * @return The yawDeg.
     */
    float getYawDeg();
  }
  /**
   * Protobuf type {@code mavsdk.rpc.gimbal.SetPitchAndYawRequest}
   */
  public  static final class SetPitchAndYawRequest extends
      com.google.protobuf.GeneratedMessageLite<
          SetPitchAndYawRequest, SetPitchAndYawRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.gimbal.SetPitchAndYawRequest)
      SetPitchAndYawRequestOrBuilder {
    private SetPitchAndYawRequest() {
    }
    public static final int PITCH_DEG_FIELD_NUMBER = 1;
    private float pitchDeg_;
    /**
     * <pre>
     * Pitch angle in degrees (negative points down)
     * </pre>
     *
     * <code>float pitch_deg = 1;</code>
     * @return The pitchDeg.
     */
    @java.lang.Override
    public float getPitchDeg() {
      return pitchDeg_;
    }
    /**
     * <pre>
     * Pitch angle in degrees (negative points down)
     * </pre>
     *
     * <code>float pitch_deg = 1;</code>
     * @param value The pitchDeg to set.
     */
    private void setPitchDeg(float value) {
      
      pitchDeg_ = value;
    }
    /**
     * <pre>
     * Pitch angle in degrees (negative points down)
     * </pre>
     *
     * <code>float pitch_deg = 1;</code>
     */
    private void clearPitchDeg() {

      pitchDeg_ = 0F;
    }

    public static final int YAW_DEG_FIELD_NUMBER = 2;
    private float yawDeg_;
    /**
     * <pre>
     * Yaw angle in degrees (positive is clock-wise, range: -180 to 180 or 0 to 360)
     * </pre>
     *
     * <code>float yaw_deg = 2;</code>
     * @return The yawDeg.
     */
    @java.lang.Override
    public float getYawDeg() {
      return yawDeg_;
    }
    /**
     * <pre>
     * Yaw angle in degrees (positive is clock-wise, range: -180 to 180 or 0 to 360)
     * </pre>
     *
     * <code>float yaw_deg = 2;</code>
     * @param value The yawDeg to set.
     */
    private void setYawDeg(float value) {
      
      yawDeg_ = value;
    }
    /**
     * <pre>
     * Yaw angle in degrees (positive is clock-wise, range: -180 to 180 or 0 to 360)
     * </pre>
     *
     * <code>float yaw_deg = 2;</code>
     */
    private void clearYawDeg() {

      yawDeg_ = 0F;
    }

    public static io.mavsdk.gimbal.GimbalProto.SetPitchAndYawRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetPitchAndYawRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetPitchAndYawRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetPitchAndYawRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetPitchAndYawRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetPitchAndYawRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetPitchAndYawRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetPitchAndYawRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.gimbal.GimbalProto.SetPitchAndYawRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.gimbal.GimbalProto.SetPitchAndYawRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetPitchAndYawRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetPitchAndYawRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.gimbal.GimbalProto.SetPitchAndYawRequest prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code mavsdk.rpc.gimbal.SetPitchAndYawRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.gimbal.GimbalProto.SetPitchAndYawRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.gimbal.SetPitchAndYawRequest)
        io.mavsdk.gimbal.GimbalProto.SetPitchAndYawRequestOrBuilder {
      // Construct using io.mavsdk.gimbal.GimbalProto.SetPitchAndYawRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Pitch angle in degrees (negative points down)
       * </pre>
       *
       * <code>float pitch_deg = 1;</code>
       * @return The pitchDeg.
       */
      @java.lang.Override
      public float getPitchDeg() {
        return instance.getPitchDeg();
      }
      /**
       * <pre>
       * Pitch angle in degrees (negative points down)
       * </pre>
       *
       * <code>float pitch_deg = 1;</code>
       * @param value The pitchDeg to set.
       * @return This builder for chaining.
       */
      public Builder setPitchDeg(float value) {
        copyOnWrite();
        instance.setPitchDeg(value);
        return this;
      }
      /**
       * <pre>
       * Pitch angle in degrees (negative points down)
       * </pre>
       *
       * <code>float pitch_deg = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPitchDeg() {
        copyOnWrite();
        instance.clearPitchDeg();
        return this;
      }

      /**
       * <pre>
       * Yaw angle in degrees (positive is clock-wise, range: -180 to 180 or 0 to 360)
       * </pre>
       *
       * <code>float yaw_deg = 2;</code>
       * @return The yawDeg.
       */
      @java.lang.Override
      public float getYawDeg() {
        return instance.getYawDeg();
      }
      /**
       * <pre>
       * Yaw angle in degrees (positive is clock-wise, range: -180 to 180 or 0 to 360)
       * </pre>
       *
       * <code>float yaw_deg = 2;</code>
       * @param value The yawDeg to set.
       * @return This builder for chaining.
       */
      public Builder setYawDeg(float value) {
        copyOnWrite();
        instance.setYawDeg(value);
        return this;
      }
      /**
       * <pre>
       * Yaw angle in degrees (positive is clock-wise, range: -180 to 180 or 0 to 360)
       * </pre>
       *
       * <code>float yaw_deg = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearYawDeg() {
        copyOnWrite();
        instance.clearYawDeg();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.gimbal.SetPitchAndYawRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.gimbal.GimbalProto.SetPitchAndYawRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "pitchDeg_",
              "yawDeg_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u0001\u0002\u0001" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.gimbal.GimbalProto.SetPitchAndYawRequest> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.gimbal.GimbalProto.SetPitchAndYawRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.gimbal.GimbalProto.SetPitchAndYawRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.gimbal.SetPitchAndYawRequest)
    private static final io.mavsdk.gimbal.GimbalProto.SetPitchAndYawRequest DEFAULT_INSTANCE;
    static {
      SetPitchAndYawRequest defaultInstance = new SetPitchAndYawRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SetPitchAndYawRequest.class, defaultInstance);
    }

    public static io.mavsdk.gimbal.GimbalProto.SetPitchAndYawRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SetPitchAndYawRequest> PARSER;

    public static com.google.protobuf.Parser<SetPitchAndYawRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SetPitchAndYawResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.gimbal.SetPitchAndYawResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     * @return Whether the gimbalResult field is set.
     */
    boolean hasGimbalResult();
    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     * @return The gimbalResult.
     */
    io.mavsdk.gimbal.GimbalProto.GimbalResult getGimbalResult();
  }
  /**
   * Protobuf type {@code mavsdk.rpc.gimbal.SetPitchAndYawResponse}
   */
  public  static final class SetPitchAndYawResponse extends
      com.google.protobuf.GeneratedMessageLite<
          SetPitchAndYawResponse, SetPitchAndYawResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.gimbal.SetPitchAndYawResponse)
      SetPitchAndYawResponseOrBuilder {
    private SetPitchAndYawResponse() {
    }
    private int bitField0_;
    public static final int GIMBAL_RESULT_FIELD_NUMBER = 1;
    private io.mavsdk.gimbal.GimbalProto.GimbalResult gimbalResult_;
    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     */
    @java.lang.Override
    public boolean hasGimbalResult() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     */
    @java.lang.Override
    public io.mavsdk.gimbal.GimbalProto.GimbalResult getGimbalResult() {
      return gimbalResult_ == null ? io.mavsdk.gimbal.GimbalProto.GimbalResult.getDefaultInstance() : gimbalResult_;
    }
    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     */
    private void setGimbalResult(io.mavsdk.gimbal.GimbalProto.GimbalResult value) {
      value.getClass();
  gimbalResult_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeGimbalResult(io.mavsdk.gimbal.GimbalProto.GimbalResult value) {
      value.getClass();
  if (gimbalResult_ != null &&
          gimbalResult_ != io.mavsdk.gimbal.GimbalProto.GimbalResult.getDefaultInstance()) {
        gimbalResult_ =
          io.mavsdk.gimbal.GimbalProto.GimbalResult.newBuilder(gimbalResult_).mergeFrom(value).buildPartial();
      } else {
        gimbalResult_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     */
    private void clearGimbalResult() {  gimbalResult_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static io.mavsdk.gimbal.GimbalProto.SetPitchAndYawResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetPitchAndYawResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetPitchAndYawResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetPitchAndYawResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetPitchAndYawResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetPitchAndYawResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetPitchAndYawResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetPitchAndYawResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.gimbal.GimbalProto.SetPitchAndYawResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.gimbal.GimbalProto.SetPitchAndYawResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetPitchAndYawResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetPitchAndYawResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.gimbal.GimbalProto.SetPitchAndYawResponse prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code mavsdk.rpc.gimbal.SetPitchAndYawResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.gimbal.GimbalProto.SetPitchAndYawResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.gimbal.SetPitchAndYawResponse)
        io.mavsdk.gimbal.GimbalProto.SetPitchAndYawResponseOrBuilder {
      // Construct using io.mavsdk.gimbal.GimbalProto.SetPitchAndYawResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
       */
      @java.lang.Override
      public boolean hasGimbalResult() {
        return instance.hasGimbalResult();
      }
      /**
       * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
       */
      @java.lang.Override
      public io.mavsdk.gimbal.GimbalProto.GimbalResult getGimbalResult() {
        return instance.getGimbalResult();
      }
      /**
       * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
       */
      public Builder setGimbalResult(io.mavsdk.gimbal.GimbalProto.GimbalResult value) {
        copyOnWrite();
        instance.setGimbalResult(value);
        return this;
        }
      /**
       * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
       */
      public Builder setGimbalResult(
          io.mavsdk.gimbal.GimbalProto.GimbalResult.Builder builderForValue) {
        copyOnWrite();
        instance.setGimbalResult(builderForValue.build());
        return this;
      }
      /**
       * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
       */
      public Builder mergeGimbalResult(io.mavsdk.gimbal.GimbalProto.GimbalResult value) {
        copyOnWrite();
        instance.mergeGimbalResult(value);
        return this;
      }
      /**
       * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
       */
      public Builder clearGimbalResult() {  copyOnWrite();
        instance.clearGimbalResult();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.gimbal.SetPitchAndYawResponse)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.gimbal.GimbalProto.SetPitchAndYawResponse();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "gimbalResult_",
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u1009\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.gimbal.GimbalProto.SetPitchAndYawResponse> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.gimbal.GimbalProto.SetPitchAndYawResponse.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.gimbal.GimbalProto.SetPitchAndYawResponse>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.gimbal.SetPitchAndYawResponse)
    private static final io.mavsdk.gimbal.GimbalProto.SetPitchAndYawResponse DEFAULT_INSTANCE;
    static {
      SetPitchAndYawResponse defaultInstance = new SetPitchAndYawResponse();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SetPitchAndYawResponse.class, defaultInstance);
    }

    public static io.mavsdk.gimbal.GimbalProto.SetPitchAndYawResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SetPitchAndYawResponse> PARSER;

    public static com.google.protobuf.Parser<SetPitchAndYawResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SetPitchRateAndYawRateRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.gimbal.SetPitchRateAndYawRateRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Angular rate around pitch axis in degrees/second (negative downward)
     * </pre>
     *
     * <code>float pitch_rate_deg_s = 1;</code>
     * @return The pitchRateDegS.
     */
    float getPitchRateDegS();

    /**
     * <pre>
     * Angular rate around yaw axis in degrees/second (positive is clock-wise)
     * </pre>
     *
     * <code>float yaw_rate_deg_s = 2;</code>
     * @return The yawRateDegS.
     */
    float getYawRateDegS();
  }
  /**
   * Protobuf type {@code mavsdk.rpc.gimbal.SetPitchRateAndYawRateRequest}
   */
  public  static final class SetPitchRateAndYawRateRequest extends
      com.google.protobuf.GeneratedMessageLite<
          SetPitchRateAndYawRateRequest, SetPitchRateAndYawRateRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.gimbal.SetPitchRateAndYawRateRequest)
      SetPitchRateAndYawRateRequestOrBuilder {
    private SetPitchRateAndYawRateRequest() {
    }
    public static final int PITCH_RATE_DEG_S_FIELD_NUMBER = 1;
    private float pitchRateDegS_;
    /**
     * <pre>
     * Angular rate around pitch axis in degrees/second (negative downward)
     * </pre>
     *
     * <code>float pitch_rate_deg_s = 1;</code>
     * @return The pitchRateDegS.
     */
    @java.lang.Override
    public float getPitchRateDegS() {
      return pitchRateDegS_;
    }
    /**
     * <pre>
     * Angular rate around pitch axis in degrees/second (negative downward)
     * </pre>
     *
     * <code>float pitch_rate_deg_s = 1;</code>
     * @param value The pitchRateDegS to set.
     */
    private void setPitchRateDegS(float value) {
      
      pitchRateDegS_ = value;
    }
    /**
     * <pre>
     * Angular rate around pitch axis in degrees/second (negative downward)
     * </pre>
     *
     * <code>float pitch_rate_deg_s = 1;</code>
     */
    private void clearPitchRateDegS() {

      pitchRateDegS_ = 0F;
    }

    public static final int YAW_RATE_DEG_S_FIELD_NUMBER = 2;
    private float yawRateDegS_;
    /**
     * <pre>
     * Angular rate around yaw axis in degrees/second (positive is clock-wise)
     * </pre>
     *
     * <code>float yaw_rate_deg_s = 2;</code>
     * @return The yawRateDegS.
     */
    @java.lang.Override
    public float getYawRateDegS() {
      return yawRateDegS_;
    }
    /**
     * <pre>
     * Angular rate around yaw axis in degrees/second (positive is clock-wise)
     * </pre>
     *
     * <code>float yaw_rate_deg_s = 2;</code>
     * @param value The yawRateDegS to set.
     */
    private void setYawRateDegS(float value) {
      
      yawRateDegS_ = value;
    }
    /**
     * <pre>
     * Angular rate around yaw axis in degrees/second (positive is clock-wise)
     * </pre>
     *
     * <code>float yaw_rate_deg_s = 2;</code>
     */
    private void clearYawRateDegS() {

      yawRateDegS_ = 0F;
    }

    public static io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateRequest prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code mavsdk.rpc.gimbal.SetPitchRateAndYawRateRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.gimbal.SetPitchRateAndYawRateRequest)
        io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateRequestOrBuilder {
      // Construct using io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Angular rate around pitch axis in degrees/second (negative downward)
       * </pre>
       *
       * <code>float pitch_rate_deg_s = 1;</code>
       * @return The pitchRateDegS.
       */
      @java.lang.Override
      public float getPitchRateDegS() {
        return instance.getPitchRateDegS();
      }
      /**
       * <pre>
       * Angular rate around pitch axis in degrees/second (negative downward)
       * </pre>
       *
       * <code>float pitch_rate_deg_s = 1;</code>
       * @param value The pitchRateDegS to set.
       * @return This builder for chaining.
       */
      public Builder setPitchRateDegS(float value) {
        copyOnWrite();
        instance.setPitchRateDegS(value);
        return this;
      }
      /**
       * <pre>
       * Angular rate around pitch axis in degrees/second (negative downward)
       * </pre>
       *
       * <code>float pitch_rate_deg_s = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPitchRateDegS() {
        copyOnWrite();
        instance.clearPitchRateDegS();
        return this;
      }

      /**
       * <pre>
       * Angular rate around yaw axis in degrees/second (positive is clock-wise)
       * </pre>
       *
       * <code>float yaw_rate_deg_s = 2;</code>
       * @return The yawRateDegS.
       */
      @java.lang.Override
      public float getYawRateDegS() {
        return instance.getYawRateDegS();
      }
      /**
       * <pre>
       * Angular rate around yaw axis in degrees/second (positive is clock-wise)
       * </pre>
       *
       * <code>float yaw_rate_deg_s = 2;</code>
       * @param value The yawRateDegS to set.
       * @return This builder for chaining.
       */
      public Builder setYawRateDegS(float value) {
        copyOnWrite();
        instance.setYawRateDegS(value);
        return this;
      }
      /**
       * <pre>
       * Angular rate around yaw axis in degrees/second (positive is clock-wise)
       * </pre>
       *
       * <code>float yaw_rate_deg_s = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearYawRateDegS() {
        copyOnWrite();
        instance.clearYawRateDegS();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.gimbal.SetPitchRateAndYawRateRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "pitchRateDegS_",
              "yawRateDegS_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u0001\u0002\u0001" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateRequest> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.gimbal.SetPitchRateAndYawRateRequest)
    private static final io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateRequest DEFAULT_INSTANCE;
    static {
      SetPitchRateAndYawRateRequest defaultInstance = new SetPitchRateAndYawRateRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SetPitchRateAndYawRateRequest.class, defaultInstance);
    }

    public static io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SetPitchRateAndYawRateRequest> PARSER;

    public static com.google.protobuf.Parser<SetPitchRateAndYawRateRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SetPitchRateAndYawRateResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.gimbal.SetPitchRateAndYawRateResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     * @return Whether the gimbalResult field is set.
     */
    boolean hasGimbalResult();
    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     * @return The gimbalResult.
     */
    io.mavsdk.gimbal.GimbalProto.GimbalResult getGimbalResult();
  }
  /**
   * Protobuf type {@code mavsdk.rpc.gimbal.SetPitchRateAndYawRateResponse}
   */
  public  static final class SetPitchRateAndYawRateResponse extends
      com.google.protobuf.GeneratedMessageLite<
          SetPitchRateAndYawRateResponse, SetPitchRateAndYawRateResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.gimbal.SetPitchRateAndYawRateResponse)
      SetPitchRateAndYawRateResponseOrBuilder {
    private SetPitchRateAndYawRateResponse() {
    }
    private int bitField0_;
    public static final int GIMBAL_RESULT_FIELD_NUMBER = 1;
    private io.mavsdk.gimbal.GimbalProto.GimbalResult gimbalResult_;
    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     */
    @java.lang.Override
    public boolean hasGimbalResult() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     */
    @java.lang.Override
    public io.mavsdk.gimbal.GimbalProto.GimbalResult getGimbalResult() {
      return gimbalResult_ == null ? io.mavsdk.gimbal.GimbalProto.GimbalResult.getDefaultInstance() : gimbalResult_;
    }
    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     */
    private void setGimbalResult(io.mavsdk.gimbal.GimbalProto.GimbalResult value) {
      value.getClass();
  gimbalResult_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeGimbalResult(io.mavsdk.gimbal.GimbalProto.GimbalResult value) {
      value.getClass();
  if (gimbalResult_ != null &&
          gimbalResult_ != io.mavsdk.gimbal.GimbalProto.GimbalResult.getDefaultInstance()) {
        gimbalResult_ =
          io.mavsdk.gimbal.GimbalProto.GimbalResult.newBuilder(gimbalResult_).mergeFrom(value).buildPartial();
      } else {
        gimbalResult_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     */
    private void clearGimbalResult() {  gimbalResult_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateResponse prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code mavsdk.rpc.gimbal.SetPitchRateAndYawRateResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.gimbal.SetPitchRateAndYawRateResponse)
        io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateResponseOrBuilder {
      // Construct using io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
       */
      @java.lang.Override
      public boolean hasGimbalResult() {
        return instance.hasGimbalResult();
      }
      /**
       * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
       */
      @java.lang.Override
      public io.mavsdk.gimbal.GimbalProto.GimbalResult getGimbalResult() {
        return instance.getGimbalResult();
      }
      /**
       * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
       */
      public Builder setGimbalResult(io.mavsdk.gimbal.GimbalProto.GimbalResult value) {
        copyOnWrite();
        instance.setGimbalResult(value);
        return this;
        }
      /**
       * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
       */
      public Builder setGimbalResult(
          io.mavsdk.gimbal.GimbalProto.GimbalResult.Builder builderForValue) {
        copyOnWrite();
        instance.setGimbalResult(builderForValue.build());
        return this;
      }
      /**
       * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
       */
      public Builder mergeGimbalResult(io.mavsdk.gimbal.GimbalProto.GimbalResult value) {
        copyOnWrite();
        instance.mergeGimbalResult(value);
        return this;
      }
      /**
       * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
       */
      public Builder clearGimbalResult() {  copyOnWrite();
        instance.clearGimbalResult();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.gimbal.SetPitchRateAndYawRateResponse)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateResponse();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "gimbalResult_",
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u1009\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateResponse> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateResponse.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateResponse>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.gimbal.SetPitchRateAndYawRateResponse)
    private static final io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateResponse DEFAULT_INSTANCE;
    static {
      SetPitchRateAndYawRateResponse defaultInstance = new SetPitchRateAndYawRateResponse();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SetPitchRateAndYawRateResponse.class, defaultInstance);
    }

    public static io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SetPitchRateAndYawRateResponse> PARSER;

    public static com.google.protobuf.Parser<SetPitchRateAndYawRateResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SetModeRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.gimbal.SetModeRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The mode to be set.
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.GimbalMode gimbal_mode = 1;</code>
     * @return The enum numeric value on the wire for gimbalMode.
     */
    int getGimbalModeValue();
    /**
     * <pre>
     * The mode to be set.
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.GimbalMode gimbal_mode = 1;</code>
     * @return The gimbalMode.
     */
    io.mavsdk.gimbal.GimbalProto.GimbalMode getGimbalMode();
  }
  /**
   * Protobuf type {@code mavsdk.rpc.gimbal.SetModeRequest}
   */
  public  static final class SetModeRequest extends
      com.google.protobuf.GeneratedMessageLite<
          SetModeRequest, SetModeRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.gimbal.SetModeRequest)
      SetModeRequestOrBuilder {
    private SetModeRequest() {
    }
    public static final int GIMBAL_MODE_FIELD_NUMBER = 1;
    private int gimbalMode_;
    /**
     * <pre>
     * The mode to be set.
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.GimbalMode gimbal_mode = 1;</code>
     * @return The enum numeric value on the wire for gimbalMode.
     */
    @java.lang.Override
    public int getGimbalModeValue() {
      return gimbalMode_;
    }
    /**
     * <pre>
     * The mode to be set.
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.GimbalMode gimbal_mode = 1;</code>
     * @return The gimbalMode.
     */
    @java.lang.Override
    public io.mavsdk.gimbal.GimbalProto.GimbalMode getGimbalMode() {
      io.mavsdk.gimbal.GimbalProto.GimbalMode result = io.mavsdk.gimbal.GimbalProto.GimbalMode.forNumber(gimbalMode_);
      return result == null ? io.mavsdk.gimbal.GimbalProto.GimbalMode.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * The mode to be set.
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.GimbalMode gimbal_mode = 1;</code>
     * @param value The enum numeric value on the wire for gimbalMode to set.
     */
    private void setGimbalModeValue(int value) {
        gimbalMode_ = value;
    }
    /**
     * <pre>
     * The mode to be set.
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.GimbalMode gimbal_mode = 1;</code>
     * @param value The gimbalMode to set.
     */
    private void setGimbalMode(io.mavsdk.gimbal.GimbalProto.GimbalMode value) {
      gimbalMode_ = value.getNumber();

    }
    /**
     * <pre>
     * The mode to be set.
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.GimbalMode gimbal_mode = 1;</code>
     */
    private void clearGimbalMode() {

      gimbalMode_ = 0;
    }

    public static io.mavsdk.gimbal.GimbalProto.SetModeRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetModeRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetModeRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetModeRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetModeRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetModeRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetModeRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetModeRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.gimbal.GimbalProto.SetModeRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.gimbal.GimbalProto.SetModeRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetModeRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetModeRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.gimbal.GimbalProto.SetModeRequest prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code mavsdk.rpc.gimbal.SetModeRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.gimbal.GimbalProto.SetModeRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.gimbal.SetModeRequest)
        io.mavsdk.gimbal.GimbalProto.SetModeRequestOrBuilder {
      // Construct using io.mavsdk.gimbal.GimbalProto.SetModeRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The mode to be set.
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.GimbalMode gimbal_mode = 1;</code>
       * @return The enum numeric value on the wire for gimbalMode.
       */
      @java.lang.Override
      public int getGimbalModeValue() {
        return instance.getGimbalModeValue();
      }
      /**
       * <pre>
       * The mode to be set.
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.GimbalMode gimbal_mode = 1;</code>
       * @param value The gimbalMode to set.
       * @return This builder for chaining.
       */
      public Builder setGimbalModeValue(int value) {
        copyOnWrite();
        instance.setGimbalModeValue(value);
        return this;
      }
      /**
       * <pre>
       * The mode to be set.
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.GimbalMode gimbal_mode = 1;</code>
       * @return The gimbalMode.
       */
      @java.lang.Override
      public io.mavsdk.gimbal.GimbalProto.GimbalMode getGimbalMode() {
        return instance.getGimbalMode();
      }
      /**
       * <pre>
       * The mode to be set.
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.GimbalMode gimbal_mode = 1;</code>
       * @param value The enum numeric value on the wire for gimbalMode to set.
       * @return This builder for chaining.
       */
      public Builder setGimbalMode(io.mavsdk.gimbal.GimbalProto.GimbalMode value) {
        copyOnWrite();
        instance.setGimbalMode(value);
        return this;
      }
      /**
       * <pre>
       * The mode to be set.
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.GimbalMode gimbal_mode = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearGimbalMode() {
        copyOnWrite();
        instance.clearGimbalMode();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.gimbal.SetModeRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.gimbal.GimbalProto.SetModeRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "gimbalMode_",
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0000\u0000\u0001\f";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.gimbal.GimbalProto.SetModeRequest> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.gimbal.GimbalProto.SetModeRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.gimbal.GimbalProto.SetModeRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.gimbal.SetModeRequest)
    private static final io.mavsdk.gimbal.GimbalProto.SetModeRequest DEFAULT_INSTANCE;
    static {
      SetModeRequest defaultInstance = new SetModeRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SetModeRequest.class, defaultInstance);
    }

    public static io.mavsdk.gimbal.GimbalProto.SetModeRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SetModeRequest> PARSER;

    public static com.google.protobuf.Parser<SetModeRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SetModeResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.gimbal.SetModeResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     * @return Whether the gimbalResult field is set.
     */
    boolean hasGimbalResult();
    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     * @return The gimbalResult.
     */
    io.mavsdk.gimbal.GimbalProto.GimbalResult getGimbalResult();
  }
  /**
   * Protobuf type {@code mavsdk.rpc.gimbal.SetModeResponse}
   */
  public  static final class SetModeResponse extends
      com.google.protobuf.GeneratedMessageLite<
          SetModeResponse, SetModeResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.gimbal.SetModeResponse)
      SetModeResponseOrBuilder {
    private SetModeResponse() {
    }
    private int bitField0_;
    public static final int GIMBAL_RESULT_FIELD_NUMBER = 1;
    private io.mavsdk.gimbal.GimbalProto.GimbalResult gimbalResult_;
    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     */
    @java.lang.Override
    public boolean hasGimbalResult() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     */
    @java.lang.Override
    public io.mavsdk.gimbal.GimbalProto.GimbalResult getGimbalResult() {
      return gimbalResult_ == null ? io.mavsdk.gimbal.GimbalProto.GimbalResult.getDefaultInstance() : gimbalResult_;
    }
    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     */
    private void setGimbalResult(io.mavsdk.gimbal.GimbalProto.GimbalResult value) {
      value.getClass();
  gimbalResult_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeGimbalResult(io.mavsdk.gimbal.GimbalProto.GimbalResult value) {
      value.getClass();
  if (gimbalResult_ != null &&
          gimbalResult_ != io.mavsdk.gimbal.GimbalProto.GimbalResult.getDefaultInstance()) {
        gimbalResult_ =
          io.mavsdk.gimbal.GimbalProto.GimbalResult.newBuilder(gimbalResult_).mergeFrom(value).buildPartial();
      } else {
        gimbalResult_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     */
    private void clearGimbalResult() {  gimbalResult_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static io.mavsdk.gimbal.GimbalProto.SetModeResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetModeResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetModeResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetModeResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetModeResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetModeResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetModeResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetModeResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.gimbal.GimbalProto.SetModeResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.gimbal.GimbalProto.SetModeResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetModeResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetModeResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.gimbal.GimbalProto.SetModeResponse prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code mavsdk.rpc.gimbal.SetModeResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.gimbal.GimbalProto.SetModeResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.gimbal.SetModeResponse)
        io.mavsdk.gimbal.GimbalProto.SetModeResponseOrBuilder {
      // Construct using io.mavsdk.gimbal.GimbalProto.SetModeResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
       */
      @java.lang.Override
      public boolean hasGimbalResult() {
        return instance.hasGimbalResult();
      }
      /**
       * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
       */
      @java.lang.Override
      public io.mavsdk.gimbal.GimbalProto.GimbalResult getGimbalResult() {
        return instance.getGimbalResult();
      }
      /**
       * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
       */
      public Builder setGimbalResult(io.mavsdk.gimbal.GimbalProto.GimbalResult value) {
        copyOnWrite();
        instance.setGimbalResult(value);
        return this;
        }
      /**
       * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
       */
      public Builder setGimbalResult(
          io.mavsdk.gimbal.GimbalProto.GimbalResult.Builder builderForValue) {
        copyOnWrite();
        instance.setGimbalResult(builderForValue.build());
        return this;
      }
      /**
       * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
       */
      public Builder mergeGimbalResult(io.mavsdk.gimbal.GimbalProto.GimbalResult value) {
        copyOnWrite();
        instance.mergeGimbalResult(value);
        return this;
      }
      /**
       * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
       */
      public Builder clearGimbalResult() {  copyOnWrite();
        instance.clearGimbalResult();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.gimbal.SetModeResponse)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.gimbal.GimbalProto.SetModeResponse();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "gimbalResult_",
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u1009\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.gimbal.GimbalProto.SetModeResponse> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.gimbal.GimbalProto.SetModeResponse.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.gimbal.GimbalProto.SetModeResponse>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.gimbal.SetModeResponse)
    private static final io.mavsdk.gimbal.GimbalProto.SetModeResponse DEFAULT_INSTANCE;
    static {
      SetModeResponse defaultInstance = new SetModeResponse();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SetModeResponse.class, defaultInstance);
    }

    public static io.mavsdk.gimbal.GimbalProto.SetModeResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SetModeResponse> PARSER;

    public static com.google.protobuf.Parser<SetModeResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SetRoiLocationRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.gimbal.SetRoiLocationRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Latitude in degrees
     * </pre>
     *
     * <code>double latitude_deg = 1;</code>
     * @return The latitudeDeg.
     */
    double getLatitudeDeg();

    /**
     * <pre>
     * Longitude in degrees
     * </pre>
     *
     * <code>double longitude_deg = 2;</code>
     * @return The longitudeDeg.
     */
    double getLongitudeDeg();

    /**
     * <pre>
     * Altitude in metres (AMSL)
     * </pre>
     *
     * <code>float altitude_m = 3;</code>
     * @return The altitudeM.
     */
    float getAltitudeM();
  }
  /**
   * Protobuf type {@code mavsdk.rpc.gimbal.SetRoiLocationRequest}
   */
  public  static final class SetRoiLocationRequest extends
      com.google.protobuf.GeneratedMessageLite<
          SetRoiLocationRequest, SetRoiLocationRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.gimbal.SetRoiLocationRequest)
      SetRoiLocationRequestOrBuilder {
    private SetRoiLocationRequest() {
    }
    public static final int LATITUDE_DEG_FIELD_NUMBER = 1;
    private double latitudeDeg_;
    /**
     * <pre>
     * Latitude in degrees
     * </pre>
     *
     * <code>double latitude_deg = 1;</code>
     * @return The latitudeDeg.
     */
    @java.lang.Override
    public double getLatitudeDeg() {
      return latitudeDeg_;
    }
    /**
     * <pre>
     * Latitude in degrees
     * </pre>
     *
     * <code>double latitude_deg = 1;</code>
     * @param value The latitudeDeg to set.
     */
    private void setLatitudeDeg(double value) {
      
      latitudeDeg_ = value;
    }
    /**
     * <pre>
     * Latitude in degrees
     * </pre>
     *
     * <code>double latitude_deg = 1;</code>
     */
    private void clearLatitudeDeg() {

      latitudeDeg_ = 0D;
    }

    public static final int LONGITUDE_DEG_FIELD_NUMBER = 2;
    private double longitudeDeg_;
    /**
     * <pre>
     * Longitude in degrees
     * </pre>
     *
     * <code>double longitude_deg = 2;</code>
     * @return The longitudeDeg.
     */
    @java.lang.Override
    public double getLongitudeDeg() {
      return longitudeDeg_;
    }
    /**
     * <pre>
     * Longitude in degrees
     * </pre>
     *
     * <code>double longitude_deg = 2;</code>
     * @param value The longitudeDeg to set.
     */
    private void setLongitudeDeg(double value) {
      
      longitudeDeg_ = value;
    }
    /**
     * <pre>
     * Longitude in degrees
     * </pre>
     *
     * <code>double longitude_deg = 2;</code>
     */
    private void clearLongitudeDeg() {

      longitudeDeg_ = 0D;
    }

    public static final int ALTITUDE_M_FIELD_NUMBER = 3;
    private float altitudeM_;
    /**
     * <pre>
     * Altitude in metres (AMSL)
     * </pre>
     *
     * <code>float altitude_m = 3;</code>
     * @return The altitudeM.
     */
    @java.lang.Override
    public float getAltitudeM() {
      return altitudeM_;
    }
    /**
     * <pre>
     * Altitude in metres (AMSL)
     * </pre>
     *
     * <code>float altitude_m = 3;</code>
     * @param value The altitudeM to set.
     */
    private void setAltitudeM(float value) {
      
      altitudeM_ = value;
    }
    /**
     * <pre>
     * Altitude in metres (AMSL)
     * </pre>
     *
     * <code>float altitude_m = 3;</code>
     */
    private void clearAltitudeM() {

      altitudeM_ = 0F;
    }

    public static io.mavsdk.gimbal.GimbalProto.SetRoiLocationRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetRoiLocationRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetRoiLocationRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetRoiLocationRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetRoiLocationRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetRoiLocationRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetRoiLocationRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetRoiLocationRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.gimbal.GimbalProto.SetRoiLocationRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.gimbal.GimbalProto.SetRoiLocationRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetRoiLocationRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetRoiLocationRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.gimbal.GimbalProto.SetRoiLocationRequest prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code mavsdk.rpc.gimbal.SetRoiLocationRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.gimbal.GimbalProto.SetRoiLocationRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.gimbal.SetRoiLocationRequest)
        io.mavsdk.gimbal.GimbalProto.SetRoiLocationRequestOrBuilder {
      // Construct using io.mavsdk.gimbal.GimbalProto.SetRoiLocationRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Latitude in degrees
       * </pre>
       *
       * <code>double latitude_deg = 1;</code>
       * @return The latitudeDeg.
       */
      @java.lang.Override
      public double getLatitudeDeg() {
        return instance.getLatitudeDeg();
      }
      /**
       * <pre>
       * Latitude in degrees
       * </pre>
       *
       * <code>double latitude_deg = 1;</code>
       * @param value The latitudeDeg to set.
       * @return This builder for chaining.
       */
      public Builder setLatitudeDeg(double value) {
        copyOnWrite();
        instance.setLatitudeDeg(value);
        return this;
      }
      /**
       * <pre>
       * Latitude in degrees
       * </pre>
       *
       * <code>double latitude_deg = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearLatitudeDeg() {
        copyOnWrite();
        instance.clearLatitudeDeg();
        return this;
      }

      /**
       * <pre>
       * Longitude in degrees
       * </pre>
       *
       * <code>double longitude_deg = 2;</code>
       * @return The longitudeDeg.
       */
      @java.lang.Override
      public double getLongitudeDeg() {
        return instance.getLongitudeDeg();
      }
      /**
       * <pre>
       * Longitude in degrees
       * </pre>
       *
       * <code>double longitude_deg = 2;</code>
       * @param value The longitudeDeg to set.
       * @return This builder for chaining.
       */
      public Builder setLongitudeDeg(double value) {
        copyOnWrite();
        instance.setLongitudeDeg(value);
        return this;
      }
      /**
       * <pre>
       * Longitude in degrees
       * </pre>
       *
       * <code>double longitude_deg = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLongitudeDeg() {
        copyOnWrite();
        instance.clearLongitudeDeg();
        return this;
      }

      /**
       * <pre>
       * Altitude in metres (AMSL)
       * </pre>
       *
       * <code>float altitude_m = 3;</code>
       * @return The altitudeM.
       */
      @java.lang.Override
      public float getAltitudeM() {
        return instance.getAltitudeM();
      }
      /**
       * <pre>
       * Altitude in metres (AMSL)
       * </pre>
       *
       * <code>float altitude_m = 3;</code>
       * @param value The altitudeM to set.
       * @return This builder for chaining.
       */
      public Builder setAltitudeM(float value) {
        copyOnWrite();
        instance.setAltitudeM(value);
        return this;
      }
      /**
       * <pre>
       * Altitude in metres (AMSL)
       * </pre>
       *
       * <code>float altitude_m = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearAltitudeM() {
        copyOnWrite();
        instance.clearAltitudeM();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.gimbal.SetRoiLocationRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.gimbal.GimbalProto.SetRoiLocationRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "latitudeDeg_",
              "longitudeDeg_",
              "altitudeM_",
            };
            java.lang.String info =
                "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
                "\u0003\u0001";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.gimbal.GimbalProto.SetRoiLocationRequest> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.gimbal.GimbalProto.SetRoiLocationRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.gimbal.GimbalProto.SetRoiLocationRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.gimbal.SetRoiLocationRequest)
    private static final io.mavsdk.gimbal.GimbalProto.SetRoiLocationRequest DEFAULT_INSTANCE;
    static {
      SetRoiLocationRequest defaultInstance = new SetRoiLocationRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SetRoiLocationRequest.class, defaultInstance);
    }

    public static io.mavsdk.gimbal.GimbalProto.SetRoiLocationRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SetRoiLocationRequest> PARSER;

    public static com.google.protobuf.Parser<SetRoiLocationRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SetRoiLocationResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.gimbal.SetRoiLocationResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     * @return Whether the gimbalResult field is set.
     */
    boolean hasGimbalResult();
    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     * @return The gimbalResult.
     */
    io.mavsdk.gimbal.GimbalProto.GimbalResult getGimbalResult();
  }
  /**
   * Protobuf type {@code mavsdk.rpc.gimbal.SetRoiLocationResponse}
   */
  public  static final class SetRoiLocationResponse extends
      com.google.protobuf.GeneratedMessageLite<
          SetRoiLocationResponse, SetRoiLocationResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.gimbal.SetRoiLocationResponse)
      SetRoiLocationResponseOrBuilder {
    private SetRoiLocationResponse() {
    }
    private int bitField0_;
    public static final int GIMBAL_RESULT_FIELD_NUMBER = 1;
    private io.mavsdk.gimbal.GimbalProto.GimbalResult gimbalResult_;
    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     */
    @java.lang.Override
    public boolean hasGimbalResult() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     */
    @java.lang.Override
    public io.mavsdk.gimbal.GimbalProto.GimbalResult getGimbalResult() {
      return gimbalResult_ == null ? io.mavsdk.gimbal.GimbalProto.GimbalResult.getDefaultInstance() : gimbalResult_;
    }
    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     */
    private void setGimbalResult(io.mavsdk.gimbal.GimbalProto.GimbalResult value) {
      value.getClass();
  gimbalResult_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeGimbalResult(io.mavsdk.gimbal.GimbalProto.GimbalResult value) {
      value.getClass();
  if (gimbalResult_ != null &&
          gimbalResult_ != io.mavsdk.gimbal.GimbalProto.GimbalResult.getDefaultInstance()) {
        gimbalResult_ =
          io.mavsdk.gimbal.GimbalProto.GimbalResult.newBuilder(gimbalResult_).mergeFrom(value).buildPartial();
      } else {
        gimbalResult_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     */
    private void clearGimbalResult() {  gimbalResult_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static io.mavsdk.gimbal.GimbalProto.SetRoiLocationResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetRoiLocationResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetRoiLocationResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetRoiLocationResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetRoiLocationResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetRoiLocationResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetRoiLocationResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetRoiLocationResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.gimbal.GimbalProto.SetRoiLocationResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.gimbal.GimbalProto.SetRoiLocationResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetRoiLocationResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.SetRoiLocationResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.gimbal.GimbalProto.SetRoiLocationResponse prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code mavsdk.rpc.gimbal.SetRoiLocationResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.gimbal.GimbalProto.SetRoiLocationResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.gimbal.SetRoiLocationResponse)
        io.mavsdk.gimbal.GimbalProto.SetRoiLocationResponseOrBuilder {
      // Construct using io.mavsdk.gimbal.GimbalProto.SetRoiLocationResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
       */
      @java.lang.Override
      public boolean hasGimbalResult() {
        return instance.hasGimbalResult();
      }
      /**
       * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
       */
      @java.lang.Override
      public io.mavsdk.gimbal.GimbalProto.GimbalResult getGimbalResult() {
        return instance.getGimbalResult();
      }
      /**
       * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
       */
      public Builder setGimbalResult(io.mavsdk.gimbal.GimbalProto.GimbalResult value) {
        copyOnWrite();
        instance.setGimbalResult(value);
        return this;
        }
      /**
       * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
       */
      public Builder setGimbalResult(
          io.mavsdk.gimbal.GimbalProto.GimbalResult.Builder builderForValue) {
        copyOnWrite();
        instance.setGimbalResult(builderForValue.build());
        return this;
      }
      /**
       * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
       */
      public Builder mergeGimbalResult(io.mavsdk.gimbal.GimbalProto.GimbalResult value) {
        copyOnWrite();
        instance.mergeGimbalResult(value);
        return this;
      }
      /**
       * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
       */
      public Builder clearGimbalResult() {  copyOnWrite();
        instance.clearGimbalResult();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.gimbal.SetRoiLocationResponse)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.gimbal.GimbalProto.SetRoiLocationResponse();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "gimbalResult_",
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u1009\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.gimbal.GimbalProto.SetRoiLocationResponse> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.gimbal.GimbalProto.SetRoiLocationResponse.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.gimbal.GimbalProto.SetRoiLocationResponse>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.gimbal.SetRoiLocationResponse)
    private static final io.mavsdk.gimbal.GimbalProto.SetRoiLocationResponse DEFAULT_INSTANCE;
    static {
      SetRoiLocationResponse defaultInstance = new SetRoiLocationResponse();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SetRoiLocationResponse.class, defaultInstance);
    }

    public static io.mavsdk.gimbal.GimbalProto.SetRoiLocationResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SetRoiLocationResponse> PARSER;

    public static com.google.protobuf.Parser<SetRoiLocationResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface TakeControlRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.gimbal.TakeControlRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Control mode (primary or secondary)
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.ControlMode control_mode = 1;</code>
     * @return The enum numeric value on the wire for controlMode.
     */
    int getControlModeValue();
    /**
     * <pre>
     * Control mode (primary or secondary)
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.ControlMode control_mode = 1;</code>
     * @return The controlMode.
     */
    io.mavsdk.gimbal.GimbalProto.ControlMode getControlMode();
  }
  /**
   * Protobuf type {@code mavsdk.rpc.gimbal.TakeControlRequest}
   */
  public  static final class TakeControlRequest extends
      com.google.protobuf.GeneratedMessageLite<
          TakeControlRequest, TakeControlRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.gimbal.TakeControlRequest)
      TakeControlRequestOrBuilder {
    private TakeControlRequest() {
    }
    public static final int CONTROL_MODE_FIELD_NUMBER = 1;
    private int controlMode_;
    /**
     * <pre>
     * Control mode (primary or secondary)
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.ControlMode control_mode = 1;</code>
     * @return The enum numeric value on the wire for controlMode.
     */
    @java.lang.Override
    public int getControlModeValue() {
      return controlMode_;
    }
    /**
     * <pre>
     * Control mode (primary or secondary)
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.ControlMode control_mode = 1;</code>
     * @return The controlMode.
     */
    @java.lang.Override
    public io.mavsdk.gimbal.GimbalProto.ControlMode getControlMode() {
      io.mavsdk.gimbal.GimbalProto.ControlMode result = io.mavsdk.gimbal.GimbalProto.ControlMode.forNumber(controlMode_);
      return result == null ? io.mavsdk.gimbal.GimbalProto.ControlMode.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Control mode (primary or secondary)
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.ControlMode control_mode = 1;</code>
     * @param value The enum numeric value on the wire for controlMode to set.
     */
    private void setControlModeValue(int value) {
        controlMode_ = value;
    }
    /**
     * <pre>
     * Control mode (primary or secondary)
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.ControlMode control_mode = 1;</code>
     * @param value The controlMode to set.
     */
    private void setControlMode(io.mavsdk.gimbal.GimbalProto.ControlMode value) {
      controlMode_ = value.getNumber();

    }
    /**
     * <pre>
     * Control mode (primary or secondary)
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.ControlMode control_mode = 1;</code>
     */
    private void clearControlMode() {

      controlMode_ = 0;
    }

    public static io.mavsdk.gimbal.GimbalProto.TakeControlRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.TakeControlRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.TakeControlRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.TakeControlRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.TakeControlRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.TakeControlRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.TakeControlRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.TakeControlRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.gimbal.GimbalProto.TakeControlRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.gimbal.GimbalProto.TakeControlRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.TakeControlRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.TakeControlRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.gimbal.GimbalProto.TakeControlRequest prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code mavsdk.rpc.gimbal.TakeControlRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.gimbal.GimbalProto.TakeControlRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.gimbal.TakeControlRequest)
        io.mavsdk.gimbal.GimbalProto.TakeControlRequestOrBuilder {
      // Construct using io.mavsdk.gimbal.GimbalProto.TakeControlRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Control mode (primary or secondary)
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.ControlMode control_mode = 1;</code>
       * @return The enum numeric value on the wire for controlMode.
       */
      @java.lang.Override
      public int getControlModeValue() {
        return instance.getControlModeValue();
      }
      /**
       * <pre>
       * Control mode (primary or secondary)
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.ControlMode control_mode = 1;</code>
       * @param value The controlMode to set.
       * @return This builder for chaining.
       */
      public Builder setControlModeValue(int value) {
        copyOnWrite();
        instance.setControlModeValue(value);
        return this;
      }
      /**
       * <pre>
       * Control mode (primary or secondary)
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.ControlMode control_mode = 1;</code>
       * @return The controlMode.
       */
      @java.lang.Override
      public io.mavsdk.gimbal.GimbalProto.ControlMode getControlMode() {
        return instance.getControlMode();
      }
      /**
       * <pre>
       * Control mode (primary or secondary)
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.ControlMode control_mode = 1;</code>
       * @param value The enum numeric value on the wire for controlMode to set.
       * @return This builder for chaining.
       */
      public Builder setControlMode(io.mavsdk.gimbal.GimbalProto.ControlMode value) {
        copyOnWrite();
        instance.setControlMode(value);
        return this;
      }
      /**
       * <pre>
       * Control mode (primary or secondary)
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.ControlMode control_mode = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearControlMode() {
        copyOnWrite();
        instance.clearControlMode();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.gimbal.TakeControlRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.gimbal.GimbalProto.TakeControlRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "controlMode_",
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0000\u0000\u0001\f";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.gimbal.GimbalProto.TakeControlRequest> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.gimbal.GimbalProto.TakeControlRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.gimbal.GimbalProto.TakeControlRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.gimbal.TakeControlRequest)
    private static final io.mavsdk.gimbal.GimbalProto.TakeControlRequest DEFAULT_INSTANCE;
    static {
      TakeControlRequest defaultInstance = new TakeControlRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        TakeControlRequest.class, defaultInstance);
    }

    public static io.mavsdk.gimbal.GimbalProto.TakeControlRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<TakeControlRequest> PARSER;

    public static com.google.protobuf.Parser<TakeControlRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface TakeControlResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.gimbal.TakeControlResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     * @return Whether the gimbalResult field is set.
     */
    boolean hasGimbalResult();
    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     * @return The gimbalResult.
     */
    io.mavsdk.gimbal.GimbalProto.GimbalResult getGimbalResult();
  }
  /**
   * Protobuf type {@code mavsdk.rpc.gimbal.TakeControlResponse}
   */
  public  static final class TakeControlResponse extends
      com.google.protobuf.GeneratedMessageLite<
          TakeControlResponse, TakeControlResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.gimbal.TakeControlResponse)
      TakeControlResponseOrBuilder {
    private TakeControlResponse() {
    }
    private int bitField0_;
    public static final int GIMBAL_RESULT_FIELD_NUMBER = 1;
    private io.mavsdk.gimbal.GimbalProto.GimbalResult gimbalResult_;
    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     */
    @java.lang.Override
    public boolean hasGimbalResult() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     */
    @java.lang.Override
    public io.mavsdk.gimbal.GimbalProto.GimbalResult getGimbalResult() {
      return gimbalResult_ == null ? io.mavsdk.gimbal.GimbalProto.GimbalResult.getDefaultInstance() : gimbalResult_;
    }
    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     */
    private void setGimbalResult(io.mavsdk.gimbal.GimbalProto.GimbalResult value) {
      value.getClass();
  gimbalResult_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeGimbalResult(io.mavsdk.gimbal.GimbalProto.GimbalResult value) {
      value.getClass();
  if (gimbalResult_ != null &&
          gimbalResult_ != io.mavsdk.gimbal.GimbalProto.GimbalResult.getDefaultInstance()) {
        gimbalResult_ =
          io.mavsdk.gimbal.GimbalProto.GimbalResult.newBuilder(gimbalResult_).mergeFrom(value).buildPartial();
      } else {
        gimbalResult_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     */
    private void clearGimbalResult() {  gimbalResult_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static io.mavsdk.gimbal.GimbalProto.TakeControlResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.TakeControlResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.TakeControlResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.TakeControlResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.TakeControlResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.TakeControlResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.TakeControlResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.TakeControlResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.gimbal.GimbalProto.TakeControlResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.gimbal.GimbalProto.TakeControlResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.TakeControlResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.TakeControlResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.gimbal.GimbalProto.TakeControlResponse prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code mavsdk.rpc.gimbal.TakeControlResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.gimbal.GimbalProto.TakeControlResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.gimbal.TakeControlResponse)
        io.mavsdk.gimbal.GimbalProto.TakeControlResponseOrBuilder {
      // Construct using io.mavsdk.gimbal.GimbalProto.TakeControlResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
       */
      @java.lang.Override
      public boolean hasGimbalResult() {
        return instance.hasGimbalResult();
      }
      /**
       * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
       */
      @java.lang.Override
      public io.mavsdk.gimbal.GimbalProto.GimbalResult getGimbalResult() {
        return instance.getGimbalResult();
      }
      /**
       * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
       */
      public Builder setGimbalResult(io.mavsdk.gimbal.GimbalProto.GimbalResult value) {
        copyOnWrite();
        instance.setGimbalResult(value);
        return this;
        }
      /**
       * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
       */
      public Builder setGimbalResult(
          io.mavsdk.gimbal.GimbalProto.GimbalResult.Builder builderForValue) {
        copyOnWrite();
        instance.setGimbalResult(builderForValue.build());
        return this;
      }
      /**
       * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
       */
      public Builder mergeGimbalResult(io.mavsdk.gimbal.GimbalProto.GimbalResult value) {
        copyOnWrite();
        instance.mergeGimbalResult(value);
        return this;
      }
      /**
       * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
       */
      public Builder clearGimbalResult() {  copyOnWrite();
        instance.clearGimbalResult();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.gimbal.TakeControlResponse)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.gimbal.GimbalProto.TakeControlResponse();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "gimbalResult_",
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u1009\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.gimbal.GimbalProto.TakeControlResponse> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.gimbal.GimbalProto.TakeControlResponse.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.gimbal.GimbalProto.TakeControlResponse>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.gimbal.TakeControlResponse)
    private static final io.mavsdk.gimbal.GimbalProto.TakeControlResponse DEFAULT_INSTANCE;
    static {
      TakeControlResponse defaultInstance = new TakeControlResponse();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        TakeControlResponse.class, defaultInstance);
    }

    public static io.mavsdk.gimbal.GimbalProto.TakeControlResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<TakeControlResponse> PARSER;

    public static com.google.protobuf.Parser<TakeControlResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ReleaseControlRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.gimbal.ReleaseControlRequest)
      com.google.protobuf.MessageLiteOrBuilder {
  }
  /**
   * Protobuf type {@code mavsdk.rpc.gimbal.ReleaseControlRequest}
   */
  public  static final class ReleaseControlRequest extends
      com.google.protobuf.GeneratedMessageLite<
          ReleaseControlRequest, ReleaseControlRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.gimbal.ReleaseControlRequest)
      ReleaseControlRequestOrBuilder {
    private ReleaseControlRequest() {
    }
    public static io.mavsdk.gimbal.GimbalProto.ReleaseControlRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.ReleaseControlRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.ReleaseControlRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.ReleaseControlRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.ReleaseControlRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.ReleaseControlRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.ReleaseControlRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.ReleaseControlRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.gimbal.GimbalProto.ReleaseControlRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.gimbal.GimbalProto.ReleaseControlRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.ReleaseControlRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.ReleaseControlRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.gimbal.GimbalProto.ReleaseControlRequest prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code mavsdk.rpc.gimbal.ReleaseControlRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.gimbal.GimbalProto.ReleaseControlRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.gimbal.ReleaseControlRequest)
        io.mavsdk.gimbal.GimbalProto.ReleaseControlRequestOrBuilder {
      // Construct using io.mavsdk.gimbal.GimbalProto.ReleaseControlRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.gimbal.ReleaseControlRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.gimbal.GimbalProto.ReleaseControlRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = null;java.lang.String info =
                "\u0000\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.gimbal.GimbalProto.ReleaseControlRequest> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.gimbal.GimbalProto.ReleaseControlRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.gimbal.GimbalProto.ReleaseControlRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.gimbal.ReleaseControlRequest)
    private static final io.mavsdk.gimbal.GimbalProto.ReleaseControlRequest DEFAULT_INSTANCE;
    static {
      ReleaseControlRequest defaultInstance = new ReleaseControlRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ReleaseControlRequest.class, defaultInstance);
    }

    public static io.mavsdk.gimbal.GimbalProto.ReleaseControlRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ReleaseControlRequest> PARSER;

    public static com.google.protobuf.Parser<ReleaseControlRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ReleaseControlResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.gimbal.ReleaseControlResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     * @return Whether the gimbalResult field is set.
     */
    boolean hasGimbalResult();
    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     * @return The gimbalResult.
     */
    io.mavsdk.gimbal.GimbalProto.GimbalResult getGimbalResult();
  }
  /**
   * Protobuf type {@code mavsdk.rpc.gimbal.ReleaseControlResponse}
   */
  public  static final class ReleaseControlResponse extends
      com.google.protobuf.GeneratedMessageLite<
          ReleaseControlResponse, ReleaseControlResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.gimbal.ReleaseControlResponse)
      ReleaseControlResponseOrBuilder {
    private ReleaseControlResponse() {
    }
    private int bitField0_;
    public static final int GIMBAL_RESULT_FIELD_NUMBER = 1;
    private io.mavsdk.gimbal.GimbalProto.GimbalResult gimbalResult_;
    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     */
    @java.lang.Override
    public boolean hasGimbalResult() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     */
    @java.lang.Override
    public io.mavsdk.gimbal.GimbalProto.GimbalResult getGimbalResult() {
      return gimbalResult_ == null ? io.mavsdk.gimbal.GimbalProto.GimbalResult.getDefaultInstance() : gimbalResult_;
    }
    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     */
    private void setGimbalResult(io.mavsdk.gimbal.GimbalProto.GimbalResult value) {
      value.getClass();
  gimbalResult_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeGimbalResult(io.mavsdk.gimbal.GimbalProto.GimbalResult value) {
      value.getClass();
  if (gimbalResult_ != null &&
          gimbalResult_ != io.mavsdk.gimbal.GimbalProto.GimbalResult.getDefaultInstance()) {
        gimbalResult_ =
          io.mavsdk.gimbal.GimbalProto.GimbalResult.newBuilder(gimbalResult_).mergeFrom(value).buildPartial();
      } else {
        gimbalResult_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
     */
    private void clearGimbalResult() {  gimbalResult_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static io.mavsdk.gimbal.GimbalProto.ReleaseControlResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.ReleaseControlResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.ReleaseControlResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.ReleaseControlResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.ReleaseControlResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.ReleaseControlResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.ReleaseControlResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.ReleaseControlResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.gimbal.GimbalProto.ReleaseControlResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.gimbal.GimbalProto.ReleaseControlResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.ReleaseControlResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.ReleaseControlResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.gimbal.GimbalProto.ReleaseControlResponse prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code mavsdk.rpc.gimbal.ReleaseControlResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.gimbal.GimbalProto.ReleaseControlResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.gimbal.ReleaseControlResponse)
        io.mavsdk.gimbal.GimbalProto.ReleaseControlResponseOrBuilder {
      // Construct using io.mavsdk.gimbal.GimbalProto.ReleaseControlResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
       */
      @java.lang.Override
      public boolean hasGimbalResult() {
        return instance.hasGimbalResult();
      }
      /**
       * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
       */
      @java.lang.Override
      public io.mavsdk.gimbal.GimbalProto.GimbalResult getGimbalResult() {
        return instance.getGimbalResult();
      }
      /**
       * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
       */
      public Builder setGimbalResult(io.mavsdk.gimbal.GimbalProto.GimbalResult value) {
        copyOnWrite();
        instance.setGimbalResult(value);
        return this;
        }
      /**
       * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
       */
      public Builder setGimbalResult(
          io.mavsdk.gimbal.GimbalProto.GimbalResult.Builder builderForValue) {
        copyOnWrite();
        instance.setGimbalResult(builderForValue.build());
        return this;
      }
      /**
       * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
       */
      public Builder mergeGimbalResult(io.mavsdk.gimbal.GimbalProto.GimbalResult value) {
        copyOnWrite();
        instance.mergeGimbalResult(value);
        return this;
      }
      /**
       * <code>.mavsdk.rpc.gimbal.GimbalResult gimbal_result = 1;</code>
       */
      public Builder clearGimbalResult() {  copyOnWrite();
        instance.clearGimbalResult();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.gimbal.ReleaseControlResponse)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.gimbal.GimbalProto.ReleaseControlResponse();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "gimbalResult_",
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u1009\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.gimbal.GimbalProto.ReleaseControlResponse> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.gimbal.GimbalProto.ReleaseControlResponse.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.gimbal.GimbalProto.ReleaseControlResponse>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.gimbal.ReleaseControlResponse)
    private static final io.mavsdk.gimbal.GimbalProto.ReleaseControlResponse DEFAULT_INSTANCE;
    static {
      ReleaseControlResponse defaultInstance = new ReleaseControlResponse();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ReleaseControlResponse.class, defaultInstance);
    }

    public static io.mavsdk.gimbal.GimbalProto.ReleaseControlResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ReleaseControlResponse> PARSER;

    public static com.google.protobuf.Parser<ReleaseControlResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SubscribeControlRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.gimbal.SubscribeControlRequest)
      com.google.protobuf.MessageLiteOrBuilder {
  }
  /**
   * Protobuf type {@code mavsdk.rpc.gimbal.SubscribeControlRequest}
   */
  public  static final class SubscribeControlRequest extends
      com.google.protobuf.GeneratedMessageLite<
          SubscribeControlRequest, SubscribeControlRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.gimbal.SubscribeControlRequest)
      SubscribeControlRequestOrBuilder {
    private SubscribeControlRequest() {
    }
    public static io.mavsdk.gimbal.GimbalProto.SubscribeControlRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.SubscribeControlRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SubscribeControlRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.SubscribeControlRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SubscribeControlRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.SubscribeControlRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SubscribeControlRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.SubscribeControlRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.gimbal.GimbalProto.SubscribeControlRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.gimbal.GimbalProto.SubscribeControlRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SubscribeControlRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.SubscribeControlRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.gimbal.GimbalProto.SubscribeControlRequest prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code mavsdk.rpc.gimbal.SubscribeControlRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.gimbal.GimbalProto.SubscribeControlRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.gimbal.SubscribeControlRequest)
        io.mavsdk.gimbal.GimbalProto.SubscribeControlRequestOrBuilder {
      // Construct using io.mavsdk.gimbal.GimbalProto.SubscribeControlRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.gimbal.SubscribeControlRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.gimbal.GimbalProto.SubscribeControlRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = null;java.lang.String info =
                "\u0000\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.gimbal.GimbalProto.SubscribeControlRequest> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.gimbal.GimbalProto.SubscribeControlRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.gimbal.GimbalProto.SubscribeControlRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.gimbal.SubscribeControlRequest)
    private static final io.mavsdk.gimbal.GimbalProto.SubscribeControlRequest DEFAULT_INSTANCE;
    static {
      SubscribeControlRequest defaultInstance = new SubscribeControlRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SubscribeControlRequest.class, defaultInstance);
    }

    public static io.mavsdk.gimbal.GimbalProto.SubscribeControlRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SubscribeControlRequest> PARSER;

    public static com.google.protobuf.Parser<SubscribeControlRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ControlResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.gimbal.ControlResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Control status
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.ControlStatus control_status = 1;</code>
     * @return Whether the controlStatus field is set.
     */
    boolean hasControlStatus();
    /**
     * <pre>
     * Control status
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.ControlStatus control_status = 1;</code>
     * @return The controlStatus.
     */
    io.mavsdk.gimbal.GimbalProto.ControlStatus getControlStatus();
  }
  /**
   * Protobuf type {@code mavsdk.rpc.gimbal.ControlResponse}
   */
  public  static final class ControlResponse extends
      com.google.protobuf.GeneratedMessageLite<
          ControlResponse, ControlResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.gimbal.ControlResponse)
      ControlResponseOrBuilder {
    private ControlResponse() {
    }
    private int bitField0_;
    public static final int CONTROL_STATUS_FIELD_NUMBER = 1;
    private io.mavsdk.gimbal.GimbalProto.ControlStatus controlStatus_;
    /**
     * <pre>
     * Control status
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.ControlStatus control_status = 1;</code>
     */
    @java.lang.Override
    public boolean hasControlStatus() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Control status
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.ControlStatus control_status = 1;</code>
     */
    @java.lang.Override
    public io.mavsdk.gimbal.GimbalProto.ControlStatus getControlStatus() {
      return controlStatus_ == null ? io.mavsdk.gimbal.GimbalProto.ControlStatus.getDefaultInstance() : controlStatus_;
    }
    /**
     * <pre>
     * Control status
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.ControlStatus control_status = 1;</code>
     */
    private void setControlStatus(io.mavsdk.gimbal.GimbalProto.ControlStatus value) {
      value.getClass();
  controlStatus_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <pre>
     * Control status
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.ControlStatus control_status = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeControlStatus(io.mavsdk.gimbal.GimbalProto.ControlStatus value) {
      value.getClass();
  if (controlStatus_ != null &&
          controlStatus_ != io.mavsdk.gimbal.GimbalProto.ControlStatus.getDefaultInstance()) {
        controlStatus_ =
          io.mavsdk.gimbal.GimbalProto.ControlStatus.newBuilder(controlStatus_).mergeFrom(value).buildPartial();
      } else {
        controlStatus_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <pre>
     * Control status
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.ControlStatus control_status = 1;</code>
     */
    private void clearControlStatus() {  controlStatus_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static io.mavsdk.gimbal.GimbalProto.ControlResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.ControlResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.ControlResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.ControlResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.ControlResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.ControlResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.ControlResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.ControlResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.gimbal.GimbalProto.ControlResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.gimbal.GimbalProto.ControlResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.ControlResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.ControlResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.gimbal.GimbalProto.ControlResponse prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code mavsdk.rpc.gimbal.ControlResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.gimbal.GimbalProto.ControlResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.gimbal.ControlResponse)
        io.mavsdk.gimbal.GimbalProto.ControlResponseOrBuilder {
      // Construct using io.mavsdk.gimbal.GimbalProto.ControlResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Control status
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.ControlStatus control_status = 1;</code>
       */
      @java.lang.Override
      public boolean hasControlStatus() {
        return instance.hasControlStatus();
      }
      /**
       * <pre>
       * Control status
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.ControlStatus control_status = 1;</code>
       */
      @java.lang.Override
      public io.mavsdk.gimbal.GimbalProto.ControlStatus getControlStatus() {
        return instance.getControlStatus();
      }
      /**
       * <pre>
       * Control status
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.ControlStatus control_status = 1;</code>
       */
      public Builder setControlStatus(io.mavsdk.gimbal.GimbalProto.ControlStatus value) {
        copyOnWrite();
        instance.setControlStatus(value);
        return this;
        }
      /**
       * <pre>
       * Control status
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.ControlStatus control_status = 1;</code>
       */
      public Builder setControlStatus(
          io.mavsdk.gimbal.GimbalProto.ControlStatus.Builder builderForValue) {
        copyOnWrite();
        instance.setControlStatus(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Control status
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.ControlStatus control_status = 1;</code>
       */
      public Builder mergeControlStatus(io.mavsdk.gimbal.GimbalProto.ControlStatus value) {
        copyOnWrite();
        instance.mergeControlStatus(value);
        return this;
      }
      /**
       * <pre>
       * Control status
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.ControlStatus control_status = 1;</code>
       */
      public Builder clearControlStatus() {  copyOnWrite();
        instance.clearControlStatus();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.gimbal.ControlResponse)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.gimbal.GimbalProto.ControlResponse();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "controlStatus_",
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u1009\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.gimbal.GimbalProto.ControlResponse> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.gimbal.GimbalProto.ControlResponse.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.gimbal.GimbalProto.ControlResponse>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.gimbal.ControlResponse)
    private static final io.mavsdk.gimbal.GimbalProto.ControlResponse DEFAULT_INSTANCE;
    static {
      ControlResponse defaultInstance = new ControlResponse();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ControlResponse.class, defaultInstance);
    }

    public static io.mavsdk.gimbal.GimbalProto.ControlResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ControlResponse> PARSER;

    public static com.google.protobuf.Parser<ControlResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface QuaternionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.gimbal.Quaternion)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Quaternion entry 0, also denoted as a
     * </pre>
     *
     * <code>float w = 1 [(.mavsdk.options.default_value) = "NaN"];</code>
     * @return The w.
     */
    float getW();

    /**
     * <pre>
     * Quaternion entry 1, also denoted as b
     * </pre>
     *
     * <code>float x = 2 [(.mavsdk.options.default_value) = "NaN"];</code>
     * @return The x.
     */
    float getX();

    /**
     * <pre>
     * Quaternion entry 2, also denoted as c
     * </pre>
     *
     * <code>float y = 3 [(.mavsdk.options.default_value) = "NaN"];</code>
     * @return The y.
     */
    float getY();

    /**
     * <pre>
     * Quaternion entry 3, also denoted as d
     * </pre>
     *
     * <code>float z = 4 [(.mavsdk.options.default_value) = "NaN"];</code>
     * @return The z.
     */
    float getZ();
  }
  /**
   * <pre>
   *
   * Quaternion type.
   *
   * All rotations and axis systems follow the right-hand rule.
   * The Hamilton quaternion product definition is used.
   * A zero-rotation quaternion is represented by (1,0,0,0).
   * The quaternion could also be written as w + xi + yj + zk.
   *
   * For more info see: https://en.wikipedia.org/wiki/Quaternion
   * </pre>
   *
   * Protobuf type {@code mavsdk.rpc.gimbal.Quaternion}
   */
  public  static final class Quaternion extends
      com.google.protobuf.GeneratedMessageLite<
          Quaternion, Quaternion.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.gimbal.Quaternion)
      QuaternionOrBuilder {
    private Quaternion() {
    }
    public static final int W_FIELD_NUMBER = 1;
    private float w_;
    /**
     * <pre>
     * Quaternion entry 0, also denoted as a
     * </pre>
     *
     * <code>float w = 1 [(.mavsdk.options.default_value) = "NaN"];</code>
     * @return The w.
     */
    @java.lang.Override
    public float getW() {
      return w_;
    }
    /**
     * <pre>
     * Quaternion entry 0, also denoted as a
     * </pre>
     *
     * <code>float w = 1 [(.mavsdk.options.default_value) = "NaN"];</code>
     * @param value The w to set.
     */
    private void setW(float value) {
      
      w_ = value;
    }
    /**
     * <pre>
     * Quaternion entry 0, also denoted as a
     * </pre>
     *
     * <code>float w = 1 [(.mavsdk.options.default_value) = "NaN"];</code>
     */
    private void clearW() {

      w_ = 0F;
    }

    public static final int X_FIELD_NUMBER = 2;
    private float x_;
    /**
     * <pre>
     * Quaternion entry 1, also denoted as b
     * </pre>
     *
     * <code>float x = 2 [(.mavsdk.options.default_value) = "NaN"];</code>
     * @return The x.
     */
    @java.lang.Override
    public float getX() {
      return x_;
    }
    /**
     * <pre>
     * Quaternion entry 1, also denoted as b
     * </pre>
     *
     * <code>float x = 2 [(.mavsdk.options.default_value) = "NaN"];</code>
     * @param value The x to set.
     */
    private void setX(float value) {
      
      x_ = value;
    }
    /**
     * <pre>
     * Quaternion entry 1, also denoted as b
     * </pre>
     *
     * <code>float x = 2 [(.mavsdk.options.default_value) = "NaN"];</code>
     */
    private void clearX() {

      x_ = 0F;
    }

    public static final int Y_FIELD_NUMBER = 3;
    private float y_;
    /**
     * <pre>
     * Quaternion entry 2, also denoted as c
     * </pre>
     *
     * <code>float y = 3 [(.mavsdk.options.default_value) = "NaN"];</code>
     * @return The y.
     */
    @java.lang.Override
    public float getY() {
      return y_;
    }
    /**
     * <pre>
     * Quaternion entry 2, also denoted as c
     * </pre>
     *
     * <code>float y = 3 [(.mavsdk.options.default_value) = "NaN"];</code>
     * @param value The y to set.
     */
    private void setY(float value) {
      
      y_ = value;
    }
    /**
     * <pre>
     * Quaternion entry 2, also denoted as c
     * </pre>
     *
     * <code>float y = 3 [(.mavsdk.options.default_value) = "NaN"];</code>
     */
    private void clearY() {

      y_ = 0F;
    }

    public static final int Z_FIELD_NUMBER = 4;
    private float z_;
    /**
     * <pre>
     * Quaternion entry 3, also denoted as d
     * </pre>
     *
     * <code>float z = 4 [(.mavsdk.options.default_value) = "NaN"];</code>
     * @return The z.
     */
    @java.lang.Override
    public float getZ() {
      return z_;
    }
    /**
     * <pre>
     * Quaternion entry 3, also denoted as d
     * </pre>
     *
     * <code>float z = 4 [(.mavsdk.options.default_value) = "NaN"];</code>
     * @param value The z to set.
     */
    private void setZ(float value) {
      
      z_ = value;
    }
    /**
     * <pre>
     * Quaternion entry 3, also denoted as d
     * </pre>
     *
     * <code>float z = 4 [(.mavsdk.options.default_value) = "NaN"];</code>
     */
    private void clearZ() {

      z_ = 0F;
    }

    public static io.mavsdk.gimbal.GimbalProto.Quaternion parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.Quaternion parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.Quaternion parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.Quaternion parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.Quaternion parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.Quaternion parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.Quaternion parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.Quaternion parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.gimbal.GimbalProto.Quaternion parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.gimbal.GimbalProto.Quaternion parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.Quaternion parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.Quaternion parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.gimbal.GimbalProto.Quaternion prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     *
     * Quaternion type.
     *
     * All rotations and axis systems follow the right-hand rule.
     * The Hamilton quaternion product definition is used.
     * A zero-rotation quaternion is represented by (1,0,0,0).
     * The quaternion could also be written as w + xi + yj + zk.
     *
     * For more info see: https://en.wikipedia.org/wiki/Quaternion
     * </pre>
     *
     * Protobuf type {@code mavsdk.rpc.gimbal.Quaternion}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.gimbal.GimbalProto.Quaternion, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.gimbal.Quaternion)
        io.mavsdk.gimbal.GimbalProto.QuaternionOrBuilder {
      // Construct using io.mavsdk.gimbal.GimbalProto.Quaternion.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Quaternion entry 0, also denoted as a
       * </pre>
       *
       * <code>float w = 1 [(.mavsdk.options.default_value) = "NaN"];</code>
       * @return The w.
       */
      @java.lang.Override
      public float getW() {
        return instance.getW();
      }
      /**
       * <pre>
       * Quaternion entry 0, also denoted as a
       * </pre>
       *
       * <code>float w = 1 [(.mavsdk.options.default_value) = "NaN"];</code>
       * @param value The w to set.
       * @return This builder for chaining.
       */
      public Builder setW(float value) {
        copyOnWrite();
        instance.setW(value);
        return this;
      }
      /**
       * <pre>
       * Quaternion entry 0, also denoted as a
       * </pre>
       *
       * <code>float w = 1 [(.mavsdk.options.default_value) = "NaN"];</code>
       * @return This builder for chaining.
       */
      public Builder clearW() {
        copyOnWrite();
        instance.clearW();
        return this;
      }

      /**
       * <pre>
       * Quaternion entry 1, also denoted as b
       * </pre>
       *
       * <code>float x = 2 [(.mavsdk.options.default_value) = "NaN"];</code>
       * @return The x.
       */
      @java.lang.Override
      public float getX() {
        return instance.getX();
      }
      /**
       * <pre>
       * Quaternion entry 1, also denoted as b
       * </pre>
       *
       * <code>float x = 2 [(.mavsdk.options.default_value) = "NaN"];</code>
       * @param value The x to set.
       * @return This builder for chaining.
       */
      public Builder setX(float value) {
        copyOnWrite();
        instance.setX(value);
        return this;
      }
      /**
       * <pre>
       * Quaternion entry 1, also denoted as b
       * </pre>
       *
       * <code>float x = 2 [(.mavsdk.options.default_value) = "NaN"];</code>
       * @return This builder for chaining.
       */
      public Builder clearX() {
        copyOnWrite();
        instance.clearX();
        return this;
      }

      /**
       * <pre>
       * Quaternion entry 2, also denoted as c
       * </pre>
       *
       * <code>float y = 3 [(.mavsdk.options.default_value) = "NaN"];</code>
       * @return The y.
       */
      @java.lang.Override
      public float getY() {
        return instance.getY();
      }
      /**
       * <pre>
       * Quaternion entry 2, also denoted as c
       * </pre>
       *
       * <code>float y = 3 [(.mavsdk.options.default_value) = "NaN"];</code>
       * @param value The y to set.
       * @return This builder for chaining.
       */
      public Builder setY(float value) {
        copyOnWrite();
        instance.setY(value);
        return this;
      }
      /**
       * <pre>
       * Quaternion entry 2, also denoted as c
       * </pre>
       *
       * <code>float y = 3 [(.mavsdk.options.default_value) = "NaN"];</code>
       * @return This builder for chaining.
       */
      public Builder clearY() {
        copyOnWrite();
        instance.clearY();
        return this;
      }

      /**
       * <pre>
       * Quaternion entry 3, also denoted as d
       * </pre>
       *
       * <code>float z = 4 [(.mavsdk.options.default_value) = "NaN"];</code>
       * @return The z.
       */
      @java.lang.Override
      public float getZ() {
        return instance.getZ();
      }
      /**
       * <pre>
       * Quaternion entry 3, also denoted as d
       * </pre>
       *
       * <code>float z = 4 [(.mavsdk.options.default_value) = "NaN"];</code>
       * @param value The z to set.
       * @return This builder for chaining.
       */
      public Builder setZ(float value) {
        copyOnWrite();
        instance.setZ(value);
        return this;
      }
      /**
       * <pre>
       * Quaternion entry 3, also denoted as d
       * </pre>
       *
       * <code>float z = 4 [(.mavsdk.options.default_value) = "NaN"];</code>
       * @return This builder for chaining.
       */
      public Builder clearZ() {
        copyOnWrite();
        instance.clearZ();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.gimbal.Quaternion)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.gimbal.GimbalProto.Quaternion();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "w_",
              "x_",
              "y_",
              "z_",
            };
            java.lang.String info =
                "\u0000\u0004\u0000\u0000\u0001\u0004\u0004\u0000\u0000\u0000\u0001\u0001\u0002\u0001" +
                "\u0003\u0001\u0004\u0001";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.gimbal.GimbalProto.Quaternion> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.gimbal.GimbalProto.Quaternion.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.gimbal.GimbalProto.Quaternion>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.gimbal.Quaternion)
    private static final io.mavsdk.gimbal.GimbalProto.Quaternion DEFAULT_INSTANCE;
    static {
      Quaternion defaultInstance = new Quaternion();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Quaternion.class, defaultInstance);
    }

    public static io.mavsdk.gimbal.GimbalProto.Quaternion getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Quaternion> PARSER;

    public static com.google.protobuf.Parser<Quaternion> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EulerAngleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.gimbal.EulerAngle)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Roll angle in degrees, positive is banking to the right
     * </pre>
     *
     * <code>float roll_deg = 1 [(.mavsdk.options.default_value) = "NaN"];</code>
     * @return The rollDeg.
     */
    float getRollDeg();

    /**
     * <pre>
     * Pitch angle in degrees, positive is pitching nose up
     * </pre>
     *
     * <code>float pitch_deg = 2 [(.mavsdk.options.default_value) = "NaN"];</code>
     * @return The pitchDeg.
     */
    float getPitchDeg();

    /**
     * <pre>
     * Yaw angle in degrees, positive is clock-wise seen from above
     * </pre>
     *
     * <code>float yaw_deg = 3 [(.mavsdk.options.default_value) = "NaN"];</code>
     * @return The yawDeg.
     */
    float getYawDeg();
  }
  /**
   * <pre>
   *
   * Euler angle type.
   *
   * All rotations and axis systems follow the right-hand rule.
   * The Euler angles are converted using the 3-1-2 sequence instead of standard 3-2-1 in order
   * to avoid the gimbal lock at 90 degrees down.
   *
   * For more info see https://en.wikipedia.org/wiki/Euler_angles
   * </pre>
   *
   * Protobuf type {@code mavsdk.rpc.gimbal.EulerAngle}
   */
  public  static final class EulerAngle extends
      com.google.protobuf.GeneratedMessageLite<
          EulerAngle, EulerAngle.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.gimbal.EulerAngle)
      EulerAngleOrBuilder {
    private EulerAngle() {
    }
    public static final int ROLL_DEG_FIELD_NUMBER = 1;
    private float rollDeg_;
    /**
     * <pre>
     * Roll angle in degrees, positive is banking to the right
     * </pre>
     *
     * <code>float roll_deg = 1 [(.mavsdk.options.default_value) = "NaN"];</code>
     * @return The rollDeg.
     */
    @java.lang.Override
    public float getRollDeg() {
      return rollDeg_;
    }
    /**
     * <pre>
     * Roll angle in degrees, positive is banking to the right
     * </pre>
     *
     * <code>float roll_deg = 1 [(.mavsdk.options.default_value) = "NaN"];</code>
     * @param value The rollDeg to set.
     */
    private void setRollDeg(float value) {
      
      rollDeg_ = value;
    }
    /**
     * <pre>
     * Roll angle in degrees, positive is banking to the right
     * </pre>
     *
     * <code>float roll_deg = 1 [(.mavsdk.options.default_value) = "NaN"];</code>
     */
    private void clearRollDeg() {

      rollDeg_ = 0F;
    }

    public static final int PITCH_DEG_FIELD_NUMBER = 2;
    private float pitchDeg_;
    /**
     * <pre>
     * Pitch angle in degrees, positive is pitching nose up
     * </pre>
     *
     * <code>float pitch_deg = 2 [(.mavsdk.options.default_value) = "NaN"];</code>
     * @return The pitchDeg.
     */
    @java.lang.Override
    public float getPitchDeg() {
      return pitchDeg_;
    }
    /**
     * <pre>
     * Pitch angle in degrees, positive is pitching nose up
     * </pre>
     *
     * <code>float pitch_deg = 2 [(.mavsdk.options.default_value) = "NaN"];</code>
     * @param value The pitchDeg to set.
     */
    private void setPitchDeg(float value) {
      
      pitchDeg_ = value;
    }
    /**
     * <pre>
     * Pitch angle in degrees, positive is pitching nose up
     * </pre>
     *
     * <code>float pitch_deg = 2 [(.mavsdk.options.default_value) = "NaN"];</code>
     */
    private void clearPitchDeg() {

      pitchDeg_ = 0F;
    }

    public static final int YAW_DEG_FIELD_NUMBER = 3;
    private float yawDeg_;
    /**
     * <pre>
     * Yaw angle in degrees, positive is clock-wise seen from above
     * </pre>
     *
     * <code>float yaw_deg = 3 [(.mavsdk.options.default_value) = "NaN"];</code>
     * @return The yawDeg.
     */
    @java.lang.Override
    public float getYawDeg() {
      return yawDeg_;
    }
    /**
     * <pre>
     * Yaw angle in degrees, positive is clock-wise seen from above
     * </pre>
     *
     * <code>float yaw_deg = 3 [(.mavsdk.options.default_value) = "NaN"];</code>
     * @param value The yawDeg to set.
     */
    private void setYawDeg(float value) {
      
      yawDeg_ = value;
    }
    /**
     * <pre>
     * Yaw angle in degrees, positive is clock-wise seen from above
     * </pre>
     *
     * <code>float yaw_deg = 3 [(.mavsdk.options.default_value) = "NaN"];</code>
     */
    private void clearYawDeg() {

      yawDeg_ = 0F;
    }

    public static io.mavsdk.gimbal.GimbalProto.EulerAngle parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.EulerAngle parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.EulerAngle parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.EulerAngle parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.EulerAngle parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.EulerAngle parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.EulerAngle parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.EulerAngle parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.gimbal.GimbalProto.EulerAngle parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.gimbal.GimbalProto.EulerAngle parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.EulerAngle parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.EulerAngle parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.gimbal.GimbalProto.EulerAngle prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     *
     * Euler angle type.
     *
     * All rotations and axis systems follow the right-hand rule.
     * The Euler angles are converted using the 3-1-2 sequence instead of standard 3-2-1 in order
     * to avoid the gimbal lock at 90 degrees down.
     *
     * For more info see https://en.wikipedia.org/wiki/Euler_angles
     * </pre>
     *
     * Protobuf type {@code mavsdk.rpc.gimbal.EulerAngle}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.gimbal.GimbalProto.EulerAngle, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.gimbal.EulerAngle)
        io.mavsdk.gimbal.GimbalProto.EulerAngleOrBuilder {
      // Construct using io.mavsdk.gimbal.GimbalProto.EulerAngle.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Roll angle in degrees, positive is banking to the right
       * </pre>
       *
       * <code>float roll_deg = 1 [(.mavsdk.options.default_value) = "NaN"];</code>
       * @return The rollDeg.
       */
      @java.lang.Override
      public float getRollDeg() {
        return instance.getRollDeg();
      }
      /**
       * <pre>
       * Roll angle in degrees, positive is banking to the right
       * </pre>
       *
       * <code>float roll_deg = 1 [(.mavsdk.options.default_value) = "NaN"];</code>
       * @param value The rollDeg to set.
       * @return This builder for chaining.
       */
      public Builder setRollDeg(float value) {
        copyOnWrite();
        instance.setRollDeg(value);
        return this;
      }
      /**
       * <pre>
       * Roll angle in degrees, positive is banking to the right
       * </pre>
       *
       * <code>float roll_deg = 1 [(.mavsdk.options.default_value) = "NaN"];</code>
       * @return This builder for chaining.
       */
      public Builder clearRollDeg() {
        copyOnWrite();
        instance.clearRollDeg();
        return this;
      }

      /**
       * <pre>
       * Pitch angle in degrees, positive is pitching nose up
       * </pre>
       *
       * <code>float pitch_deg = 2 [(.mavsdk.options.default_value) = "NaN"];</code>
       * @return The pitchDeg.
       */
      @java.lang.Override
      public float getPitchDeg() {
        return instance.getPitchDeg();
      }
      /**
       * <pre>
       * Pitch angle in degrees, positive is pitching nose up
       * </pre>
       *
       * <code>float pitch_deg = 2 [(.mavsdk.options.default_value) = "NaN"];</code>
       * @param value The pitchDeg to set.
       * @return This builder for chaining.
       */
      public Builder setPitchDeg(float value) {
        copyOnWrite();
        instance.setPitchDeg(value);
        return this;
      }
      /**
       * <pre>
       * Pitch angle in degrees, positive is pitching nose up
       * </pre>
       *
       * <code>float pitch_deg = 2 [(.mavsdk.options.default_value) = "NaN"];</code>
       * @return This builder for chaining.
       */
      public Builder clearPitchDeg() {
        copyOnWrite();
        instance.clearPitchDeg();
        return this;
      }

      /**
       * <pre>
       * Yaw angle in degrees, positive is clock-wise seen from above
       * </pre>
       *
       * <code>float yaw_deg = 3 [(.mavsdk.options.default_value) = "NaN"];</code>
       * @return The yawDeg.
       */
      @java.lang.Override
      public float getYawDeg() {
        return instance.getYawDeg();
      }
      /**
       * <pre>
       * Yaw angle in degrees, positive is clock-wise seen from above
       * </pre>
       *
       * <code>float yaw_deg = 3 [(.mavsdk.options.default_value) = "NaN"];</code>
       * @param value The yawDeg to set.
       * @return This builder for chaining.
       */
      public Builder setYawDeg(float value) {
        copyOnWrite();
        instance.setYawDeg(value);
        return this;
      }
      /**
       * <pre>
       * Yaw angle in degrees, positive is clock-wise seen from above
       * </pre>
       *
       * <code>float yaw_deg = 3 [(.mavsdk.options.default_value) = "NaN"];</code>
       * @return This builder for chaining.
       */
      public Builder clearYawDeg() {
        copyOnWrite();
        instance.clearYawDeg();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.gimbal.EulerAngle)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.gimbal.GimbalProto.EulerAngle();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "rollDeg_",
              "pitchDeg_",
              "yawDeg_",
            };
            java.lang.String info =
                "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0000\u0000\u0001\u0001\u0002\u0001" +
                "\u0003\u0001";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.gimbal.GimbalProto.EulerAngle> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.gimbal.GimbalProto.EulerAngle.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.gimbal.GimbalProto.EulerAngle>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.gimbal.EulerAngle)
    private static final io.mavsdk.gimbal.GimbalProto.EulerAngle DEFAULT_INSTANCE;
    static {
      EulerAngle defaultInstance = new EulerAngle();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        EulerAngle.class, defaultInstance);
    }

    public static io.mavsdk.gimbal.GimbalProto.EulerAngle getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EulerAngle> PARSER;

    public static com.google.protobuf.Parser<EulerAngle> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface AngularVelocityBodyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.gimbal.AngularVelocityBody)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Roll angular velocity
     * </pre>
     *
     * <code>float roll_rad_s = 1 [(.mavsdk.options.default_value) = "NaN"];</code>
     * @return The rollRadS.
     */
    float getRollRadS();

    /**
     * <pre>
     * Pitch angular velocity
     * </pre>
     *
     * <code>float pitch_rad_s = 2 [(.mavsdk.options.default_value) = "NaN"];</code>
     * @return The pitchRadS.
     */
    float getPitchRadS();

    /**
     * <pre>
     * Yaw angular velocity
     * </pre>
     *
     * <code>float yaw_rad_s = 3 [(.mavsdk.options.default_value) = "NaN"];</code>
     * @return The yawRadS.
     */
    float getYawRadS();
  }
  /**
   * <pre>
   * Gimbal angular rate type
   * </pre>
   *
   * Protobuf type {@code mavsdk.rpc.gimbal.AngularVelocityBody}
   */
  public  static final class AngularVelocityBody extends
      com.google.protobuf.GeneratedMessageLite<
          AngularVelocityBody, AngularVelocityBody.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.gimbal.AngularVelocityBody)
      AngularVelocityBodyOrBuilder {
    private AngularVelocityBody() {
    }
    public static final int ROLL_RAD_S_FIELD_NUMBER = 1;
    private float rollRadS_;
    /**
     * <pre>
     * Roll angular velocity
     * </pre>
     *
     * <code>float roll_rad_s = 1 [(.mavsdk.options.default_value) = "NaN"];</code>
     * @return The rollRadS.
     */
    @java.lang.Override
    public float getRollRadS() {
      return rollRadS_;
    }
    /**
     * <pre>
     * Roll angular velocity
     * </pre>
     *
     * <code>float roll_rad_s = 1 [(.mavsdk.options.default_value) = "NaN"];</code>
     * @param value The rollRadS to set.
     */
    private void setRollRadS(float value) {
      
      rollRadS_ = value;
    }
    /**
     * <pre>
     * Roll angular velocity
     * </pre>
     *
     * <code>float roll_rad_s = 1 [(.mavsdk.options.default_value) = "NaN"];</code>
     */
    private void clearRollRadS() {

      rollRadS_ = 0F;
    }

    public static final int PITCH_RAD_S_FIELD_NUMBER = 2;
    private float pitchRadS_;
    /**
     * <pre>
     * Pitch angular velocity
     * </pre>
     *
     * <code>float pitch_rad_s = 2 [(.mavsdk.options.default_value) = "NaN"];</code>
     * @return The pitchRadS.
     */
    @java.lang.Override
    public float getPitchRadS() {
      return pitchRadS_;
    }
    /**
     * <pre>
     * Pitch angular velocity
     * </pre>
     *
     * <code>float pitch_rad_s = 2 [(.mavsdk.options.default_value) = "NaN"];</code>
     * @param value The pitchRadS to set.
     */
    private void setPitchRadS(float value) {
      
      pitchRadS_ = value;
    }
    /**
     * <pre>
     * Pitch angular velocity
     * </pre>
     *
     * <code>float pitch_rad_s = 2 [(.mavsdk.options.default_value) = "NaN"];</code>
     */
    private void clearPitchRadS() {

      pitchRadS_ = 0F;
    }

    public static final int YAW_RAD_S_FIELD_NUMBER = 3;
    private float yawRadS_;
    /**
     * <pre>
     * Yaw angular velocity
     * </pre>
     *
     * <code>float yaw_rad_s = 3 [(.mavsdk.options.default_value) = "NaN"];</code>
     * @return The yawRadS.
     */
    @java.lang.Override
    public float getYawRadS() {
      return yawRadS_;
    }
    /**
     * <pre>
     * Yaw angular velocity
     * </pre>
     *
     * <code>float yaw_rad_s = 3 [(.mavsdk.options.default_value) = "NaN"];</code>
     * @param value The yawRadS to set.
     */
    private void setYawRadS(float value) {
      
      yawRadS_ = value;
    }
    /**
     * <pre>
     * Yaw angular velocity
     * </pre>
     *
     * <code>float yaw_rad_s = 3 [(.mavsdk.options.default_value) = "NaN"];</code>
     */
    private void clearYawRadS() {

      yawRadS_ = 0F;
    }

    public static io.mavsdk.gimbal.GimbalProto.AngularVelocityBody parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.AngularVelocityBody parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.AngularVelocityBody parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.AngularVelocityBody parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.AngularVelocityBody parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.AngularVelocityBody parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.AngularVelocityBody parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.AngularVelocityBody parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.gimbal.GimbalProto.AngularVelocityBody parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.gimbal.GimbalProto.AngularVelocityBody parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.AngularVelocityBody parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.AngularVelocityBody parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.gimbal.GimbalProto.AngularVelocityBody prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Gimbal angular rate type
     * </pre>
     *
     * Protobuf type {@code mavsdk.rpc.gimbal.AngularVelocityBody}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.gimbal.GimbalProto.AngularVelocityBody, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.gimbal.AngularVelocityBody)
        io.mavsdk.gimbal.GimbalProto.AngularVelocityBodyOrBuilder {
      // Construct using io.mavsdk.gimbal.GimbalProto.AngularVelocityBody.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Roll angular velocity
       * </pre>
       *
       * <code>float roll_rad_s = 1 [(.mavsdk.options.default_value) = "NaN"];</code>
       * @return The rollRadS.
       */
      @java.lang.Override
      public float getRollRadS() {
        return instance.getRollRadS();
      }
      /**
       * <pre>
       * Roll angular velocity
       * </pre>
       *
       * <code>float roll_rad_s = 1 [(.mavsdk.options.default_value) = "NaN"];</code>
       * @param value The rollRadS to set.
       * @return This builder for chaining.
       */
      public Builder setRollRadS(float value) {
        copyOnWrite();
        instance.setRollRadS(value);
        return this;
      }
      /**
       * <pre>
       * Roll angular velocity
       * </pre>
       *
       * <code>float roll_rad_s = 1 [(.mavsdk.options.default_value) = "NaN"];</code>
       * @return This builder for chaining.
       */
      public Builder clearRollRadS() {
        copyOnWrite();
        instance.clearRollRadS();
        return this;
      }

      /**
       * <pre>
       * Pitch angular velocity
       * </pre>
       *
       * <code>float pitch_rad_s = 2 [(.mavsdk.options.default_value) = "NaN"];</code>
       * @return The pitchRadS.
       */
      @java.lang.Override
      public float getPitchRadS() {
        return instance.getPitchRadS();
      }
      /**
       * <pre>
       * Pitch angular velocity
       * </pre>
       *
       * <code>float pitch_rad_s = 2 [(.mavsdk.options.default_value) = "NaN"];</code>
       * @param value The pitchRadS to set.
       * @return This builder for chaining.
       */
      public Builder setPitchRadS(float value) {
        copyOnWrite();
        instance.setPitchRadS(value);
        return this;
      }
      /**
       * <pre>
       * Pitch angular velocity
       * </pre>
       *
       * <code>float pitch_rad_s = 2 [(.mavsdk.options.default_value) = "NaN"];</code>
       * @return This builder for chaining.
       */
      public Builder clearPitchRadS() {
        copyOnWrite();
        instance.clearPitchRadS();
        return this;
      }

      /**
       * <pre>
       * Yaw angular velocity
       * </pre>
       *
       * <code>float yaw_rad_s = 3 [(.mavsdk.options.default_value) = "NaN"];</code>
       * @return The yawRadS.
       */
      @java.lang.Override
      public float getYawRadS() {
        return instance.getYawRadS();
      }
      /**
       * <pre>
       * Yaw angular velocity
       * </pre>
       *
       * <code>float yaw_rad_s = 3 [(.mavsdk.options.default_value) = "NaN"];</code>
       * @param value The yawRadS to set.
       * @return This builder for chaining.
       */
      public Builder setYawRadS(float value) {
        copyOnWrite();
        instance.setYawRadS(value);
        return this;
      }
      /**
       * <pre>
       * Yaw angular velocity
       * </pre>
       *
       * <code>float yaw_rad_s = 3 [(.mavsdk.options.default_value) = "NaN"];</code>
       * @return This builder for chaining.
       */
      public Builder clearYawRadS() {
        copyOnWrite();
        instance.clearYawRadS();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.gimbal.AngularVelocityBody)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.gimbal.GimbalProto.AngularVelocityBody();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "rollRadS_",
              "pitchRadS_",
              "yawRadS_",
            };
            java.lang.String info =
                "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0000\u0000\u0001\u0001\u0002\u0001" +
                "\u0003\u0001";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.gimbal.GimbalProto.AngularVelocityBody> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.gimbal.GimbalProto.AngularVelocityBody.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.gimbal.GimbalProto.AngularVelocityBody>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.gimbal.AngularVelocityBody)
    private static final io.mavsdk.gimbal.GimbalProto.AngularVelocityBody DEFAULT_INSTANCE;
    static {
      AngularVelocityBody defaultInstance = new AngularVelocityBody();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        AngularVelocityBody.class, defaultInstance);
    }

    public static io.mavsdk.gimbal.GimbalProto.AngularVelocityBody getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<AngularVelocityBody> PARSER;

    public static com.google.protobuf.Parser<AngularVelocityBody> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface AttitudeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.gimbal.Attitude)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Euler angle relative to forward
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.EulerAngle euler_angle_forward = 1;</code>
     * @return Whether the eulerAngleForward field is set.
     */
    boolean hasEulerAngleForward();
    /**
     * <pre>
     * Euler angle relative to forward
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.EulerAngle euler_angle_forward = 1;</code>
     * @return The eulerAngleForward.
     */
    io.mavsdk.gimbal.GimbalProto.EulerAngle getEulerAngleForward();

    /**
     * <pre>
     * Quaternion relative to forward
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.Quaternion quaternion_forward = 2;</code>
     * @return Whether the quaternionForward field is set.
     */
    boolean hasQuaternionForward();
    /**
     * <pre>
     * Quaternion relative to forward
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.Quaternion quaternion_forward = 2;</code>
     * @return The quaternionForward.
     */
    io.mavsdk.gimbal.GimbalProto.Quaternion getQuaternionForward();

    /**
     * <pre>
     * Euler angle relative to North
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.EulerAngle euler_angle_north = 3;</code>
     * @return Whether the eulerAngleNorth field is set.
     */
    boolean hasEulerAngleNorth();
    /**
     * <pre>
     * Euler angle relative to North
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.EulerAngle euler_angle_north = 3;</code>
     * @return The eulerAngleNorth.
     */
    io.mavsdk.gimbal.GimbalProto.EulerAngle getEulerAngleNorth();

    /**
     * <pre>
     * Quaternion relative to North
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.Quaternion quaternion_north = 4;</code>
     * @return Whether the quaternionNorth field is set.
     */
    boolean hasQuaternionNorth();
    /**
     * <pre>
     * Quaternion relative to North
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.Quaternion quaternion_north = 4;</code>
     * @return The quaternionNorth.
     */
    io.mavsdk.gimbal.GimbalProto.Quaternion getQuaternionNorth();

    /**
     * <pre>
     * The angular rate
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.AngularVelocityBody angular_velocity = 5;</code>
     * @return Whether the angularVelocity field is set.
     */
    boolean hasAngularVelocity();
    /**
     * <pre>
     * The angular rate
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.AngularVelocityBody angular_velocity = 5;</code>
     * @return The angularVelocity.
     */
    io.mavsdk.gimbal.GimbalProto.AngularVelocityBody getAngularVelocity();

    /**
     * <pre>
     * Timestamp in microseconds
     * </pre>
     *
     * <code>uint64 timestamp_us = 6;</code>
     * @return The timestampUs.
     */
    long getTimestampUs();
  }
  /**
   * <pre>
   * Gimbal attitude type
   * </pre>
   *
   * Protobuf type {@code mavsdk.rpc.gimbal.Attitude}
   */
  public  static final class Attitude extends
      com.google.protobuf.GeneratedMessageLite<
          Attitude, Attitude.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.gimbal.Attitude)
      AttitudeOrBuilder {
    private Attitude() {
    }
    private int bitField0_;
    public static final int EULER_ANGLE_FORWARD_FIELD_NUMBER = 1;
    private io.mavsdk.gimbal.GimbalProto.EulerAngle eulerAngleForward_;
    /**
     * <pre>
     * Euler angle relative to forward
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.EulerAngle euler_angle_forward = 1;</code>
     */
    @java.lang.Override
    public boolean hasEulerAngleForward() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Euler angle relative to forward
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.EulerAngle euler_angle_forward = 1;</code>
     */
    @java.lang.Override
    public io.mavsdk.gimbal.GimbalProto.EulerAngle getEulerAngleForward() {
      return eulerAngleForward_ == null ? io.mavsdk.gimbal.GimbalProto.EulerAngle.getDefaultInstance() : eulerAngleForward_;
    }
    /**
     * <pre>
     * Euler angle relative to forward
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.EulerAngle euler_angle_forward = 1;</code>
     */
    private void setEulerAngleForward(io.mavsdk.gimbal.GimbalProto.EulerAngle value) {
      value.getClass();
  eulerAngleForward_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <pre>
     * Euler angle relative to forward
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.EulerAngle euler_angle_forward = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeEulerAngleForward(io.mavsdk.gimbal.GimbalProto.EulerAngle value) {
      value.getClass();
  if (eulerAngleForward_ != null &&
          eulerAngleForward_ != io.mavsdk.gimbal.GimbalProto.EulerAngle.getDefaultInstance()) {
        eulerAngleForward_ =
          io.mavsdk.gimbal.GimbalProto.EulerAngle.newBuilder(eulerAngleForward_).mergeFrom(value).buildPartial();
      } else {
        eulerAngleForward_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <pre>
     * Euler angle relative to forward
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.EulerAngle euler_angle_forward = 1;</code>
     */
    private void clearEulerAngleForward() {  eulerAngleForward_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static final int QUATERNION_FORWARD_FIELD_NUMBER = 2;
    private io.mavsdk.gimbal.GimbalProto.Quaternion quaternionForward_;
    /**
     * <pre>
     * Quaternion relative to forward
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.Quaternion quaternion_forward = 2;</code>
     */
    @java.lang.Override
    public boolean hasQuaternionForward() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Quaternion relative to forward
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.Quaternion quaternion_forward = 2;</code>
     */
    @java.lang.Override
    public io.mavsdk.gimbal.GimbalProto.Quaternion getQuaternionForward() {
      return quaternionForward_ == null ? io.mavsdk.gimbal.GimbalProto.Quaternion.getDefaultInstance() : quaternionForward_;
    }
    /**
     * <pre>
     * Quaternion relative to forward
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.Quaternion quaternion_forward = 2;</code>
     */
    private void setQuaternionForward(io.mavsdk.gimbal.GimbalProto.Quaternion value) {
      value.getClass();
  quaternionForward_ = value;
      bitField0_ |= 0x00000002;
      }
    /**
     * <pre>
     * Quaternion relative to forward
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.Quaternion quaternion_forward = 2;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeQuaternionForward(io.mavsdk.gimbal.GimbalProto.Quaternion value) {
      value.getClass();
  if (quaternionForward_ != null &&
          quaternionForward_ != io.mavsdk.gimbal.GimbalProto.Quaternion.getDefaultInstance()) {
        quaternionForward_ =
          io.mavsdk.gimbal.GimbalProto.Quaternion.newBuilder(quaternionForward_).mergeFrom(value).buildPartial();
      } else {
        quaternionForward_ = value;
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <pre>
     * Quaternion relative to forward
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.Quaternion quaternion_forward = 2;</code>
     */
    private void clearQuaternionForward() {  quaternionForward_ = null;
      bitField0_ = (bitField0_ & ~0x00000002);
    }

    public static final int EULER_ANGLE_NORTH_FIELD_NUMBER = 3;
    private io.mavsdk.gimbal.GimbalProto.EulerAngle eulerAngleNorth_;
    /**
     * <pre>
     * Euler angle relative to North
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.EulerAngle euler_angle_north = 3;</code>
     */
    @java.lang.Override
    public boolean hasEulerAngleNorth() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Euler angle relative to North
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.EulerAngle euler_angle_north = 3;</code>
     */
    @java.lang.Override
    public io.mavsdk.gimbal.GimbalProto.EulerAngle getEulerAngleNorth() {
      return eulerAngleNorth_ == null ? io.mavsdk.gimbal.GimbalProto.EulerAngle.getDefaultInstance() : eulerAngleNorth_;
    }
    /**
     * <pre>
     * Euler angle relative to North
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.EulerAngle euler_angle_north = 3;</code>
     */
    private void setEulerAngleNorth(io.mavsdk.gimbal.GimbalProto.EulerAngle value) {
      value.getClass();
  eulerAngleNorth_ = value;
      bitField0_ |= 0x00000004;
      }
    /**
     * <pre>
     * Euler angle relative to North
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.EulerAngle euler_angle_north = 3;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeEulerAngleNorth(io.mavsdk.gimbal.GimbalProto.EulerAngle value) {
      value.getClass();
  if (eulerAngleNorth_ != null &&
          eulerAngleNorth_ != io.mavsdk.gimbal.GimbalProto.EulerAngle.getDefaultInstance()) {
        eulerAngleNorth_ =
          io.mavsdk.gimbal.GimbalProto.EulerAngle.newBuilder(eulerAngleNorth_).mergeFrom(value).buildPartial();
      } else {
        eulerAngleNorth_ = value;
      }
      bitField0_ |= 0x00000004;
    }
    /**
     * <pre>
     * Euler angle relative to North
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.EulerAngle euler_angle_north = 3;</code>
     */
    private void clearEulerAngleNorth() {  eulerAngleNorth_ = null;
      bitField0_ = (bitField0_ & ~0x00000004);
    }

    public static final int QUATERNION_NORTH_FIELD_NUMBER = 4;
    private io.mavsdk.gimbal.GimbalProto.Quaternion quaternionNorth_;
    /**
     * <pre>
     * Quaternion relative to North
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.Quaternion quaternion_north = 4;</code>
     */
    @java.lang.Override
    public boolean hasQuaternionNorth() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Quaternion relative to North
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.Quaternion quaternion_north = 4;</code>
     */
    @java.lang.Override
    public io.mavsdk.gimbal.GimbalProto.Quaternion getQuaternionNorth() {
      return quaternionNorth_ == null ? io.mavsdk.gimbal.GimbalProto.Quaternion.getDefaultInstance() : quaternionNorth_;
    }
    /**
     * <pre>
     * Quaternion relative to North
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.Quaternion quaternion_north = 4;</code>
     */
    private void setQuaternionNorth(io.mavsdk.gimbal.GimbalProto.Quaternion value) {
      value.getClass();
  quaternionNorth_ = value;
      bitField0_ |= 0x00000008;
      }
    /**
     * <pre>
     * Quaternion relative to North
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.Quaternion quaternion_north = 4;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeQuaternionNorth(io.mavsdk.gimbal.GimbalProto.Quaternion value) {
      value.getClass();
  if (quaternionNorth_ != null &&
          quaternionNorth_ != io.mavsdk.gimbal.GimbalProto.Quaternion.getDefaultInstance()) {
        quaternionNorth_ =
          io.mavsdk.gimbal.GimbalProto.Quaternion.newBuilder(quaternionNorth_).mergeFrom(value).buildPartial();
      } else {
        quaternionNorth_ = value;
      }
      bitField0_ |= 0x00000008;
    }
    /**
     * <pre>
     * Quaternion relative to North
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.Quaternion quaternion_north = 4;</code>
     */
    private void clearQuaternionNorth() {  quaternionNorth_ = null;
      bitField0_ = (bitField0_ & ~0x00000008);
    }

    public static final int ANGULAR_VELOCITY_FIELD_NUMBER = 5;
    private io.mavsdk.gimbal.GimbalProto.AngularVelocityBody angularVelocity_;
    /**
     * <pre>
     * The angular rate
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.AngularVelocityBody angular_velocity = 5;</code>
     */
    @java.lang.Override
    public boolean hasAngularVelocity() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * The angular rate
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.AngularVelocityBody angular_velocity = 5;</code>
     */
    @java.lang.Override
    public io.mavsdk.gimbal.GimbalProto.AngularVelocityBody getAngularVelocity() {
      return angularVelocity_ == null ? io.mavsdk.gimbal.GimbalProto.AngularVelocityBody.getDefaultInstance() : angularVelocity_;
    }
    /**
     * <pre>
     * The angular rate
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.AngularVelocityBody angular_velocity = 5;</code>
     */
    private void setAngularVelocity(io.mavsdk.gimbal.GimbalProto.AngularVelocityBody value) {
      value.getClass();
  angularVelocity_ = value;
      bitField0_ |= 0x00000010;
      }
    /**
     * <pre>
     * The angular rate
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.AngularVelocityBody angular_velocity = 5;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeAngularVelocity(io.mavsdk.gimbal.GimbalProto.AngularVelocityBody value) {
      value.getClass();
  if (angularVelocity_ != null &&
          angularVelocity_ != io.mavsdk.gimbal.GimbalProto.AngularVelocityBody.getDefaultInstance()) {
        angularVelocity_ =
          io.mavsdk.gimbal.GimbalProto.AngularVelocityBody.newBuilder(angularVelocity_).mergeFrom(value).buildPartial();
      } else {
        angularVelocity_ = value;
      }
      bitField0_ |= 0x00000010;
    }
    /**
     * <pre>
     * The angular rate
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.AngularVelocityBody angular_velocity = 5;</code>
     */
    private void clearAngularVelocity() {  angularVelocity_ = null;
      bitField0_ = (bitField0_ & ~0x00000010);
    }

    public static final int TIMESTAMP_US_FIELD_NUMBER = 6;
    private long timestampUs_;
    /**
     * <pre>
     * Timestamp in microseconds
     * </pre>
     *
     * <code>uint64 timestamp_us = 6;</code>
     * @return The timestampUs.
     */
    @java.lang.Override
    public long getTimestampUs() {
      return timestampUs_;
    }
    /**
     * <pre>
     * Timestamp in microseconds
     * </pre>
     *
     * <code>uint64 timestamp_us = 6;</code>
     * @param value The timestampUs to set.
     */
    private void setTimestampUs(long value) {
      
      timestampUs_ = value;
    }
    /**
     * <pre>
     * Timestamp in microseconds
     * </pre>
     *
     * <code>uint64 timestamp_us = 6;</code>
     */
    private void clearTimestampUs() {

      timestampUs_ = 0L;
    }

    public static io.mavsdk.gimbal.GimbalProto.Attitude parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.Attitude parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.Attitude parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.Attitude parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.Attitude parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.Attitude parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.Attitude parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.Attitude parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.gimbal.GimbalProto.Attitude parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.gimbal.GimbalProto.Attitude parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.Attitude parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.Attitude parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.gimbal.GimbalProto.Attitude prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Gimbal attitude type
     * </pre>
     *
     * Protobuf type {@code mavsdk.rpc.gimbal.Attitude}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.gimbal.GimbalProto.Attitude, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.gimbal.Attitude)
        io.mavsdk.gimbal.GimbalProto.AttitudeOrBuilder {
      // Construct using io.mavsdk.gimbal.GimbalProto.Attitude.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Euler angle relative to forward
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.EulerAngle euler_angle_forward = 1;</code>
       */
      @java.lang.Override
      public boolean hasEulerAngleForward() {
        return instance.hasEulerAngleForward();
      }
      /**
       * <pre>
       * Euler angle relative to forward
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.EulerAngle euler_angle_forward = 1;</code>
       */
      @java.lang.Override
      public io.mavsdk.gimbal.GimbalProto.EulerAngle getEulerAngleForward() {
        return instance.getEulerAngleForward();
      }
      /**
       * <pre>
       * Euler angle relative to forward
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.EulerAngle euler_angle_forward = 1;</code>
       */
      public Builder setEulerAngleForward(io.mavsdk.gimbal.GimbalProto.EulerAngle value) {
        copyOnWrite();
        instance.setEulerAngleForward(value);
        return this;
        }
      /**
       * <pre>
       * Euler angle relative to forward
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.EulerAngle euler_angle_forward = 1;</code>
       */
      public Builder setEulerAngleForward(
          io.mavsdk.gimbal.GimbalProto.EulerAngle.Builder builderForValue) {
        copyOnWrite();
        instance.setEulerAngleForward(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Euler angle relative to forward
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.EulerAngle euler_angle_forward = 1;</code>
       */
      public Builder mergeEulerAngleForward(io.mavsdk.gimbal.GimbalProto.EulerAngle value) {
        copyOnWrite();
        instance.mergeEulerAngleForward(value);
        return this;
      }
      /**
       * <pre>
       * Euler angle relative to forward
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.EulerAngle euler_angle_forward = 1;</code>
       */
      public Builder clearEulerAngleForward() {  copyOnWrite();
        instance.clearEulerAngleForward();
        return this;
      }

      /**
       * <pre>
       * Quaternion relative to forward
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.Quaternion quaternion_forward = 2;</code>
       */
      @java.lang.Override
      public boolean hasQuaternionForward() {
        return instance.hasQuaternionForward();
      }
      /**
       * <pre>
       * Quaternion relative to forward
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.Quaternion quaternion_forward = 2;</code>
       */
      @java.lang.Override
      public io.mavsdk.gimbal.GimbalProto.Quaternion getQuaternionForward() {
        return instance.getQuaternionForward();
      }
      /**
       * <pre>
       * Quaternion relative to forward
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.Quaternion quaternion_forward = 2;</code>
       */
      public Builder setQuaternionForward(io.mavsdk.gimbal.GimbalProto.Quaternion value) {
        copyOnWrite();
        instance.setQuaternionForward(value);
        return this;
        }
      /**
       * <pre>
       * Quaternion relative to forward
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.Quaternion quaternion_forward = 2;</code>
       */
      public Builder setQuaternionForward(
          io.mavsdk.gimbal.GimbalProto.Quaternion.Builder builderForValue) {
        copyOnWrite();
        instance.setQuaternionForward(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Quaternion relative to forward
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.Quaternion quaternion_forward = 2;</code>
       */
      public Builder mergeQuaternionForward(io.mavsdk.gimbal.GimbalProto.Quaternion value) {
        copyOnWrite();
        instance.mergeQuaternionForward(value);
        return this;
      }
      /**
       * <pre>
       * Quaternion relative to forward
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.Quaternion quaternion_forward = 2;</code>
       */
      public Builder clearQuaternionForward() {  copyOnWrite();
        instance.clearQuaternionForward();
        return this;
      }

      /**
       * <pre>
       * Euler angle relative to North
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.EulerAngle euler_angle_north = 3;</code>
       */
      @java.lang.Override
      public boolean hasEulerAngleNorth() {
        return instance.hasEulerAngleNorth();
      }
      /**
       * <pre>
       * Euler angle relative to North
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.EulerAngle euler_angle_north = 3;</code>
       */
      @java.lang.Override
      public io.mavsdk.gimbal.GimbalProto.EulerAngle getEulerAngleNorth() {
        return instance.getEulerAngleNorth();
      }
      /**
       * <pre>
       * Euler angle relative to North
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.EulerAngle euler_angle_north = 3;</code>
       */
      public Builder setEulerAngleNorth(io.mavsdk.gimbal.GimbalProto.EulerAngle value) {
        copyOnWrite();
        instance.setEulerAngleNorth(value);
        return this;
        }
      /**
       * <pre>
       * Euler angle relative to North
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.EulerAngle euler_angle_north = 3;</code>
       */
      public Builder setEulerAngleNorth(
          io.mavsdk.gimbal.GimbalProto.EulerAngle.Builder builderForValue) {
        copyOnWrite();
        instance.setEulerAngleNorth(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Euler angle relative to North
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.EulerAngle euler_angle_north = 3;</code>
       */
      public Builder mergeEulerAngleNorth(io.mavsdk.gimbal.GimbalProto.EulerAngle value) {
        copyOnWrite();
        instance.mergeEulerAngleNorth(value);
        return this;
      }
      /**
       * <pre>
       * Euler angle relative to North
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.EulerAngle euler_angle_north = 3;</code>
       */
      public Builder clearEulerAngleNorth() {  copyOnWrite();
        instance.clearEulerAngleNorth();
        return this;
      }

      /**
       * <pre>
       * Quaternion relative to North
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.Quaternion quaternion_north = 4;</code>
       */
      @java.lang.Override
      public boolean hasQuaternionNorth() {
        return instance.hasQuaternionNorth();
      }
      /**
       * <pre>
       * Quaternion relative to North
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.Quaternion quaternion_north = 4;</code>
       */
      @java.lang.Override
      public io.mavsdk.gimbal.GimbalProto.Quaternion getQuaternionNorth() {
        return instance.getQuaternionNorth();
      }
      /**
       * <pre>
       * Quaternion relative to North
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.Quaternion quaternion_north = 4;</code>
       */
      public Builder setQuaternionNorth(io.mavsdk.gimbal.GimbalProto.Quaternion value) {
        copyOnWrite();
        instance.setQuaternionNorth(value);
        return this;
        }
      /**
       * <pre>
       * Quaternion relative to North
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.Quaternion quaternion_north = 4;</code>
       */
      public Builder setQuaternionNorth(
          io.mavsdk.gimbal.GimbalProto.Quaternion.Builder builderForValue) {
        copyOnWrite();
        instance.setQuaternionNorth(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Quaternion relative to North
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.Quaternion quaternion_north = 4;</code>
       */
      public Builder mergeQuaternionNorth(io.mavsdk.gimbal.GimbalProto.Quaternion value) {
        copyOnWrite();
        instance.mergeQuaternionNorth(value);
        return this;
      }
      /**
       * <pre>
       * Quaternion relative to North
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.Quaternion quaternion_north = 4;</code>
       */
      public Builder clearQuaternionNorth() {  copyOnWrite();
        instance.clearQuaternionNorth();
        return this;
      }

      /**
       * <pre>
       * The angular rate
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.AngularVelocityBody angular_velocity = 5;</code>
       */
      @java.lang.Override
      public boolean hasAngularVelocity() {
        return instance.hasAngularVelocity();
      }
      /**
       * <pre>
       * The angular rate
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.AngularVelocityBody angular_velocity = 5;</code>
       */
      @java.lang.Override
      public io.mavsdk.gimbal.GimbalProto.AngularVelocityBody getAngularVelocity() {
        return instance.getAngularVelocity();
      }
      /**
       * <pre>
       * The angular rate
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.AngularVelocityBody angular_velocity = 5;</code>
       */
      public Builder setAngularVelocity(io.mavsdk.gimbal.GimbalProto.AngularVelocityBody value) {
        copyOnWrite();
        instance.setAngularVelocity(value);
        return this;
        }
      /**
       * <pre>
       * The angular rate
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.AngularVelocityBody angular_velocity = 5;</code>
       */
      public Builder setAngularVelocity(
          io.mavsdk.gimbal.GimbalProto.AngularVelocityBody.Builder builderForValue) {
        copyOnWrite();
        instance.setAngularVelocity(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The angular rate
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.AngularVelocityBody angular_velocity = 5;</code>
       */
      public Builder mergeAngularVelocity(io.mavsdk.gimbal.GimbalProto.AngularVelocityBody value) {
        copyOnWrite();
        instance.mergeAngularVelocity(value);
        return this;
      }
      /**
       * <pre>
       * The angular rate
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.AngularVelocityBody angular_velocity = 5;</code>
       */
      public Builder clearAngularVelocity() {  copyOnWrite();
        instance.clearAngularVelocity();
        return this;
      }

      /**
       * <pre>
       * Timestamp in microseconds
       * </pre>
       *
       * <code>uint64 timestamp_us = 6;</code>
       * @return The timestampUs.
       */
      @java.lang.Override
      public long getTimestampUs() {
        return instance.getTimestampUs();
      }
      /**
       * <pre>
       * Timestamp in microseconds
       * </pre>
       *
       * <code>uint64 timestamp_us = 6;</code>
       * @param value The timestampUs to set.
       * @return This builder for chaining.
       */
      public Builder setTimestampUs(long value) {
        copyOnWrite();
        instance.setTimestampUs(value);
        return this;
      }
      /**
       * <pre>
       * Timestamp in microseconds
       * </pre>
       *
       * <code>uint64 timestamp_us = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimestampUs() {
        copyOnWrite();
        instance.clearTimestampUs();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.gimbal.Attitude)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.gimbal.GimbalProto.Attitude();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "eulerAngleForward_",
              "quaternionForward_",
              "eulerAngleNorth_",
              "quaternionNorth_",
              "angularVelocity_",
              "timestampUs_",
            };
            java.lang.String info =
                "\u0000\u0006\u0000\u0001\u0001\u0006\u0006\u0000\u0000\u0000\u0001\u1009\u0000\u0002" +
                "\u1009\u0001\u0003\u1009\u0002\u0004\u1009\u0003\u0005\u1009\u0004\u0006\u0003";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.gimbal.GimbalProto.Attitude> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.gimbal.GimbalProto.Attitude.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.gimbal.GimbalProto.Attitude>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.gimbal.Attitude)
    private static final io.mavsdk.gimbal.GimbalProto.Attitude DEFAULT_INSTANCE;
    static {
      Attitude defaultInstance = new Attitude();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Attitude.class, defaultInstance);
    }

    public static io.mavsdk.gimbal.GimbalProto.Attitude getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Attitude> PARSER;

    public static com.google.protobuf.Parser<Attitude> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SubscribeAttitudeRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.gimbal.SubscribeAttitudeRequest)
      com.google.protobuf.MessageLiteOrBuilder {
  }
  /**
   * Protobuf type {@code mavsdk.rpc.gimbal.SubscribeAttitudeRequest}
   */
  public  static final class SubscribeAttitudeRequest extends
      com.google.protobuf.GeneratedMessageLite<
          SubscribeAttitudeRequest, SubscribeAttitudeRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.gimbal.SubscribeAttitudeRequest)
      SubscribeAttitudeRequestOrBuilder {
    private SubscribeAttitudeRequest() {
    }
    public static io.mavsdk.gimbal.GimbalProto.SubscribeAttitudeRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.SubscribeAttitudeRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SubscribeAttitudeRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.SubscribeAttitudeRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SubscribeAttitudeRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.SubscribeAttitudeRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SubscribeAttitudeRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.SubscribeAttitudeRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.gimbal.GimbalProto.SubscribeAttitudeRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.gimbal.GimbalProto.SubscribeAttitudeRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.SubscribeAttitudeRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.SubscribeAttitudeRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.gimbal.GimbalProto.SubscribeAttitudeRequest prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code mavsdk.rpc.gimbal.SubscribeAttitudeRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.gimbal.GimbalProto.SubscribeAttitudeRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.gimbal.SubscribeAttitudeRequest)
        io.mavsdk.gimbal.GimbalProto.SubscribeAttitudeRequestOrBuilder {
      // Construct using io.mavsdk.gimbal.GimbalProto.SubscribeAttitudeRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.gimbal.SubscribeAttitudeRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.gimbal.GimbalProto.SubscribeAttitudeRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = null;java.lang.String info =
                "\u0000\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.gimbal.GimbalProto.SubscribeAttitudeRequest> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.gimbal.GimbalProto.SubscribeAttitudeRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.gimbal.GimbalProto.SubscribeAttitudeRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.gimbal.SubscribeAttitudeRequest)
    private static final io.mavsdk.gimbal.GimbalProto.SubscribeAttitudeRequest DEFAULT_INSTANCE;
    static {
      SubscribeAttitudeRequest defaultInstance = new SubscribeAttitudeRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SubscribeAttitudeRequest.class, defaultInstance);
    }

    public static io.mavsdk.gimbal.GimbalProto.SubscribeAttitudeRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SubscribeAttitudeRequest> PARSER;

    public static com.google.protobuf.Parser<SubscribeAttitudeRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface AttitudeResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.gimbal.AttitudeResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The attitude
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.Attitude attitude = 1;</code>
     * @return Whether the attitude field is set.
     */
    boolean hasAttitude();
    /**
     * <pre>
     * The attitude
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.Attitude attitude = 1;</code>
     * @return The attitude.
     */
    io.mavsdk.gimbal.GimbalProto.Attitude getAttitude();
  }
  /**
   * Protobuf type {@code mavsdk.rpc.gimbal.AttitudeResponse}
   */
  public  static final class AttitudeResponse extends
      com.google.protobuf.GeneratedMessageLite<
          AttitudeResponse, AttitudeResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.gimbal.AttitudeResponse)
      AttitudeResponseOrBuilder {
    private AttitudeResponse() {
    }
    private int bitField0_;
    public static final int ATTITUDE_FIELD_NUMBER = 1;
    private io.mavsdk.gimbal.GimbalProto.Attitude attitude_;
    /**
     * <pre>
     * The attitude
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.Attitude attitude = 1;</code>
     */
    @java.lang.Override
    public boolean hasAttitude() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The attitude
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.Attitude attitude = 1;</code>
     */
    @java.lang.Override
    public io.mavsdk.gimbal.GimbalProto.Attitude getAttitude() {
      return attitude_ == null ? io.mavsdk.gimbal.GimbalProto.Attitude.getDefaultInstance() : attitude_;
    }
    /**
     * <pre>
     * The attitude
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.Attitude attitude = 1;</code>
     */
    private void setAttitude(io.mavsdk.gimbal.GimbalProto.Attitude value) {
      value.getClass();
  attitude_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <pre>
     * The attitude
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.Attitude attitude = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeAttitude(io.mavsdk.gimbal.GimbalProto.Attitude value) {
      value.getClass();
  if (attitude_ != null &&
          attitude_ != io.mavsdk.gimbal.GimbalProto.Attitude.getDefaultInstance()) {
        attitude_ =
          io.mavsdk.gimbal.GimbalProto.Attitude.newBuilder(attitude_).mergeFrom(value).buildPartial();
      } else {
        attitude_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <pre>
     * The attitude
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.Attitude attitude = 1;</code>
     */
    private void clearAttitude() {  attitude_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static io.mavsdk.gimbal.GimbalProto.AttitudeResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.AttitudeResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.AttitudeResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.AttitudeResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.AttitudeResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.AttitudeResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.AttitudeResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.AttitudeResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.gimbal.GimbalProto.AttitudeResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.gimbal.GimbalProto.AttitudeResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.AttitudeResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.AttitudeResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.gimbal.GimbalProto.AttitudeResponse prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code mavsdk.rpc.gimbal.AttitudeResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.gimbal.GimbalProto.AttitudeResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.gimbal.AttitudeResponse)
        io.mavsdk.gimbal.GimbalProto.AttitudeResponseOrBuilder {
      // Construct using io.mavsdk.gimbal.GimbalProto.AttitudeResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The attitude
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.Attitude attitude = 1;</code>
       */
      @java.lang.Override
      public boolean hasAttitude() {
        return instance.hasAttitude();
      }
      /**
       * <pre>
       * The attitude
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.Attitude attitude = 1;</code>
       */
      @java.lang.Override
      public io.mavsdk.gimbal.GimbalProto.Attitude getAttitude() {
        return instance.getAttitude();
      }
      /**
       * <pre>
       * The attitude
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.Attitude attitude = 1;</code>
       */
      public Builder setAttitude(io.mavsdk.gimbal.GimbalProto.Attitude value) {
        copyOnWrite();
        instance.setAttitude(value);
        return this;
        }
      /**
       * <pre>
       * The attitude
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.Attitude attitude = 1;</code>
       */
      public Builder setAttitude(
          io.mavsdk.gimbal.GimbalProto.Attitude.Builder builderForValue) {
        copyOnWrite();
        instance.setAttitude(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The attitude
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.Attitude attitude = 1;</code>
       */
      public Builder mergeAttitude(io.mavsdk.gimbal.GimbalProto.Attitude value) {
        copyOnWrite();
        instance.mergeAttitude(value);
        return this;
      }
      /**
       * <pre>
       * The attitude
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.Attitude attitude = 1;</code>
       */
      public Builder clearAttitude() {  copyOnWrite();
        instance.clearAttitude();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.gimbal.AttitudeResponse)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.gimbal.GimbalProto.AttitudeResponse();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "attitude_",
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u1009\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.gimbal.GimbalProto.AttitudeResponse> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.gimbal.GimbalProto.AttitudeResponse.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.gimbal.GimbalProto.AttitudeResponse>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.gimbal.AttitudeResponse)
    private static final io.mavsdk.gimbal.GimbalProto.AttitudeResponse DEFAULT_INSTANCE;
    static {
      AttitudeResponse defaultInstance = new AttitudeResponse();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        AttitudeResponse.class, defaultInstance);
    }

    public static io.mavsdk.gimbal.GimbalProto.AttitudeResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<AttitudeResponse> PARSER;

    public static com.google.protobuf.Parser<AttitudeResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ControlStatusOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.gimbal.ControlStatus)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Control mode (none, primary or secondary)
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.ControlMode control_mode = 1;</code>
     * @return The enum numeric value on the wire for controlMode.
     */
    int getControlModeValue();
    /**
     * <pre>
     * Control mode (none, primary or secondary)
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.ControlMode control_mode = 1;</code>
     * @return The controlMode.
     */
    io.mavsdk.gimbal.GimbalProto.ControlMode getControlMode();

    /**
     * <pre>
     * Sysid of the component that has primary control over the gimbal (0 if no one is in control)
     * </pre>
     *
     * <code>int32 sysid_primary_control = 2;</code>
     * @return The sysidPrimaryControl.
     */
    int getSysidPrimaryControl();

    /**
     * <pre>
     * Compid of the component that has primary control over the gimbal (0 if no one is in control)
     * </pre>
     *
     * <code>int32 compid_primary_control = 3;</code>
     * @return The compidPrimaryControl.
     */
    int getCompidPrimaryControl();

    /**
     * <pre>
     * Sysid of the component that has secondary control over the gimbal (0 if no one is in control)
     * </pre>
     *
     * <code>int32 sysid_secondary_control = 4;</code>
     * @return The sysidSecondaryControl.
     */
    int getSysidSecondaryControl();

    /**
     * <pre>
     * Compid of the component that has secondary control over the gimbal (0 if no one is in control)
     * </pre>
     *
     * <code>int32 compid_secondary_control = 5;</code>
     * @return The compidSecondaryControl.
     */
    int getCompidSecondaryControl();
  }
  /**
   * <pre>
   * Control status
   * </pre>
   *
   * Protobuf type {@code mavsdk.rpc.gimbal.ControlStatus}
   */
  public  static final class ControlStatus extends
      com.google.protobuf.GeneratedMessageLite<
          ControlStatus, ControlStatus.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.gimbal.ControlStatus)
      ControlStatusOrBuilder {
    private ControlStatus() {
    }
    public static final int CONTROL_MODE_FIELD_NUMBER = 1;
    private int controlMode_;
    /**
     * <pre>
     * Control mode (none, primary or secondary)
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.ControlMode control_mode = 1;</code>
     * @return The enum numeric value on the wire for controlMode.
     */
    @java.lang.Override
    public int getControlModeValue() {
      return controlMode_;
    }
    /**
     * <pre>
     * Control mode (none, primary or secondary)
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.ControlMode control_mode = 1;</code>
     * @return The controlMode.
     */
    @java.lang.Override
    public io.mavsdk.gimbal.GimbalProto.ControlMode getControlMode() {
      io.mavsdk.gimbal.GimbalProto.ControlMode result = io.mavsdk.gimbal.GimbalProto.ControlMode.forNumber(controlMode_);
      return result == null ? io.mavsdk.gimbal.GimbalProto.ControlMode.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Control mode (none, primary or secondary)
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.ControlMode control_mode = 1;</code>
     * @param value The enum numeric value on the wire for controlMode to set.
     */
    private void setControlModeValue(int value) {
        controlMode_ = value;
    }
    /**
     * <pre>
     * Control mode (none, primary or secondary)
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.ControlMode control_mode = 1;</code>
     * @param value The controlMode to set.
     */
    private void setControlMode(io.mavsdk.gimbal.GimbalProto.ControlMode value) {
      controlMode_ = value.getNumber();

    }
    /**
     * <pre>
     * Control mode (none, primary or secondary)
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.ControlMode control_mode = 1;</code>
     */
    private void clearControlMode() {

      controlMode_ = 0;
    }

    public static final int SYSID_PRIMARY_CONTROL_FIELD_NUMBER = 2;
    private int sysidPrimaryControl_;
    /**
     * <pre>
     * Sysid of the component that has primary control over the gimbal (0 if no one is in control)
     * </pre>
     *
     * <code>int32 sysid_primary_control = 2;</code>
     * @return The sysidPrimaryControl.
     */
    @java.lang.Override
    public int getSysidPrimaryControl() {
      return sysidPrimaryControl_;
    }
    /**
     * <pre>
     * Sysid of the component that has primary control over the gimbal (0 if no one is in control)
     * </pre>
     *
     * <code>int32 sysid_primary_control = 2;</code>
     * @param value The sysidPrimaryControl to set.
     */
    private void setSysidPrimaryControl(int value) {
      
      sysidPrimaryControl_ = value;
    }
    /**
     * <pre>
     * Sysid of the component that has primary control over the gimbal (0 if no one is in control)
     * </pre>
     *
     * <code>int32 sysid_primary_control = 2;</code>
     */
    private void clearSysidPrimaryControl() {

      sysidPrimaryControl_ = 0;
    }

    public static final int COMPID_PRIMARY_CONTROL_FIELD_NUMBER = 3;
    private int compidPrimaryControl_;
    /**
     * <pre>
     * Compid of the component that has primary control over the gimbal (0 if no one is in control)
     * </pre>
     *
     * <code>int32 compid_primary_control = 3;</code>
     * @return The compidPrimaryControl.
     */
    @java.lang.Override
    public int getCompidPrimaryControl() {
      return compidPrimaryControl_;
    }
    /**
     * <pre>
     * Compid of the component that has primary control over the gimbal (0 if no one is in control)
     * </pre>
     *
     * <code>int32 compid_primary_control = 3;</code>
     * @param value The compidPrimaryControl to set.
     */
    private void setCompidPrimaryControl(int value) {
      
      compidPrimaryControl_ = value;
    }
    /**
     * <pre>
     * Compid of the component that has primary control over the gimbal (0 if no one is in control)
     * </pre>
     *
     * <code>int32 compid_primary_control = 3;</code>
     */
    private void clearCompidPrimaryControl() {

      compidPrimaryControl_ = 0;
    }

    public static final int SYSID_SECONDARY_CONTROL_FIELD_NUMBER = 4;
    private int sysidSecondaryControl_;
    /**
     * <pre>
     * Sysid of the component that has secondary control over the gimbal (0 if no one is in control)
     * </pre>
     *
     * <code>int32 sysid_secondary_control = 4;</code>
     * @return The sysidSecondaryControl.
     */
    @java.lang.Override
    public int getSysidSecondaryControl() {
      return sysidSecondaryControl_;
    }
    /**
     * <pre>
     * Sysid of the component that has secondary control over the gimbal (0 if no one is in control)
     * </pre>
     *
     * <code>int32 sysid_secondary_control = 4;</code>
     * @param value The sysidSecondaryControl to set.
     */
    private void setSysidSecondaryControl(int value) {
      
      sysidSecondaryControl_ = value;
    }
    /**
     * <pre>
     * Sysid of the component that has secondary control over the gimbal (0 if no one is in control)
     * </pre>
     *
     * <code>int32 sysid_secondary_control = 4;</code>
     */
    private void clearSysidSecondaryControl() {

      sysidSecondaryControl_ = 0;
    }

    public static final int COMPID_SECONDARY_CONTROL_FIELD_NUMBER = 5;
    private int compidSecondaryControl_;
    /**
     * <pre>
     * Compid of the component that has secondary control over the gimbal (0 if no one is in control)
     * </pre>
     *
     * <code>int32 compid_secondary_control = 5;</code>
     * @return The compidSecondaryControl.
     */
    @java.lang.Override
    public int getCompidSecondaryControl() {
      return compidSecondaryControl_;
    }
    /**
     * <pre>
     * Compid of the component that has secondary control over the gimbal (0 if no one is in control)
     * </pre>
     *
     * <code>int32 compid_secondary_control = 5;</code>
     * @param value The compidSecondaryControl to set.
     */
    private void setCompidSecondaryControl(int value) {
      
      compidSecondaryControl_ = value;
    }
    /**
     * <pre>
     * Compid of the component that has secondary control over the gimbal (0 if no one is in control)
     * </pre>
     *
     * <code>int32 compid_secondary_control = 5;</code>
     */
    private void clearCompidSecondaryControl() {

      compidSecondaryControl_ = 0;
    }

    public static io.mavsdk.gimbal.GimbalProto.ControlStatus parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.ControlStatus parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.ControlStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.ControlStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.ControlStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.ControlStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.ControlStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.ControlStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.gimbal.GimbalProto.ControlStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.gimbal.GimbalProto.ControlStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.ControlStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.ControlStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.gimbal.GimbalProto.ControlStatus prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Control status
     * </pre>
     *
     * Protobuf type {@code mavsdk.rpc.gimbal.ControlStatus}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.gimbal.GimbalProto.ControlStatus, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.gimbal.ControlStatus)
        io.mavsdk.gimbal.GimbalProto.ControlStatusOrBuilder {
      // Construct using io.mavsdk.gimbal.GimbalProto.ControlStatus.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Control mode (none, primary or secondary)
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.ControlMode control_mode = 1;</code>
       * @return The enum numeric value on the wire for controlMode.
       */
      @java.lang.Override
      public int getControlModeValue() {
        return instance.getControlModeValue();
      }
      /**
       * <pre>
       * Control mode (none, primary or secondary)
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.ControlMode control_mode = 1;</code>
       * @param value The controlMode to set.
       * @return This builder for chaining.
       */
      public Builder setControlModeValue(int value) {
        copyOnWrite();
        instance.setControlModeValue(value);
        return this;
      }
      /**
       * <pre>
       * Control mode (none, primary or secondary)
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.ControlMode control_mode = 1;</code>
       * @return The controlMode.
       */
      @java.lang.Override
      public io.mavsdk.gimbal.GimbalProto.ControlMode getControlMode() {
        return instance.getControlMode();
      }
      /**
       * <pre>
       * Control mode (none, primary or secondary)
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.ControlMode control_mode = 1;</code>
       * @param value The enum numeric value on the wire for controlMode to set.
       * @return This builder for chaining.
       */
      public Builder setControlMode(io.mavsdk.gimbal.GimbalProto.ControlMode value) {
        copyOnWrite();
        instance.setControlMode(value);
        return this;
      }
      /**
       * <pre>
       * Control mode (none, primary or secondary)
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.ControlMode control_mode = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearControlMode() {
        copyOnWrite();
        instance.clearControlMode();
        return this;
      }

      /**
       * <pre>
       * Sysid of the component that has primary control over the gimbal (0 if no one is in control)
       * </pre>
       *
       * <code>int32 sysid_primary_control = 2;</code>
       * @return The sysidPrimaryControl.
       */
      @java.lang.Override
      public int getSysidPrimaryControl() {
        return instance.getSysidPrimaryControl();
      }
      /**
       * <pre>
       * Sysid of the component that has primary control over the gimbal (0 if no one is in control)
       * </pre>
       *
       * <code>int32 sysid_primary_control = 2;</code>
       * @param value The sysidPrimaryControl to set.
       * @return This builder for chaining.
       */
      public Builder setSysidPrimaryControl(int value) {
        copyOnWrite();
        instance.setSysidPrimaryControl(value);
        return this;
      }
      /**
       * <pre>
       * Sysid of the component that has primary control over the gimbal (0 if no one is in control)
       * </pre>
       *
       * <code>int32 sysid_primary_control = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSysidPrimaryControl() {
        copyOnWrite();
        instance.clearSysidPrimaryControl();
        return this;
      }

      /**
       * <pre>
       * Compid of the component that has primary control over the gimbal (0 if no one is in control)
       * </pre>
       *
       * <code>int32 compid_primary_control = 3;</code>
       * @return The compidPrimaryControl.
       */
      @java.lang.Override
      public int getCompidPrimaryControl() {
        return instance.getCompidPrimaryControl();
      }
      /**
       * <pre>
       * Compid of the component that has primary control over the gimbal (0 if no one is in control)
       * </pre>
       *
       * <code>int32 compid_primary_control = 3;</code>
       * @param value The compidPrimaryControl to set.
       * @return This builder for chaining.
       */
      public Builder setCompidPrimaryControl(int value) {
        copyOnWrite();
        instance.setCompidPrimaryControl(value);
        return this;
      }
      /**
       * <pre>
       * Compid of the component that has primary control over the gimbal (0 if no one is in control)
       * </pre>
       *
       * <code>int32 compid_primary_control = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearCompidPrimaryControl() {
        copyOnWrite();
        instance.clearCompidPrimaryControl();
        return this;
      }

      /**
       * <pre>
       * Sysid of the component that has secondary control over the gimbal (0 if no one is in control)
       * </pre>
       *
       * <code>int32 sysid_secondary_control = 4;</code>
       * @return The sysidSecondaryControl.
       */
      @java.lang.Override
      public int getSysidSecondaryControl() {
        return instance.getSysidSecondaryControl();
      }
      /**
       * <pre>
       * Sysid of the component that has secondary control over the gimbal (0 if no one is in control)
       * </pre>
       *
       * <code>int32 sysid_secondary_control = 4;</code>
       * @param value The sysidSecondaryControl to set.
       * @return This builder for chaining.
       */
      public Builder setSysidSecondaryControl(int value) {
        copyOnWrite();
        instance.setSysidSecondaryControl(value);
        return this;
      }
      /**
       * <pre>
       * Sysid of the component that has secondary control over the gimbal (0 if no one is in control)
       * </pre>
       *
       * <code>int32 sysid_secondary_control = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSysidSecondaryControl() {
        copyOnWrite();
        instance.clearSysidSecondaryControl();
        return this;
      }

      /**
       * <pre>
       * Compid of the component that has secondary control over the gimbal (0 if no one is in control)
       * </pre>
       *
       * <code>int32 compid_secondary_control = 5;</code>
       * @return The compidSecondaryControl.
       */
      @java.lang.Override
      public int getCompidSecondaryControl() {
        return instance.getCompidSecondaryControl();
      }
      /**
       * <pre>
       * Compid of the component that has secondary control over the gimbal (0 if no one is in control)
       * </pre>
       *
       * <code>int32 compid_secondary_control = 5;</code>
       * @param value The compidSecondaryControl to set.
       * @return This builder for chaining.
       */
      public Builder setCompidSecondaryControl(int value) {
        copyOnWrite();
        instance.setCompidSecondaryControl(value);
        return this;
      }
      /**
       * <pre>
       * Compid of the component that has secondary control over the gimbal (0 if no one is in control)
       * </pre>
       *
       * <code>int32 compid_secondary_control = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearCompidSecondaryControl() {
        copyOnWrite();
        instance.clearCompidSecondaryControl();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.gimbal.ControlStatus)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.gimbal.GimbalProto.ControlStatus();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "controlMode_",
              "sysidPrimaryControl_",
              "compidPrimaryControl_",
              "sysidSecondaryControl_",
              "compidSecondaryControl_",
            };
            java.lang.String info =
                "\u0000\u0005\u0000\u0000\u0001\u0005\u0005\u0000\u0000\u0000\u0001\f\u0002\u0004" +
                "\u0003\u0004\u0004\u0004\u0005\u0004";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.gimbal.GimbalProto.ControlStatus> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.gimbal.GimbalProto.ControlStatus.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.gimbal.GimbalProto.ControlStatus>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.gimbal.ControlStatus)
    private static final io.mavsdk.gimbal.GimbalProto.ControlStatus DEFAULT_INSTANCE;
    static {
      ControlStatus defaultInstance = new ControlStatus();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ControlStatus.class, defaultInstance);
    }

    public static io.mavsdk.gimbal.GimbalProto.ControlStatus getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ControlStatus> PARSER;

    public static com.google.protobuf.Parser<ControlStatus> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface GimbalResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.gimbal.GimbalResult)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Result enum value
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.GimbalResult.Result result = 1;</code>
     * @return The enum numeric value on the wire for result.
     */
    int getResultValue();
    /**
     * <pre>
     * Result enum value
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.GimbalResult.Result result = 1;</code>
     * @return The result.
     */
    io.mavsdk.gimbal.GimbalProto.GimbalResult.Result getResult();

    /**
     * <pre>
     * Human-readable English string describing the result
     * </pre>
     *
     * <code>string result_str = 2;</code>
     * @return The resultStr.
     */
    java.lang.String getResultStr();
    /**
     * <pre>
     * Human-readable English string describing the result
     * </pre>
     *
     * <code>string result_str = 2;</code>
     * @return The bytes for resultStr.
     */
    com.google.protobuf.ByteString
        getResultStrBytes();
  }
  /**
   * <pre>
   * Result type.
   * </pre>
   *
   * Protobuf type {@code mavsdk.rpc.gimbal.GimbalResult}
   */
  public  static final class GimbalResult extends
      com.google.protobuf.GeneratedMessageLite<
          GimbalResult, GimbalResult.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.gimbal.GimbalResult)
      GimbalResultOrBuilder {
    private GimbalResult() {
      resultStr_ = "";
    }
    /**
     * <pre>
     * Possible results returned for gimbal commands.
     * </pre>
     *
     * Protobuf enum {@code mavsdk.rpc.gimbal.GimbalResult.Result}
     */
    public enum Result
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <pre>
       * Unknown result
       * </pre>
       *
       * <code>RESULT_UNKNOWN = 0;</code>
       */
      RESULT_UNKNOWN(0),
      /**
       * <pre>
       * Command was accepted
       * </pre>
       *
       * <code>RESULT_SUCCESS = 1;</code>
       */
      RESULT_SUCCESS(1),
      /**
       * <pre>
       * Error occurred sending the command
       * </pre>
       *
       * <code>RESULT_ERROR = 2;</code>
       */
      RESULT_ERROR(2),
      /**
       * <pre>
       * Command timed out
       * </pre>
       *
       * <code>RESULT_TIMEOUT = 3;</code>
       */
      RESULT_TIMEOUT(3),
      /**
       * <pre>
       * Functionality not supported
       * </pre>
       *
       * <code>RESULT_UNSUPPORTED = 4;</code>
       */
      RESULT_UNSUPPORTED(4),
      /**
       * <pre>
       * No system connected
       * </pre>
       *
       * <code>RESULT_NO_SYSTEM = 5;</code>
       */
      RESULT_NO_SYSTEM(5),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Unknown result
       * </pre>
       *
       * <code>RESULT_UNKNOWN = 0;</code>
       */
      public static final int RESULT_UNKNOWN_VALUE = 0;
      /**
       * <pre>
       * Command was accepted
       * </pre>
       *
       * <code>RESULT_SUCCESS = 1;</code>
       */
      public static final int RESULT_SUCCESS_VALUE = 1;
      /**
       * <pre>
       * Error occurred sending the command
       * </pre>
       *
       * <code>RESULT_ERROR = 2;</code>
       */
      public static final int RESULT_ERROR_VALUE = 2;
      /**
       * <pre>
       * Command timed out
       * </pre>
       *
       * <code>RESULT_TIMEOUT = 3;</code>
       */
      public static final int RESULT_TIMEOUT_VALUE = 3;
      /**
       * <pre>
       * Functionality not supported
       * </pre>
       *
       * <code>RESULT_UNSUPPORTED = 4;</code>
       */
      public static final int RESULT_UNSUPPORTED_VALUE = 4;
      /**
       * <pre>
       * No system connected
       * </pre>
       *
       * <code>RESULT_NO_SYSTEM = 5;</code>
       */
      public static final int RESULT_NO_SYSTEM_VALUE = 5;


      @java.lang.Override
      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Result valueOf(int value) {
        return forNumber(value);
      }

      public static Result forNumber(int value) {
        switch (value) {
          case 0: return RESULT_UNKNOWN;
          case 1: return RESULT_SUCCESS;
          case 2: return RESULT_ERROR;
          case 3: return RESULT_TIMEOUT;
          case 4: return RESULT_UNSUPPORTED;
          case 5: return RESULT_NO_SYSTEM;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Result>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Result> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Result>() {
              @java.lang.Override
              public Result findValueByNumber(int number) {
                return Result.forNumber(number);
              }
            };

      public static com.google.protobuf.Internal.EnumVerifier 
          internalGetVerifier() {
        return ResultVerifier.INSTANCE;
      }

      private static final class ResultVerifier implements 
           com.google.protobuf.Internal.EnumVerifier { 
              static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new ResultVerifier();
              @java.lang.Override
              public boolean isInRange(int number) {
                return Result.forNumber(number) != null;
              }
            };

      private final int value;

      private Result(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:mavsdk.rpc.gimbal.GimbalResult.Result)
    }

    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <pre>
     * Result enum value
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.GimbalResult.Result result = 1;</code>
     * @return The enum numeric value on the wire for result.
     */
    @java.lang.Override
    public int getResultValue() {
      return result_;
    }
    /**
     * <pre>
     * Result enum value
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.GimbalResult.Result result = 1;</code>
     * @return The result.
     */
    @java.lang.Override
    public io.mavsdk.gimbal.GimbalProto.GimbalResult.Result getResult() {
      io.mavsdk.gimbal.GimbalProto.GimbalResult.Result result = io.mavsdk.gimbal.GimbalProto.GimbalResult.Result.forNumber(result_);
      return result == null ? io.mavsdk.gimbal.GimbalProto.GimbalResult.Result.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Result enum value
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.GimbalResult.Result result = 1;</code>
     * @param value The enum numeric value on the wire for result to set.
     */
    private void setResultValue(int value) {
        result_ = value;
    }
    /**
     * <pre>
     * Result enum value
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.GimbalResult.Result result = 1;</code>
     * @param value The result to set.
     */
    private void setResult(io.mavsdk.gimbal.GimbalProto.GimbalResult.Result value) {
      result_ = value.getNumber();

    }
    /**
     * <pre>
     * Result enum value
     * </pre>
     *
     * <code>.mavsdk.rpc.gimbal.GimbalResult.Result result = 1;</code>
     */
    private void clearResult() {

      result_ = 0;
    }

    public static final int RESULT_STR_FIELD_NUMBER = 2;
    private java.lang.String resultStr_;
    /**
     * <pre>
     * Human-readable English string describing the result
     * </pre>
     *
     * <code>string result_str = 2;</code>
     * @return The resultStr.
     */
    @java.lang.Override
    public java.lang.String getResultStr() {
      return resultStr_;
    }
    /**
     * <pre>
     * Human-readable English string describing the result
     * </pre>
     *
     * <code>string result_str = 2;</code>
     * @return The bytes for resultStr.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getResultStrBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(resultStr_);
    }
    /**
     * <pre>
     * Human-readable English string describing the result
     * </pre>
     *
     * <code>string result_str = 2;</code>
     * @param value The resultStr to set.
     */
    private void setResultStr(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      resultStr_ = value;
    }
    /**
     * <pre>
     * Human-readable English string describing the result
     * </pre>
     *
     * <code>string result_str = 2;</code>
     */
    private void clearResultStr() {

      resultStr_ = getDefaultInstance().getResultStr();
    }
    /**
     * <pre>
     * Human-readable English string describing the result
     * </pre>
     *
     * <code>string result_str = 2;</code>
     * @param value The bytes for resultStr to set.
     */
    private void setResultStrBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      resultStr_ = value.toStringUtf8();

    }

    public static io.mavsdk.gimbal.GimbalProto.GimbalResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.GimbalResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.GimbalResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.GimbalResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.GimbalResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.gimbal.GimbalProto.GimbalResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.GimbalResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.GimbalResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.gimbal.GimbalProto.GimbalResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.gimbal.GimbalProto.GimbalResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.gimbal.GimbalProto.GimbalResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.gimbal.GimbalProto.GimbalResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.gimbal.GimbalProto.GimbalResult prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Result type.
     * </pre>
     *
     * Protobuf type {@code mavsdk.rpc.gimbal.GimbalResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.gimbal.GimbalProto.GimbalResult, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.gimbal.GimbalResult)
        io.mavsdk.gimbal.GimbalProto.GimbalResultOrBuilder {
      // Construct using io.mavsdk.gimbal.GimbalProto.GimbalResult.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Result enum value
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.GimbalResult.Result result = 1;</code>
       * @return The enum numeric value on the wire for result.
       */
      @java.lang.Override
      public int getResultValue() {
        return instance.getResultValue();
      }
      /**
       * <pre>
       * Result enum value
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.GimbalResult.Result result = 1;</code>
       * @param value The result to set.
       * @return This builder for chaining.
       */
      public Builder setResultValue(int value) {
        copyOnWrite();
        instance.setResultValue(value);
        return this;
      }
      /**
       * <pre>
       * Result enum value
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.GimbalResult.Result result = 1;</code>
       * @return The result.
       */
      @java.lang.Override
      public io.mavsdk.gimbal.GimbalProto.GimbalResult.Result getResult() {
        return instance.getResult();
      }
      /**
       * <pre>
       * Result enum value
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.GimbalResult.Result result = 1;</code>
       * @param value The enum numeric value on the wire for result to set.
       * @return This builder for chaining.
       */
      public Builder setResult(io.mavsdk.gimbal.GimbalProto.GimbalResult.Result value) {
        copyOnWrite();
        instance.setResult(value);
        return this;
      }
      /**
       * <pre>
       * Result enum value
       * </pre>
       *
       * <code>.mavsdk.rpc.gimbal.GimbalResult.Result result = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearResult() {
        copyOnWrite();
        instance.clearResult();
        return this;
      }

      /**
       * <pre>
       * Human-readable English string describing the result
       * </pre>
       *
       * <code>string result_str = 2;</code>
       * @return The resultStr.
       */
      @java.lang.Override
      public java.lang.String getResultStr() {
        return instance.getResultStr();
      }
      /**
       * <pre>
       * Human-readable English string describing the result
       * </pre>
       *
       * <code>string result_str = 2;</code>
       * @return The bytes for resultStr.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getResultStrBytes() {
        return instance.getResultStrBytes();
      }
      /**
       * <pre>
       * Human-readable English string describing the result
       * </pre>
       *
       * <code>string result_str = 2;</code>
       * @param value The resultStr to set.
       * @return This builder for chaining.
       */
      public Builder setResultStr(
          java.lang.String value) {
        copyOnWrite();
        instance.setResultStr(value);
        return this;
      }
      /**
       * <pre>
       * Human-readable English string describing the result
       * </pre>
       *
       * <code>string result_str = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearResultStr() {
        copyOnWrite();
        instance.clearResultStr();
        return this;
      }
      /**
       * <pre>
       * Human-readable English string describing the result
       * </pre>
       *
       * <code>string result_str = 2;</code>
       * @param value The bytes for resultStr to set.
       * @return This builder for chaining.
       */
      public Builder setResultStrBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setResultStrBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.gimbal.GimbalResult)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.gimbal.GimbalProto.GimbalResult();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "result_",
              "resultStr_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\f\u0002\u0208" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.gimbal.GimbalProto.GimbalResult> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.gimbal.GimbalProto.GimbalResult.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.gimbal.GimbalProto.GimbalResult>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.gimbal.GimbalResult)
    private static final io.mavsdk.gimbal.GimbalProto.GimbalResult DEFAULT_INSTANCE;
    static {
      GimbalResult defaultInstance = new GimbalResult();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        GimbalResult.class, defaultInstance);
    }

    public static io.mavsdk.gimbal.GimbalProto.GimbalResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<GimbalResult> PARSER;

    public static com.google.protobuf.Parser<GimbalResult> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}

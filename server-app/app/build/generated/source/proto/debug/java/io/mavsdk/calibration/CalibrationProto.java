// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mavsdk/calibration/calibration.proto

// Protobuf Java Version: 3.25.3
package io.mavsdk.calibration;

public final class CalibrationProto {
  private CalibrationProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface SubscribeCalibrateGyroRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.calibration.SubscribeCalibrateGyroRequest)
      com.google.protobuf.MessageLiteOrBuilder {
  }
  /**
   * Protobuf type {@code mavsdk.rpc.calibration.SubscribeCalibrateGyroRequest}
   */
  public  static final class SubscribeCalibrateGyroRequest extends
      com.google.protobuf.GeneratedMessageLite<
          SubscribeCalibrateGyroRequest, SubscribeCalibrateGyroRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.calibration.SubscribeCalibrateGyroRequest)
      SubscribeCalibrateGyroRequestOrBuilder {
    private SubscribeCalibrateGyroRequest() {
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateGyroRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateGyroRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateGyroRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateGyroRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateGyroRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateGyroRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateGyroRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateGyroRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateGyroRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateGyroRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateGyroRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateGyroRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateGyroRequest prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code mavsdk.rpc.calibration.SubscribeCalibrateGyroRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateGyroRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.calibration.SubscribeCalibrateGyroRequest)
        io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateGyroRequestOrBuilder {
      // Construct using io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateGyroRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.calibration.SubscribeCalibrateGyroRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateGyroRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = null;java.lang.String info =
                "\u0000\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateGyroRequest> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateGyroRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateGyroRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.calibration.SubscribeCalibrateGyroRequest)
    private static final io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateGyroRequest DEFAULT_INSTANCE;
    static {
      SubscribeCalibrateGyroRequest defaultInstance = new SubscribeCalibrateGyroRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SubscribeCalibrateGyroRequest.class, defaultInstance);
    }

    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateGyroRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SubscribeCalibrateGyroRequest> PARSER;

    public static com.google.protobuf.Parser<SubscribeCalibrateGyroRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface CalibrateGyroResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.calibration.CalibrateGyroResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
     * @return Whether the calibrationResult field is set.
     */
    boolean hasCalibrationResult();
    /**
     * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
     * @return The calibrationResult.
     */
    io.mavsdk.calibration.CalibrationProto.CalibrationResult getCalibrationResult();

    /**
     * <pre>
     * Progress data
     * </pre>
     *
     * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
     * @return Whether the progressData field is set.
     */
    boolean hasProgressData();
    /**
     * <pre>
     * Progress data
     * </pre>
     *
     * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
     * @return The progressData.
     */
    io.mavsdk.calibration.CalibrationProto.ProgressData getProgressData();
  }
  /**
   * Protobuf type {@code mavsdk.rpc.calibration.CalibrateGyroResponse}
   */
  public  static final class CalibrateGyroResponse extends
      com.google.protobuf.GeneratedMessageLite<
          CalibrateGyroResponse, CalibrateGyroResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.calibration.CalibrateGyroResponse)
      CalibrateGyroResponseOrBuilder {
    private CalibrateGyroResponse() {
    }
    private int bitField0_;
    public static final int CALIBRATION_RESULT_FIELD_NUMBER = 1;
    private io.mavsdk.calibration.CalibrationProto.CalibrationResult calibrationResult_;
    /**
     * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
     */
    @java.lang.Override
    public boolean hasCalibrationResult() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
     */
    @java.lang.Override
    public io.mavsdk.calibration.CalibrationProto.CalibrationResult getCalibrationResult() {
      return calibrationResult_ == null ? io.mavsdk.calibration.CalibrationProto.CalibrationResult.getDefaultInstance() : calibrationResult_;
    }
    /**
     * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
     */
    private void setCalibrationResult(io.mavsdk.calibration.CalibrationProto.CalibrationResult value) {
      value.getClass();
  calibrationResult_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeCalibrationResult(io.mavsdk.calibration.CalibrationProto.CalibrationResult value) {
      value.getClass();
  if (calibrationResult_ != null &&
          calibrationResult_ != io.mavsdk.calibration.CalibrationProto.CalibrationResult.getDefaultInstance()) {
        calibrationResult_ =
          io.mavsdk.calibration.CalibrationProto.CalibrationResult.newBuilder(calibrationResult_).mergeFrom(value).buildPartial();
      } else {
        calibrationResult_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
     */
    private void clearCalibrationResult() {  calibrationResult_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static final int PROGRESS_DATA_FIELD_NUMBER = 2;
    private io.mavsdk.calibration.CalibrationProto.ProgressData progressData_;
    /**
     * <pre>
     * Progress data
     * </pre>
     *
     * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
     */
    @java.lang.Override
    public boolean hasProgressData() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Progress data
     * </pre>
     *
     * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
     */
    @java.lang.Override
    public io.mavsdk.calibration.CalibrationProto.ProgressData getProgressData() {
      return progressData_ == null ? io.mavsdk.calibration.CalibrationProto.ProgressData.getDefaultInstance() : progressData_;
    }
    /**
     * <pre>
     * Progress data
     * </pre>
     *
     * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
     */
    private void setProgressData(io.mavsdk.calibration.CalibrationProto.ProgressData value) {
      value.getClass();
  progressData_ = value;
      bitField0_ |= 0x00000002;
      }
    /**
     * <pre>
     * Progress data
     * </pre>
     *
     * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeProgressData(io.mavsdk.calibration.CalibrationProto.ProgressData value) {
      value.getClass();
  if (progressData_ != null &&
          progressData_ != io.mavsdk.calibration.CalibrationProto.ProgressData.getDefaultInstance()) {
        progressData_ =
          io.mavsdk.calibration.CalibrationProto.ProgressData.newBuilder(progressData_).mergeFrom(value).buildPartial();
      } else {
        progressData_ = value;
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <pre>
     * Progress data
     * </pre>
     *
     * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
     */
    private void clearProgressData() {  progressData_ = null;
      bitField0_ = (bitField0_ & ~0x00000002);
    }

    public static io.mavsdk.calibration.CalibrationProto.CalibrateGyroResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateGyroResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateGyroResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateGyroResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateGyroResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateGyroResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateGyroResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateGyroResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.calibration.CalibrationProto.CalibrateGyroResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.calibration.CalibrationProto.CalibrateGyroResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateGyroResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateGyroResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.calibration.CalibrationProto.CalibrateGyroResponse prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code mavsdk.rpc.calibration.CalibrateGyroResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.calibration.CalibrationProto.CalibrateGyroResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.calibration.CalibrateGyroResponse)
        io.mavsdk.calibration.CalibrationProto.CalibrateGyroResponseOrBuilder {
      // Construct using io.mavsdk.calibration.CalibrationProto.CalibrateGyroResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
       */
      @java.lang.Override
      public boolean hasCalibrationResult() {
        return instance.hasCalibrationResult();
      }
      /**
       * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
       */
      @java.lang.Override
      public io.mavsdk.calibration.CalibrationProto.CalibrationResult getCalibrationResult() {
        return instance.getCalibrationResult();
      }
      /**
       * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
       */
      public Builder setCalibrationResult(io.mavsdk.calibration.CalibrationProto.CalibrationResult value) {
        copyOnWrite();
        instance.setCalibrationResult(value);
        return this;
        }
      /**
       * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
       */
      public Builder setCalibrationResult(
          io.mavsdk.calibration.CalibrationProto.CalibrationResult.Builder builderForValue) {
        copyOnWrite();
        instance.setCalibrationResult(builderForValue.build());
        return this;
      }
      /**
       * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
       */
      public Builder mergeCalibrationResult(io.mavsdk.calibration.CalibrationProto.CalibrationResult value) {
        copyOnWrite();
        instance.mergeCalibrationResult(value);
        return this;
      }
      /**
       * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
       */
      public Builder clearCalibrationResult() {  copyOnWrite();
        instance.clearCalibrationResult();
        return this;
      }

      /**
       * <pre>
       * Progress data
       * </pre>
       *
       * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
       */
      @java.lang.Override
      public boolean hasProgressData() {
        return instance.hasProgressData();
      }
      /**
       * <pre>
       * Progress data
       * </pre>
       *
       * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
       */
      @java.lang.Override
      public io.mavsdk.calibration.CalibrationProto.ProgressData getProgressData() {
        return instance.getProgressData();
      }
      /**
       * <pre>
       * Progress data
       * </pre>
       *
       * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
       */
      public Builder setProgressData(io.mavsdk.calibration.CalibrationProto.ProgressData value) {
        copyOnWrite();
        instance.setProgressData(value);
        return this;
        }
      /**
       * <pre>
       * Progress data
       * </pre>
       *
       * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
       */
      public Builder setProgressData(
          io.mavsdk.calibration.CalibrationProto.ProgressData.Builder builderForValue) {
        copyOnWrite();
        instance.setProgressData(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Progress data
       * </pre>
       *
       * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
       */
      public Builder mergeProgressData(io.mavsdk.calibration.CalibrationProto.ProgressData value) {
        copyOnWrite();
        instance.mergeProgressData(value);
        return this;
      }
      /**
       * <pre>
       * Progress data
       * </pre>
       *
       * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
       */
      public Builder clearProgressData() {  copyOnWrite();
        instance.clearProgressData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.calibration.CalibrateGyroResponse)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.calibration.CalibrationProto.CalibrateGyroResponse();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "calibrationResult_",
              "progressData_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0001\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u1009\u0000\u0002" +
                "\u1009\u0001";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.calibration.CalibrationProto.CalibrateGyroResponse> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.calibration.CalibrationProto.CalibrateGyroResponse.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.calibration.CalibrationProto.CalibrateGyroResponse>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.calibration.CalibrateGyroResponse)
    private static final io.mavsdk.calibration.CalibrationProto.CalibrateGyroResponse DEFAULT_INSTANCE;
    static {
      CalibrateGyroResponse defaultInstance = new CalibrateGyroResponse();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        CalibrateGyroResponse.class, defaultInstance);
    }

    public static io.mavsdk.calibration.CalibrationProto.CalibrateGyroResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<CalibrateGyroResponse> PARSER;

    public static com.google.protobuf.Parser<CalibrateGyroResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SubscribeCalibrateAccelerometerRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.calibration.SubscribeCalibrateAccelerometerRequest)
      com.google.protobuf.MessageLiteOrBuilder {
  }
  /**
   * Protobuf type {@code mavsdk.rpc.calibration.SubscribeCalibrateAccelerometerRequest}
   */
  public  static final class SubscribeCalibrateAccelerometerRequest extends
      com.google.protobuf.GeneratedMessageLite<
          SubscribeCalibrateAccelerometerRequest, SubscribeCalibrateAccelerometerRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.calibration.SubscribeCalibrateAccelerometerRequest)
      SubscribeCalibrateAccelerometerRequestOrBuilder {
    private SubscribeCalibrateAccelerometerRequest() {
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateAccelerometerRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateAccelerometerRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateAccelerometerRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateAccelerometerRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateAccelerometerRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateAccelerometerRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateAccelerometerRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateAccelerometerRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateAccelerometerRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateAccelerometerRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateAccelerometerRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateAccelerometerRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateAccelerometerRequest prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code mavsdk.rpc.calibration.SubscribeCalibrateAccelerometerRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateAccelerometerRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.calibration.SubscribeCalibrateAccelerometerRequest)
        io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateAccelerometerRequestOrBuilder {
      // Construct using io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateAccelerometerRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.calibration.SubscribeCalibrateAccelerometerRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateAccelerometerRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = null;java.lang.String info =
                "\u0000\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateAccelerometerRequest> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateAccelerometerRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateAccelerometerRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.calibration.SubscribeCalibrateAccelerometerRequest)
    private static final io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateAccelerometerRequest DEFAULT_INSTANCE;
    static {
      SubscribeCalibrateAccelerometerRequest defaultInstance = new SubscribeCalibrateAccelerometerRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SubscribeCalibrateAccelerometerRequest.class, defaultInstance);
    }

    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateAccelerometerRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SubscribeCalibrateAccelerometerRequest> PARSER;

    public static com.google.protobuf.Parser<SubscribeCalibrateAccelerometerRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface CalibrateAccelerometerResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.calibration.CalibrateAccelerometerResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
     * @return Whether the calibrationResult field is set.
     */
    boolean hasCalibrationResult();
    /**
     * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
     * @return The calibrationResult.
     */
    io.mavsdk.calibration.CalibrationProto.CalibrationResult getCalibrationResult();

    /**
     * <pre>
     * Progress data
     * </pre>
     *
     * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
     * @return Whether the progressData field is set.
     */
    boolean hasProgressData();
    /**
     * <pre>
     * Progress data
     * </pre>
     *
     * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
     * @return The progressData.
     */
    io.mavsdk.calibration.CalibrationProto.ProgressData getProgressData();
  }
  /**
   * Protobuf type {@code mavsdk.rpc.calibration.CalibrateAccelerometerResponse}
   */
  public  static final class CalibrateAccelerometerResponse extends
      com.google.protobuf.GeneratedMessageLite<
          CalibrateAccelerometerResponse, CalibrateAccelerometerResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.calibration.CalibrateAccelerometerResponse)
      CalibrateAccelerometerResponseOrBuilder {
    private CalibrateAccelerometerResponse() {
    }
    private int bitField0_;
    public static final int CALIBRATION_RESULT_FIELD_NUMBER = 1;
    private io.mavsdk.calibration.CalibrationProto.CalibrationResult calibrationResult_;
    /**
     * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
     */
    @java.lang.Override
    public boolean hasCalibrationResult() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
     */
    @java.lang.Override
    public io.mavsdk.calibration.CalibrationProto.CalibrationResult getCalibrationResult() {
      return calibrationResult_ == null ? io.mavsdk.calibration.CalibrationProto.CalibrationResult.getDefaultInstance() : calibrationResult_;
    }
    /**
     * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
     */
    private void setCalibrationResult(io.mavsdk.calibration.CalibrationProto.CalibrationResult value) {
      value.getClass();
  calibrationResult_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeCalibrationResult(io.mavsdk.calibration.CalibrationProto.CalibrationResult value) {
      value.getClass();
  if (calibrationResult_ != null &&
          calibrationResult_ != io.mavsdk.calibration.CalibrationProto.CalibrationResult.getDefaultInstance()) {
        calibrationResult_ =
          io.mavsdk.calibration.CalibrationProto.CalibrationResult.newBuilder(calibrationResult_).mergeFrom(value).buildPartial();
      } else {
        calibrationResult_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
     */
    private void clearCalibrationResult() {  calibrationResult_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static final int PROGRESS_DATA_FIELD_NUMBER = 2;
    private io.mavsdk.calibration.CalibrationProto.ProgressData progressData_;
    /**
     * <pre>
     * Progress data
     * </pre>
     *
     * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
     */
    @java.lang.Override
    public boolean hasProgressData() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Progress data
     * </pre>
     *
     * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
     */
    @java.lang.Override
    public io.mavsdk.calibration.CalibrationProto.ProgressData getProgressData() {
      return progressData_ == null ? io.mavsdk.calibration.CalibrationProto.ProgressData.getDefaultInstance() : progressData_;
    }
    /**
     * <pre>
     * Progress data
     * </pre>
     *
     * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
     */
    private void setProgressData(io.mavsdk.calibration.CalibrationProto.ProgressData value) {
      value.getClass();
  progressData_ = value;
      bitField0_ |= 0x00000002;
      }
    /**
     * <pre>
     * Progress data
     * </pre>
     *
     * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeProgressData(io.mavsdk.calibration.CalibrationProto.ProgressData value) {
      value.getClass();
  if (progressData_ != null &&
          progressData_ != io.mavsdk.calibration.CalibrationProto.ProgressData.getDefaultInstance()) {
        progressData_ =
          io.mavsdk.calibration.CalibrationProto.ProgressData.newBuilder(progressData_).mergeFrom(value).buildPartial();
      } else {
        progressData_ = value;
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <pre>
     * Progress data
     * </pre>
     *
     * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
     */
    private void clearProgressData() {  progressData_ = null;
      bitField0_ = (bitField0_ & ~0x00000002);
    }

    public static io.mavsdk.calibration.CalibrationProto.CalibrateAccelerometerResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateAccelerometerResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateAccelerometerResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateAccelerometerResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateAccelerometerResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateAccelerometerResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateAccelerometerResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateAccelerometerResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.calibration.CalibrationProto.CalibrateAccelerometerResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.calibration.CalibrationProto.CalibrateAccelerometerResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateAccelerometerResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateAccelerometerResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.calibration.CalibrationProto.CalibrateAccelerometerResponse prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code mavsdk.rpc.calibration.CalibrateAccelerometerResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.calibration.CalibrationProto.CalibrateAccelerometerResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.calibration.CalibrateAccelerometerResponse)
        io.mavsdk.calibration.CalibrationProto.CalibrateAccelerometerResponseOrBuilder {
      // Construct using io.mavsdk.calibration.CalibrationProto.CalibrateAccelerometerResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
       */
      @java.lang.Override
      public boolean hasCalibrationResult() {
        return instance.hasCalibrationResult();
      }
      /**
       * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
       */
      @java.lang.Override
      public io.mavsdk.calibration.CalibrationProto.CalibrationResult getCalibrationResult() {
        return instance.getCalibrationResult();
      }
      /**
       * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
       */
      public Builder setCalibrationResult(io.mavsdk.calibration.CalibrationProto.CalibrationResult value) {
        copyOnWrite();
        instance.setCalibrationResult(value);
        return this;
        }
      /**
       * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
       */
      public Builder setCalibrationResult(
          io.mavsdk.calibration.CalibrationProto.CalibrationResult.Builder builderForValue) {
        copyOnWrite();
        instance.setCalibrationResult(builderForValue.build());
        return this;
      }
      /**
       * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
       */
      public Builder mergeCalibrationResult(io.mavsdk.calibration.CalibrationProto.CalibrationResult value) {
        copyOnWrite();
        instance.mergeCalibrationResult(value);
        return this;
      }
      /**
       * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
       */
      public Builder clearCalibrationResult() {  copyOnWrite();
        instance.clearCalibrationResult();
        return this;
      }

      /**
       * <pre>
       * Progress data
       * </pre>
       *
       * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
       */
      @java.lang.Override
      public boolean hasProgressData() {
        return instance.hasProgressData();
      }
      /**
       * <pre>
       * Progress data
       * </pre>
       *
       * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
       */
      @java.lang.Override
      public io.mavsdk.calibration.CalibrationProto.ProgressData getProgressData() {
        return instance.getProgressData();
      }
      /**
       * <pre>
       * Progress data
       * </pre>
       *
       * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
       */
      public Builder setProgressData(io.mavsdk.calibration.CalibrationProto.ProgressData value) {
        copyOnWrite();
        instance.setProgressData(value);
        return this;
        }
      /**
       * <pre>
       * Progress data
       * </pre>
       *
       * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
       */
      public Builder setProgressData(
          io.mavsdk.calibration.CalibrationProto.ProgressData.Builder builderForValue) {
        copyOnWrite();
        instance.setProgressData(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Progress data
       * </pre>
       *
       * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
       */
      public Builder mergeProgressData(io.mavsdk.calibration.CalibrationProto.ProgressData value) {
        copyOnWrite();
        instance.mergeProgressData(value);
        return this;
      }
      /**
       * <pre>
       * Progress data
       * </pre>
       *
       * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
       */
      public Builder clearProgressData() {  copyOnWrite();
        instance.clearProgressData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.calibration.CalibrateAccelerometerResponse)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.calibration.CalibrationProto.CalibrateAccelerometerResponse();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "calibrationResult_",
              "progressData_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0001\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u1009\u0000\u0002" +
                "\u1009\u0001";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.calibration.CalibrationProto.CalibrateAccelerometerResponse> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.calibration.CalibrationProto.CalibrateAccelerometerResponse.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.calibration.CalibrationProto.CalibrateAccelerometerResponse>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.calibration.CalibrateAccelerometerResponse)
    private static final io.mavsdk.calibration.CalibrationProto.CalibrateAccelerometerResponse DEFAULT_INSTANCE;
    static {
      CalibrateAccelerometerResponse defaultInstance = new CalibrateAccelerometerResponse();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        CalibrateAccelerometerResponse.class, defaultInstance);
    }

    public static io.mavsdk.calibration.CalibrationProto.CalibrateAccelerometerResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<CalibrateAccelerometerResponse> PARSER;

    public static com.google.protobuf.Parser<CalibrateAccelerometerResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SubscribeCalibrateMagnetometerRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.calibration.SubscribeCalibrateMagnetometerRequest)
      com.google.protobuf.MessageLiteOrBuilder {
  }
  /**
   * Protobuf type {@code mavsdk.rpc.calibration.SubscribeCalibrateMagnetometerRequest}
   */
  public  static final class SubscribeCalibrateMagnetometerRequest extends
      com.google.protobuf.GeneratedMessageLite<
          SubscribeCalibrateMagnetometerRequest, SubscribeCalibrateMagnetometerRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.calibration.SubscribeCalibrateMagnetometerRequest)
      SubscribeCalibrateMagnetometerRequestOrBuilder {
    private SubscribeCalibrateMagnetometerRequest() {
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateMagnetometerRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateMagnetometerRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateMagnetometerRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateMagnetometerRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateMagnetometerRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateMagnetometerRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateMagnetometerRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateMagnetometerRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateMagnetometerRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateMagnetometerRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateMagnetometerRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateMagnetometerRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateMagnetometerRequest prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code mavsdk.rpc.calibration.SubscribeCalibrateMagnetometerRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateMagnetometerRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.calibration.SubscribeCalibrateMagnetometerRequest)
        io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateMagnetometerRequestOrBuilder {
      // Construct using io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateMagnetometerRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.calibration.SubscribeCalibrateMagnetometerRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateMagnetometerRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = null;java.lang.String info =
                "\u0000\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateMagnetometerRequest> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateMagnetometerRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateMagnetometerRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.calibration.SubscribeCalibrateMagnetometerRequest)
    private static final io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateMagnetometerRequest DEFAULT_INSTANCE;
    static {
      SubscribeCalibrateMagnetometerRequest defaultInstance = new SubscribeCalibrateMagnetometerRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SubscribeCalibrateMagnetometerRequest.class, defaultInstance);
    }

    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateMagnetometerRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SubscribeCalibrateMagnetometerRequest> PARSER;

    public static com.google.protobuf.Parser<SubscribeCalibrateMagnetometerRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface CalibrateMagnetometerResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.calibration.CalibrateMagnetometerResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
     * @return Whether the calibrationResult field is set.
     */
    boolean hasCalibrationResult();
    /**
     * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
     * @return The calibrationResult.
     */
    io.mavsdk.calibration.CalibrationProto.CalibrationResult getCalibrationResult();

    /**
     * <pre>
     * Progress data
     * </pre>
     *
     * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
     * @return Whether the progressData field is set.
     */
    boolean hasProgressData();
    /**
     * <pre>
     * Progress data
     * </pre>
     *
     * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
     * @return The progressData.
     */
    io.mavsdk.calibration.CalibrationProto.ProgressData getProgressData();
  }
  /**
   * Protobuf type {@code mavsdk.rpc.calibration.CalibrateMagnetometerResponse}
   */
  public  static final class CalibrateMagnetometerResponse extends
      com.google.protobuf.GeneratedMessageLite<
          CalibrateMagnetometerResponse, CalibrateMagnetometerResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.calibration.CalibrateMagnetometerResponse)
      CalibrateMagnetometerResponseOrBuilder {
    private CalibrateMagnetometerResponse() {
    }
    private int bitField0_;
    public static final int CALIBRATION_RESULT_FIELD_NUMBER = 1;
    private io.mavsdk.calibration.CalibrationProto.CalibrationResult calibrationResult_;
    /**
     * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
     */
    @java.lang.Override
    public boolean hasCalibrationResult() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
     */
    @java.lang.Override
    public io.mavsdk.calibration.CalibrationProto.CalibrationResult getCalibrationResult() {
      return calibrationResult_ == null ? io.mavsdk.calibration.CalibrationProto.CalibrationResult.getDefaultInstance() : calibrationResult_;
    }
    /**
     * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
     */
    private void setCalibrationResult(io.mavsdk.calibration.CalibrationProto.CalibrationResult value) {
      value.getClass();
  calibrationResult_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeCalibrationResult(io.mavsdk.calibration.CalibrationProto.CalibrationResult value) {
      value.getClass();
  if (calibrationResult_ != null &&
          calibrationResult_ != io.mavsdk.calibration.CalibrationProto.CalibrationResult.getDefaultInstance()) {
        calibrationResult_ =
          io.mavsdk.calibration.CalibrationProto.CalibrationResult.newBuilder(calibrationResult_).mergeFrom(value).buildPartial();
      } else {
        calibrationResult_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
     */
    private void clearCalibrationResult() {  calibrationResult_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static final int PROGRESS_DATA_FIELD_NUMBER = 2;
    private io.mavsdk.calibration.CalibrationProto.ProgressData progressData_;
    /**
     * <pre>
     * Progress data
     * </pre>
     *
     * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
     */
    @java.lang.Override
    public boolean hasProgressData() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Progress data
     * </pre>
     *
     * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
     */
    @java.lang.Override
    public io.mavsdk.calibration.CalibrationProto.ProgressData getProgressData() {
      return progressData_ == null ? io.mavsdk.calibration.CalibrationProto.ProgressData.getDefaultInstance() : progressData_;
    }
    /**
     * <pre>
     * Progress data
     * </pre>
     *
     * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
     */
    private void setProgressData(io.mavsdk.calibration.CalibrationProto.ProgressData value) {
      value.getClass();
  progressData_ = value;
      bitField0_ |= 0x00000002;
      }
    /**
     * <pre>
     * Progress data
     * </pre>
     *
     * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeProgressData(io.mavsdk.calibration.CalibrationProto.ProgressData value) {
      value.getClass();
  if (progressData_ != null &&
          progressData_ != io.mavsdk.calibration.CalibrationProto.ProgressData.getDefaultInstance()) {
        progressData_ =
          io.mavsdk.calibration.CalibrationProto.ProgressData.newBuilder(progressData_).mergeFrom(value).buildPartial();
      } else {
        progressData_ = value;
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <pre>
     * Progress data
     * </pre>
     *
     * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
     */
    private void clearProgressData() {  progressData_ = null;
      bitField0_ = (bitField0_ & ~0x00000002);
    }

    public static io.mavsdk.calibration.CalibrationProto.CalibrateMagnetometerResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateMagnetometerResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateMagnetometerResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateMagnetometerResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateMagnetometerResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateMagnetometerResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateMagnetometerResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateMagnetometerResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.calibration.CalibrationProto.CalibrateMagnetometerResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.calibration.CalibrationProto.CalibrateMagnetometerResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateMagnetometerResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateMagnetometerResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.calibration.CalibrationProto.CalibrateMagnetometerResponse prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code mavsdk.rpc.calibration.CalibrateMagnetometerResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.calibration.CalibrationProto.CalibrateMagnetometerResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.calibration.CalibrateMagnetometerResponse)
        io.mavsdk.calibration.CalibrationProto.CalibrateMagnetometerResponseOrBuilder {
      // Construct using io.mavsdk.calibration.CalibrationProto.CalibrateMagnetometerResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
       */
      @java.lang.Override
      public boolean hasCalibrationResult() {
        return instance.hasCalibrationResult();
      }
      /**
       * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
       */
      @java.lang.Override
      public io.mavsdk.calibration.CalibrationProto.CalibrationResult getCalibrationResult() {
        return instance.getCalibrationResult();
      }
      /**
       * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
       */
      public Builder setCalibrationResult(io.mavsdk.calibration.CalibrationProto.CalibrationResult value) {
        copyOnWrite();
        instance.setCalibrationResult(value);
        return this;
        }
      /**
       * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
       */
      public Builder setCalibrationResult(
          io.mavsdk.calibration.CalibrationProto.CalibrationResult.Builder builderForValue) {
        copyOnWrite();
        instance.setCalibrationResult(builderForValue.build());
        return this;
      }
      /**
       * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
       */
      public Builder mergeCalibrationResult(io.mavsdk.calibration.CalibrationProto.CalibrationResult value) {
        copyOnWrite();
        instance.mergeCalibrationResult(value);
        return this;
      }
      /**
       * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
       */
      public Builder clearCalibrationResult() {  copyOnWrite();
        instance.clearCalibrationResult();
        return this;
      }

      /**
       * <pre>
       * Progress data
       * </pre>
       *
       * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
       */
      @java.lang.Override
      public boolean hasProgressData() {
        return instance.hasProgressData();
      }
      /**
       * <pre>
       * Progress data
       * </pre>
       *
       * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
       */
      @java.lang.Override
      public io.mavsdk.calibration.CalibrationProto.ProgressData getProgressData() {
        return instance.getProgressData();
      }
      /**
       * <pre>
       * Progress data
       * </pre>
       *
       * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
       */
      public Builder setProgressData(io.mavsdk.calibration.CalibrationProto.ProgressData value) {
        copyOnWrite();
        instance.setProgressData(value);
        return this;
        }
      /**
       * <pre>
       * Progress data
       * </pre>
       *
       * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
       */
      public Builder setProgressData(
          io.mavsdk.calibration.CalibrationProto.ProgressData.Builder builderForValue) {
        copyOnWrite();
        instance.setProgressData(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Progress data
       * </pre>
       *
       * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
       */
      public Builder mergeProgressData(io.mavsdk.calibration.CalibrationProto.ProgressData value) {
        copyOnWrite();
        instance.mergeProgressData(value);
        return this;
      }
      /**
       * <pre>
       * Progress data
       * </pre>
       *
       * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
       */
      public Builder clearProgressData() {  copyOnWrite();
        instance.clearProgressData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.calibration.CalibrateMagnetometerResponse)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.calibration.CalibrationProto.CalibrateMagnetometerResponse();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "calibrationResult_",
              "progressData_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0001\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u1009\u0000\u0002" +
                "\u1009\u0001";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.calibration.CalibrationProto.CalibrateMagnetometerResponse> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.calibration.CalibrationProto.CalibrateMagnetometerResponse.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.calibration.CalibrationProto.CalibrateMagnetometerResponse>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.calibration.CalibrateMagnetometerResponse)
    private static final io.mavsdk.calibration.CalibrationProto.CalibrateMagnetometerResponse DEFAULT_INSTANCE;
    static {
      CalibrateMagnetometerResponse defaultInstance = new CalibrateMagnetometerResponse();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        CalibrateMagnetometerResponse.class, defaultInstance);
    }

    public static io.mavsdk.calibration.CalibrationProto.CalibrateMagnetometerResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<CalibrateMagnetometerResponse> PARSER;

    public static com.google.protobuf.Parser<CalibrateMagnetometerResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SubscribeCalibrateLevelHorizonRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.calibration.SubscribeCalibrateLevelHorizonRequest)
      com.google.protobuf.MessageLiteOrBuilder {
  }
  /**
   * Protobuf type {@code mavsdk.rpc.calibration.SubscribeCalibrateLevelHorizonRequest}
   */
  public  static final class SubscribeCalibrateLevelHorizonRequest extends
      com.google.protobuf.GeneratedMessageLite<
          SubscribeCalibrateLevelHorizonRequest, SubscribeCalibrateLevelHorizonRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.calibration.SubscribeCalibrateLevelHorizonRequest)
      SubscribeCalibrateLevelHorizonRequestOrBuilder {
    private SubscribeCalibrateLevelHorizonRequest() {
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateLevelHorizonRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateLevelHorizonRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateLevelHorizonRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateLevelHorizonRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateLevelHorizonRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateLevelHorizonRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateLevelHorizonRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateLevelHorizonRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateLevelHorizonRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateLevelHorizonRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateLevelHorizonRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateLevelHorizonRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateLevelHorizonRequest prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code mavsdk.rpc.calibration.SubscribeCalibrateLevelHorizonRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateLevelHorizonRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.calibration.SubscribeCalibrateLevelHorizonRequest)
        io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateLevelHorizonRequestOrBuilder {
      // Construct using io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateLevelHorizonRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.calibration.SubscribeCalibrateLevelHorizonRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateLevelHorizonRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = null;java.lang.String info =
                "\u0000\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateLevelHorizonRequest> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateLevelHorizonRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateLevelHorizonRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.calibration.SubscribeCalibrateLevelHorizonRequest)
    private static final io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateLevelHorizonRequest DEFAULT_INSTANCE;
    static {
      SubscribeCalibrateLevelHorizonRequest defaultInstance = new SubscribeCalibrateLevelHorizonRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SubscribeCalibrateLevelHorizonRequest.class, defaultInstance);
    }

    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateLevelHorizonRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SubscribeCalibrateLevelHorizonRequest> PARSER;

    public static com.google.protobuf.Parser<SubscribeCalibrateLevelHorizonRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface CalibrateLevelHorizonResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.calibration.CalibrateLevelHorizonResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
     * @return Whether the calibrationResult field is set.
     */
    boolean hasCalibrationResult();
    /**
     * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
     * @return The calibrationResult.
     */
    io.mavsdk.calibration.CalibrationProto.CalibrationResult getCalibrationResult();

    /**
     * <pre>
     * Progress data
     * </pre>
     *
     * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
     * @return Whether the progressData field is set.
     */
    boolean hasProgressData();
    /**
     * <pre>
     * Progress data
     * </pre>
     *
     * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
     * @return The progressData.
     */
    io.mavsdk.calibration.CalibrationProto.ProgressData getProgressData();
  }
  /**
   * Protobuf type {@code mavsdk.rpc.calibration.CalibrateLevelHorizonResponse}
   */
  public  static final class CalibrateLevelHorizonResponse extends
      com.google.protobuf.GeneratedMessageLite<
          CalibrateLevelHorizonResponse, CalibrateLevelHorizonResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.calibration.CalibrateLevelHorizonResponse)
      CalibrateLevelHorizonResponseOrBuilder {
    private CalibrateLevelHorizonResponse() {
    }
    private int bitField0_;
    public static final int CALIBRATION_RESULT_FIELD_NUMBER = 1;
    private io.mavsdk.calibration.CalibrationProto.CalibrationResult calibrationResult_;
    /**
     * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
     */
    @java.lang.Override
    public boolean hasCalibrationResult() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
     */
    @java.lang.Override
    public io.mavsdk.calibration.CalibrationProto.CalibrationResult getCalibrationResult() {
      return calibrationResult_ == null ? io.mavsdk.calibration.CalibrationProto.CalibrationResult.getDefaultInstance() : calibrationResult_;
    }
    /**
     * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
     */
    private void setCalibrationResult(io.mavsdk.calibration.CalibrationProto.CalibrationResult value) {
      value.getClass();
  calibrationResult_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeCalibrationResult(io.mavsdk.calibration.CalibrationProto.CalibrationResult value) {
      value.getClass();
  if (calibrationResult_ != null &&
          calibrationResult_ != io.mavsdk.calibration.CalibrationProto.CalibrationResult.getDefaultInstance()) {
        calibrationResult_ =
          io.mavsdk.calibration.CalibrationProto.CalibrationResult.newBuilder(calibrationResult_).mergeFrom(value).buildPartial();
      } else {
        calibrationResult_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
     */
    private void clearCalibrationResult() {  calibrationResult_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static final int PROGRESS_DATA_FIELD_NUMBER = 2;
    private io.mavsdk.calibration.CalibrationProto.ProgressData progressData_;
    /**
     * <pre>
     * Progress data
     * </pre>
     *
     * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
     */
    @java.lang.Override
    public boolean hasProgressData() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Progress data
     * </pre>
     *
     * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
     */
    @java.lang.Override
    public io.mavsdk.calibration.CalibrationProto.ProgressData getProgressData() {
      return progressData_ == null ? io.mavsdk.calibration.CalibrationProto.ProgressData.getDefaultInstance() : progressData_;
    }
    /**
     * <pre>
     * Progress data
     * </pre>
     *
     * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
     */
    private void setProgressData(io.mavsdk.calibration.CalibrationProto.ProgressData value) {
      value.getClass();
  progressData_ = value;
      bitField0_ |= 0x00000002;
      }
    /**
     * <pre>
     * Progress data
     * </pre>
     *
     * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeProgressData(io.mavsdk.calibration.CalibrationProto.ProgressData value) {
      value.getClass();
  if (progressData_ != null &&
          progressData_ != io.mavsdk.calibration.CalibrationProto.ProgressData.getDefaultInstance()) {
        progressData_ =
          io.mavsdk.calibration.CalibrationProto.ProgressData.newBuilder(progressData_).mergeFrom(value).buildPartial();
      } else {
        progressData_ = value;
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <pre>
     * Progress data
     * </pre>
     *
     * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
     */
    private void clearProgressData() {  progressData_ = null;
      bitField0_ = (bitField0_ & ~0x00000002);
    }

    public static io.mavsdk.calibration.CalibrationProto.CalibrateLevelHorizonResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateLevelHorizonResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateLevelHorizonResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateLevelHorizonResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateLevelHorizonResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateLevelHorizonResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateLevelHorizonResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateLevelHorizonResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.calibration.CalibrationProto.CalibrateLevelHorizonResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.calibration.CalibrationProto.CalibrateLevelHorizonResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateLevelHorizonResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateLevelHorizonResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.calibration.CalibrationProto.CalibrateLevelHorizonResponse prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code mavsdk.rpc.calibration.CalibrateLevelHorizonResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.calibration.CalibrationProto.CalibrateLevelHorizonResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.calibration.CalibrateLevelHorizonResponse)
        io.mavsdk.calibration.CalibrationProto.CalibrateLevelHorizonResponseOrBuilder {
      // Construct using io.mavsdk.calibration.CalibrationProto.CalibrateLevelHorizonResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
       */
      @java.lang.Override
      public boolean hasCalibrationResult() {
        return instance.hasCalibrationResult();
      }
      /**
       * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
       */
      @java.lang.Override
      public io.mavsdk.calibration.CalibrationProto.CalibrationResult getCalibrationResult() {
        return instance.getCalibrationResult();
      }
      /**
       * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
       */
      public Builder setCalibrationResult(io.mavsdk.calibration.CalibrationProto.CalibrationResult value) {
        copyOnWrite();
        instance.setCalibrationResult(value);
        return this;
        }
      /**
       * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
       */
      public Builder setCalibrationResult(
          io.mavsdk.calibration.CalibrationProto.CalibrationResult.Builder builderForValue) {
        copyOnWrite();
        instance.setCalibrationResult(builderForValue.build());
        return this;
      }
      /**
       * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
       */
      public Builder mergeCalibrationResult(io.mavsdk.calibration.CalibrationProto.CalibrationResult value) {
        copyOnWrite();
        instance.mergeCalibrationResult(value);
        return this;
      }
      /**
       * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
       */
      public Builder clearCalibrationResult() {  copyOnWrite();
        instance.clearCalibrationResult();
        return this;
      }

      /**
       * <pre>
       * Progress data
       * </pre>
       *
       * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
       */
      @java.lang.Override
      public boolean hasProgressData() {
        return instance.hasProgressData();
      }
      /**
       * <pre>
       * Progress data
       * </pre>
       *
       * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
       */
      @java.lang.Override
      public io.mavsdk.calibration.CalibrationProto.ProgressData getProgressData() {
        return instance.getProgressData();
      }
      /**
       * <pre>
       * Progress data
       * </pre>
       *
       * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
       */
      public Builder setProgressData(io.mavsdk.calibration.CalibrationProto.ProgressData value) {
        copyOnWrite();
        instance.setProgressData(value);
        return this;
        }
      /**
       * <pre>
       * Progress data
       * </pre>
       *
       * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
       */
      public Builder setProgressData(
          io.mavsdk.calibration.CalibrationProto.ProgressData.Builder builderForValue) {
        copyOnWrite();
        instance.setProgressData(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Progress data
       * </pre>
       *
       * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
       */
      public Builder mergeProgressData(io.mavsdk.calibration.CalibrationProto.ProgressData value) {
        copyOnWrite();
        instance.mergeProgressData(value);
        return this;
      }
      /**
       * <pre>
       * Progress data
       * </pre>
       *
       * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
       */
      public Builder clearProgressData() {  copyOnWrite();
        instance.clearProgressData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.calibration.CalibrateLevelHorizonResponse)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.calibration.CalibrationProto.CalibrateLevelHorizonResponse();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "calibrationResult_",
              "progressData_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0001\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u1009\u0000\u0002" +
                "\u1009\u0001";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.calibration.CalibrationProto.CalibrateLevelHorizonResponse> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.calibration.CalibrationProto.CalibrateLevelHorizonResponse.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.calibration.CalibrationProto.CalibrateLevelHorizonResponse>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.calibration.CalibrateLevelHorizonResponse)
    private static final io.mavsdk.calibration.CalibrationProto.CalibrateLevelHorizonResponse DEFAULT_INSTANCE;
    static {
      CalibrateLevelHorizonResponse defaultInstance = new CalibrateLevelHorizonResponse();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        CalibrateLevelHorizonResponse.class, defaultInstance);
    }

    public static io.mavsdk.calibration.CalibrationProto.CalibrateLevelHorizonResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<CalibrateLevelHorizonResponse> PARSER;

    public static com.google.protobuf.Parser<CalibrateLevelHorizonResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SubscribeCalibrateGimbalAccelerometerRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.calibration.SubscribeCalibrateGimbalAccelerometerRequest)
      com.google.protobuf.MessageLiteOrBuilder {
  }
  /**
   * Protobuf type {@code mavsdk.rpc.calibration.SubscribeCalibrateGimbalAccelerometerRequest}
   */
  public  static final class SubscribeCalibrateGimbalAccelerometerRequest extends
      com.google.protobuf.GeneratedMessageLite<
          SubscribeCalibrateGimbalAccelerometerRequest, SubscribeCalibrateGimbalAccelerometerRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.calibration.SubscribeCalibrateGimbalAccelerometerRequest)
      SubscribeCalibrateGimbalAccelerometerRequestOrBuilder {
    private SubscribeCalibrateGimbalAccelerometerRequest() {
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateGimbalAccelerometerRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateGimbalAccelerometerRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateGimbalAccelerometerRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateGimbalAccelerometerRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateGimbalAccelerometerRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateGimbalAccelerometerRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateGimbalAccelerometerRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateGimbalAccelerometerRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateGimbalAccelerometerRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateGimbalAccelerometerRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateGimbalAccelerometerRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateGimbalAccelerometerRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateGimbalAccelerometerRequest prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code mavsdk.rpc.calibration.SubscribeCalibrateGimbalAccelerometerRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateGimbalAccelerometerRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.calibration.SubscribeCalibrateGimbalAccelerometerRequest)
        io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateGimbalAccelerometerRequestOrBuilder {
      // Construct using io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateGimbalAccelerometerRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.calibration.SubscribeCalibrateGimbalAccelerometerRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateGimbalAccelerometerRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = null;java.lang.String info =
                "\u0000\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateGimbalAccelerometerRequest> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateGimbalAccelerometerRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateGimbalAccelerometerRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.calibration.SubscribeCalibrateGimbalAccelerometerRequest)
    private static final io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateGimbalAccelerometerRequest DEFAULT_INSTANCE;
    static {
      SubscribeCalibrateGimbalAccelerometerRequest defaultInstance = new SubscribeCalibrateGimbalAccelerometerRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SubscribeCalibrateGimbalAccelerometerRequest.class, defaultInstance);
    }

    public static io.mavsdk.calibration.CalibrationProto.SubscribeCalibrateGimbalAccelerometerRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SubscribeCalibrateGimbalAccelerometerRequest> PARSER;

    public static com.google.protobuf.Parser<SubscribeCalibrateGimbalAccelerometerRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface CalibrateGimbalAccelerometerResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.calibration.CalibrateGimbalAccelerometerResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
     * @return Whether the calibrationResult field is set.
     */
    boolean hasCalibrationResult();
    /**
     * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
     * @return The calibrationResult.
     */
    io.mavsdk.calibration.CalibrationProto.CalibrationResult getCalibrationResult();

    /**
     * <pre>
     * Progress data
     * </pre>
     *
     * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
     * @return Whether the progressData field is set.
     */
    boolean hasProgressData();
    /**
     * <pre>
     * Progress data
     * </pre>
     *
     * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
     * @return The progressData.
     */
    io.mavsdk.calibration.CalibrationProto.ProgressData getProgressData();
  }
  /**
   * Protobuf type {@code mavsdk.rpc.calibration.CalibrateGimbalAccelerometerResponse}
   */
  public  static final class CalibrateGimbalAccelerometerResponse extends
      com.google.protobuf.GeneratedMessageLite<
          CalibrateGimbalAccelerometerResponse, CalibrateGimbalAccelerometerResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.calibration.CalibrateGimbalAccelerometerResponse)
      CalibrateGimbalAccelerometerResponseOrBuilder {
    private CalibrateGimbalAccelerometerResponse() {
    }
    private int bitField0_;
    public static final int CALIBRATION_RESULT_FIELD_NUMBER = 1;
    private io.mavsdk.calibration.CalibrationProto.CalibrationResult calibrationResult_;
    /**
     * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
     */
    @java.lang.Override
    public boolean hasCalibrationResult() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
     */
    @java.lang.Override
    public io.mavsdk.calibration.CalibrationProto.CalibrationResult getCalibrationResult() {
      return calibrationResult_ == null ? io.mavsdk.calibration.CalibrationProto.CalibrationResult.getDefaultInstance() : calibrationResult_;
    }
    /**
     * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
     */
    private void setCalibrationResult(io.mavsdk.calibration.CalibrationProto.CalibrationResult value) {
      value.getClass();
  calibrationResult_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeCalibrationResult(io.mavsdk.calibration.CalibrationProto.CalibrationResult value) {
      value.getClass();
  if (calibrationResult_ != null &&
          calibrationResult_ != io.mavsdk.calibration.CalibrationProto.CalibrationResult.getDefaultInstance()) {
        calibrationResult_ =
          io.mavsdk.calibration.CalibrationProto.CalibrationResult.newBuilder(calibrationResult_).mergeFrom(value).buildPartial();
      } else {
        calibrationResult_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
     */
    private void clearCalibrationResult() {  calibrationResult_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static final int PROGRESS_DATA_FIELD_NUMBER = 2;
    private io.mavsdk.calibration.CalibrationProto.ProgressData progressData_;
    /**
     * <pre>
     * Progress data
     * </pre>
     *
     * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
     */
    @java.lang.Override
    public boolean hasProgressData() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Progress data
     * </pre>
     *
     * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
     */
    @java.lang.Override
    public io.mavsdk.calibration.CalibrationProto.ProgressData getProgressData() {
      return progressData_ == null ? io.mavsdk.calibration.CalibrationProto.ProgressData.getDefaultInstance() : progressData_;
    }
    /**
     * <pre>
     * Progress data
     * </pre>
     *
     * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
     */
    private void setProgressData(io.mavsdk.calibration.CalibrationProto.ProgressData value) {
      value.getClass();
  progressData_ = value;
      bitField0_ |= 0x00000002;
      }
    /**
     * <pre>
     * Progress data
     * </pre>
     *
     * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeProgressData(io.mavsdk.calibration.CalibrationProto.ProgressData value) {
      value.getClass();
  if (progressData_ != null &&
          progressData_ != io.mavsdk.calibration.CalibrationProto.ProgressData.getDefaultInstance()) {
        progressData_ =
          io.mavsdk.calibration.CalibrationProto.ProgressData.newBuilder(progressData_).mergeFrom(value).buildPartial();
      } else {
        progressData_ = value;
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <pre>
     * Progress data
     * </pre>
     *
     * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
     */
    private void clearProgressData() {  progressData_ = null;
      bitField0_ = (bitField0_ & ~0x00000002);
    }

    public static io.mavsdk.calibration.CalibrationProto.CalibrateGimbalAccelerometerResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateGimbalAccelerometerResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateGimbalAccelerometerResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateGimbalAccelerometerResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateGimbalAccelerometerResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateGimbalAccelerometerResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateGimbalAccelerometerResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateGimbalAccelerometerResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.calibration.CalibrationProto.CalibrateGimbalAccelerometerResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.calibration.CalibrationProto.CalibrateGimbalAccelerometerResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateGimbalAccelerometerResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrateGimbalAccelerometerResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.calibration.CalibrationProto.CalibrateGimbalAccelerometerResponse prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code mavsdk.rpc.calibration.CalibrateGimbalAccelerometerResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.calibration.CalibrationProto.CalibrateGimbalAccelerometerResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.calibration.CalibrateGimbalAccelerometerResponse)
        io.mavsdk.calibration.CalibrationProto.CalibrateGimbalAccelerometerResponseOrBuilder {
      // Construct using io.mavsdk.calibration.CalibrationProto.CalibrateGimbalAccelerometerResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
       */
      @java.lang.Override
      public boolean hasCalibrationResult() {
        return instance.hasCalibrationResult();
      }
      /**
       * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
       */
      @java.lang.Override
      public io.mavsdk.calibration.CalibrationProto.CalibrationResult getCalibrationResult() {
        return instance.getCalibrationResult();
      }
      /**
       * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
       */
      public Builder setCalibrationResult(io.mavsdk.calibration.CalibrationProto.CalibrationResult value) {
        copyOnWrite();
        instance.setCalibrationResult(value);
        return this;
        }
      /**
       * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
       */
      public Builder setCalibrationResult(
          io.mavsdk.calibration.CalibrationProto.CalibrationResult.Builder builderForValue) {
        copyOnWrite();
        instance.setCalibrationResult(builderForValue.build());
        return this;
      }
      /**
       * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
       */
      public Builder mergeCalibrationResult(io.mavsdk.calibration.CalibrationProto.CalibrationResult value) {
        copyOnWrite();
        instance.mergeCalibrationResult(value);
        return this;
      }
      /**
       * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
       */
      public Builder clearCalibrationResult() {  copyOnWrite();
        instance.clearCalibrationResult();
        return this;
      }

      /**
       * <pre>
       * Progress data
       * </pre>
       *
       * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
       */
      @java.lang.Override
      public boolean hasProgressData() {
        return instance.hasProgressData();
      }
      /**
       * <pre>
       * Progress data
       * </pre>
       *
       * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
       */
      @java.lang.Override
      public io.mavsdk.calibration.CalibrationProto.ProgressData getProgressData() {
        return instance.getProgressData();
      }
      /**
       * <pre>
       * Progress data
       * </pre>
       *
       * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
       */
      public Builder setProgressData(io.mavsdk.calibration.CalibrationProto.ProgressData value) {
        copyOnWrite();
        instance.setProgressData(value);
        return this;
        }
      /**
       * <pre>
       * Progress data
       * </pre>
       *
       * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
       */
      public Builder setProgressData(
          io.mavsdk.calibration.CalibrationProto.ProgressData.Builder builderForValue) {
        copyOnWrite();
        instance.setProgressData(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Progress data
       * </pre>
       *
       * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
       */
      public Builder mergeProgressData(io.mavsdk.calibration.CalibrationProto.ProgressData value) {
        copyOnWrite();
        instance.mergeProgressData(value);
        return this;
      }
      /**
       * <pre>
       * Progress data
       * </pre>
       *
       * <code>.mavsdk.rpc.calibration.ProgressData progress_data = 2;</code>
       */
      public Builder clearProgressData() {  copyOnWrite();
        instance.clearProgressData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.calibration.CalibrateGimbalAccelerometerResponse)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.calibration.CalibrationProto.CalibrateGimbalAccelerometerResponse();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "calibrationResult_",
              "progressData_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0001\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u1009\u0000\u0002" +
                "\u1009\u0001";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.calibration.CalibrationProto.CalibrateGimbalAccelerometerResponse> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.calibration.CalibrationProto.CalibrateGimbalAccelerometerResponse.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.calibration.CalibrationProto.CalibrateGimbalAccelerometerResponse>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.calibration.CalibrateGimbalAccelerometerResponse)
    private static final io.mavsdk.calibration.CalibrationProto.CalibrateGimbalAccelerometerResponse DEFAULT_INSTANCE;
    static {
      CalibrateGimbalAccelerometerResponse defaultInstance = new CalibrateGimbalAccelerometerResponse();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        CalibrateGimbalAccelerometerResponse.class, defaultInstance);
    }

    public static io.mavsdk.calibration.CalibrationProto.CalibrateGimbalAccelerometerResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<CalibrateGimbalAccelerometerResponse> PARSER;

    public static com.google.protobuf.Parser<CalibrateGimbalAccelerometerResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface CancelRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.calibration.CancelRequest)
      com.google.protobuf.MessageLiteOrBuilder {
  }
  /**
   * Protobuf type {@code mavsdk.rpc.calibration.CancelRequest}
   */
  public  static final class CancelRequest extends
      com.google.protobuf.GeneratedMessageLite<
          CancelRequest, CancelRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.calibration.CancelRequest)
      CancelRequestOrBuilder {
    private CancelRequest() {
    }
    public static io.mavsdk.calibration.CalibrationProto.CancelRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.calibration.CalibrationProto.CancelRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.CancelRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.calibration.CalibrationProto.CancelRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.CancelRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.calibration.CalibrationProto.CancelRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.CancelRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.calibration.CalibrationProto.CancelRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.calibration.CalibrationProto.CancelRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.calibration.CalibrationProto.CancelRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.CancelRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.calibration.CalibrationProto.CancelRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.calibration.CalibrationProto.CancelRequest prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code mavsdk.rpc.calibration.CancelRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.calibration.CalibrationProto.CancelRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.calibration.CancelRequest)
        io.mavsdk.calibration.CalibrationProto.CancelRequestOrBuilder {
      // Construct using io.mavsdk.calibration.CalibrationProto.CancelRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.calibration.CancelRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.calibration.CalibrationProto.CancelRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = null;java.lang.String info =
                "\u0000\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.calibration.CalibrationProto.CancelRequest> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.calibration.CalibrationProto.CancelRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.calibration.CalibrationProto.CancelRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.calibration.CancelRequest)
    private static final io.mavsdk.calibration.CalibrationProto.CancelRequest DEFAULT_INSTANCE;
    static {
      CancelRequest defaultInstance = new CancelRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        CancelRequest.class, defaultInstance);
    }

    public static io.mavsdk.calibration.CalibrationProto.CancelRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<CancelRequest> PARSER;

    public static com.google.protobuf.Parser<CancelRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface CancelResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.calibration.CancelResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
     * @return Whether the calibrationResult field is set.
     */
    boolean hasCalibrationResult();
    /**
     * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
     * @return The calibrationResult.
     */
    io.mavsdk.calibration.CalibrationProto.CalibrationResult getCalibrationResult();
  }
  /**
   * Protobuf type {@code mavsdk.rpc.calibration.CancelResponse}
   */
  public  static final class CancelResponse extends
      com.google.protobuf.GeneratedMessageLite<
          CancelResponse, CancelResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.calibration.CancelResponse)
      CancelResponseOrBuilder {
    private CancelResponse() {
    }
    private int bitField0_;
    public static final int CALIBRATION_RESULT_FIELD_NUMBER = 1;
    private io.mavsdk.calibration.CalibrationProto.CalibrationResult calibrationResult_;
    /**
     * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
     */
    @java.lang.Override
    public boolean hasCalibrationResult() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
     */
    @java.lang.Override
    public io.mavsdk.calibration.CalibrationProto.CalibrationResult getCalibrationResult() {
      return calibrationResult_ == null ? io.mavsdk.calibration.CalibrationProto.CalibrationResult.getDefaultInstance() : calibrationResult_;
    }
    /**
     * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
     */
    private void setCalibrationResult(io.mavsdk.calibration.CalibrationProto.CalibrationResult value) {
      value.getClass();
  calibrationResult_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeCalibrationResult(io.mavsdk.calibration.CalibrationProto.CalibrationResult value) {
      value.getClass();
  if (calibrationResult_ != null &&
          calibrationResult_ != io.mavsdk.calibration.CalibrationProto.CalibrationResult.getDefaultInstance()) {
        calibrationResult_ =
          io.mavsdk.calibration.CalibrationProto.CalibrationResult.newBuilder(calibrationResult_).mergeFrom(value).buildPartial();
      } else {
        calibrationResult_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
     */
    private void clearCalibrationResult() {  calibrationResult_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static io.mavsdk.calibration.CalibrationProto.CancelResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.calibration.CalibrationProto.CancelResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.CancelResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.calibration.CalibrationProto.CancelResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.CancelResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.calibration.CalibrationProto.CancelResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.CancelResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.calibration.CalibrationProto.CancelResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.calibration.CalibrationProto.CancelResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.calibration.CalibrationProto.CancelResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.CancelResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.calibration.CalibrationProto.CancelResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.calibration.CalibrationProto.CancelResponse prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code mavsdk.rpc.calibration.CancelResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.calibration.CalibrationProto.CancelResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.calibration.CancelResponse)
        io.mavsdk.calibration.CalibrationProto.CancelResponseOrBuilder {
      // Construct using io.mavsdk.calibration.CalibrationProto.CancelResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
       */
      @java.lang.Override
      public boolean hasCalibrationResult() {
        return instance.hasCalibrationResult();
      }
      /**
       * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
       */
      @java.lang.Override
      public io.mavsdk.calibration.CalibrationProto.CalibrationResult getCalibrationResult() {
        return instance.getCalibrationResult();
      }
      /**
       * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
       */
      public Builder setCalibrationResult(io.mavsdk.calibration.CalibrationProto.CalibrationResult value) {
        copyOnWrite();
        instance.setCalibrationResult(value);
        return this;
        }
      /**
       * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
       */
      public Builder setCalibrationResult(
          io.mavsdk.calibration.CalibrationProto.CalibrationResult.Builder builderForValue) {
        copyOnWrite();
        instance.setCalibrationResult(builderForValue.build());
        return this;
      }
      /**
       * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
       */
      public Builder mergeCalibrationResult(io.mavsdk.calibration.CalibrationProto.CalibrationResult value) {
        copyOnWrite();
        instance.mergeCalibrationResult(value);
        return this;
      }
      /**
       * <code>.mavsdk.rpc.calibration.CalibrationResult calibration_result = 1;</code>
       */
      public Builder clearCalibrationResult() {  copyOnWrite();
        instance.clearCalibrationResult();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.calibration.CancelResponse)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.calibration.CalibrationProto.CancelResponse();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "calibrationResult_",
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u1009\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.calibration.CalibrationProto.CancelResponse> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.calibration.CalibrationProto.CancelResponse.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.calibration.CalibrationProto.CancelResponse>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.calibration.CancelResponse)
    private static final io.mavsdk.calibration.CalibrationProto.CancelResponse DEFAULT_INSTANCE;
    static {
      CancelResponse defaultInstance = new CancelResponse();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        CancelResponse.class, defaultInstance);
    }

    public static io.mavsdk.calibration.CalibrationProto.CancelResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<CancelResponse> PARSER;

    public static com.google.protobuf.Parser<CancelResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface CalibrationResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.calibration.CalibrationResult)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Result enum value
     * </pre>
     *
     * <code>.mavsdk.rpc.calibration.CalibrationResult.Result result = 1;</code>
     * @return The enum numeric value on the wire for result.
     */
    int getResultValue();
    /**
     * <pre>
     * Result enum value
     * </pre>
     *
     * <code>.mavsdk.rpc.calibration.CalibrationResult.Result result = 1;</code>
     * @return The result.
     */
    io.mavsdk.calibration.CalibrationProto.CalibrationResult.Result getResult();

    /**
     * <pre>
     * Human-readable English string describing the result
     * </pre>
     *
     * <code>string result_str = 2;</code>
     * @return The resultStr.
     */
    java.lang.String getResultStr();
    /**
     * <pre>
     * Human-readable English string describing the result
     * </pre>
     *
     * <code>string result_str = 2;</code>
     * @return The bytes for resultStr.
     */
    com.google.protobuf.ByteString
        getResultStrBytes();
  }
  /**
   * <pre>
   * Result type.
   * </pre>
   *
   * Protobuf type {@code mavsdk.rpc.calibration.CalibrationResult}
   */
  public  static final class CalibrationResult extends
      com.google.protobuf.GeneratedMessageLite<
          CalibrationResult, CalibrationResult.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.calibration.CalibrationResult)
      CalibrationResultOrBuilder {
    private CalibrationResult() {
      resultStr_ = "";
    }
    /**
     * <pre>
     * Possible results returned for calibration commands
     * </pre>
     *
     * Protobuf enum {@code mavsdk.rpc.calibration.CalibrationResult.Result}
     */
    public enum Result
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <pre>
       * Unknown result
       * </pre>
       *
       * <code>RESULT_UNKNOWN = 0;</code>
       */
      RESULT_UNKNOWN(0),
      /**
       * <pre>
       * The calibration succeeded
       * </pre>
       *
       * <code>RESULT_SUCCESS = 1;</code>
       */
      RESULT_SUCCESS(1),
      /**
       * <pre>
       * Intermediate message showing progress or instructions on the next steps
       * </pre>
       *
       * <code>RESULT_NEXT = 2;</code>
       */
      RESULT_NEXT(2),
      /**
       * <pre>
       * Calibration failed
       * </pre>
       *
       * <code>RESULT_FAILED = 3;</code>
       */
      RESULT_FAILED(3),
      /**
       * <pre>
       * No system is connected
       * </pre>
       *
       * <code>RESULT_NO_SYSTEM = 4;</code>
       */
      RESULT_NO_SYSTEM(4),
      /**
       * <pre>
       * Connection error
       * </pre>
       *
       * <code>RESULT_CONNECTION_ERROR = 5;</code>
       */
      RESULT_CONNECTION_ERROR(5),
      /**
       * <pre>
       * Vehicle is busy
       * </pre>
       *
       * <code>RESULT_BUSY = 6;</code>
       */
      RESULT_BUSY(6),
      /**
       * <pre>
       * Command refused by vehicle
       * </pre>
       *
       * <code>RESULT_COMMAND_DENIED = 7;</code>
       */
      RESULT_COMMAND_DENIED(7),
      /**
       * <pre>
       * Command timed out
       * </pre>
       *
       * <code>RESULT_TIMEOUT = 8;</code>
       */
      RESULT_TIMEOUT(8),
      /**
       * <pre>
       * Calibration process was cancelled
       * </pre>
       *
       * <code>RESULT_CANCELLED = 9;</code>
       */
      RESULT_CANCELLED(9),
      /**
       * <pre>
       * Calibration process failed since the vehicle is armed
       * </pre>
       *
       * <code>RESULT_FAILED_ARMED = 10;</code>
       */
      RESULT_FAILED_ARMED(10),
      /**
       * <pre>
       * Functionality not supported
       * </pre>
       *
       * <code>RESULT_UNSUPPORTED = 11;</code>
       */
      RESULT_UNSUPPORTED(11),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Unknown result
       * </pre>
       *
       * <code>RESULT_UNKNOWN = 0;</code>
       */
      public static final int RESULT_UNKNOWN_VALUE = 0;
      /**
       * <pre>
       * The calibration succeeded
       * </pre>
       *
       * <code>RESULT_SUCCESS = 1;</code>
       */
      public static final int RESULT_SUCCESS_VALUE = 1;
      /**
       * <pre>
       * Intermediate message showing progress or instructions on the next steps
       * </pre>
       *
       * <code>RESULT_NEXT = 2;</code>
       */
      public static final int RESULT_NEXT_VALUE = 2;
      /**
       * <pre>
       * Calibration failed
       * </pre>
       *
       * <code>RESULT_FAILED = 3;</code>
       */
      public static final int RESULT_FAILED_VALUE = 3;
      /**
       * <pre>
       * No system is connected
       * </pre>
       *
       * <code>RESULT_NO_SYSTEM = 4;</code>
       */
      public static final int RESULT_NO_SYSTEM_VALUE = 4;
      /**
       * <pre>
       * Connection error
       * </pre>
       *
       * <code>RESULT_CONNECTION_ERROR = 5;</code>
       */
      public static final int RESULT_CONNECTION_ERROR_VALUE = 5;
      /**
       * <pre>
       * Vehicle is busy
       * </pre>
       *
       * <code>RESULT_BUSY = 6;</code>
       */
      public static final int RESULT_BUSY_VALUE = 6;
      /**
       * <pre>
       * Command refused by vehicle
       * </pre>
       *
       * <code>RESULT_COMMAND_DENIED = 7;</code>
       */
      public static final int RESULT_COMMAND_DENIED_VALUE = 7;
      /**
       * <pre>
       * Command timed out
       * </pre>
       *
       * <code>RESULT_TIMEOUT = 8;</code>
       */
      public static final int RESULT_TIMEOUT_VALUE = 8;
      /**
       * <pre>
       * Calibration process was cancelled
       * </pre>
       *
       * <code>RESULT_CANCELLED = 9;</code>
       */
      public static final int RESULT_CANCELLED_VALUE = 9;
      /**
       * <pre>
       * Calibration process failed since the vehicle is armed
       * </pre>
       *
       * <code>RESULT_FAILED_ARMED = 10;</code>
       */
      public static final int RESULT_FAILED_ARMED_VALUE = 10;
      /**
       * <pre>
       * Functionality not supported
       * </pre>
       *
       * <code>RESULT_UNSUPPORTED = 11;</code>
       */
      public static final int RESULT_UNSUPPORTED_VALUE = 11;


      @java.lang.Override
      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Result valueOf(int value) {
        return forNumber(value);
      }

      public static Result forNumber(int value) {
        switch (value) {
          case 0: return RESULT_UNKNOWN;
          case 1: return RESULT_SUCCESS;
          case 2: return RESULT_NEXT;
          case 3: return RESULT_FAILED;
          case 4: return RESULT_NO_SYSTEM;
          case 5: return RESULT_CONNECTION_ERROR;
          case 6: return RESULT_BUSY;
          case 7: return RESULT_COMMAND_DENIED;
          case 8: return RESULT_TIMEOUT;
          case 9: return RESULT_CANCELLED;
          case 10: return RESULT_FAILED_ARMED;
          case 11: return RESULT_UNSUPPORTED;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Result>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Result> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Result>() {
              @java.lang.Override
              public Result findValueByNumber(int number) {
                return Result.forNumber(number);
              }
            };

      public static com.google.protobuf.Internal.EnumVerifier 
          internalGetVerifier() {
        return ResultVerifier.INSTANCE;
      }

      private static final class ResultVerifier implements 
           com.google.protobuf.Internal.EnumVerifier { 
              static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new ResultVerifier();
              @java.lang.Override
              public boolean isInRange(int number) {
                return Result.forNumber(number) != null;
              }
            };

      private final int value;

      private Result(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:mavsdk.rpc.calibration.CalibrationResult.Result)
    }

    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <pre>
     * Result enum value
     * </pre>
     *
     * <code>.mavsdk.rpc.calibration.CalibrationResult.Result result = 1;</code>
     * @return The enum numeric value on the wire for result.
     */
    @java.lang.Override
    public int getResultValue() {
      return result_;
    }
    /**
     * <pre>
     * Result enum value
     * </pre>
     *
     * <code>.mavsdk.rpc.calibration.CalibrationResult.Result result = 1;</code>
     * @return The result.
     */
    @java.lang.Override
    public io.mavsdk.calibration.CalibrationProto.CalibrationResult.Result getResult() {
      io.mavsdk.calibration.CalibrationProto.CalibrationResult.Result result = io.mavsdk.calibration.CalibrationProto.CalibrationResult.Result.forNumber(result_);
      return result == null ? io.mavsdk.calibration.CalibrationProto.CalibrationResult.Result.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Result enum value
     * </pre>
     *
     * <code>.mavsdk.rpc.calibration.CalibrationResult.Result result = 1;</code>
     * @param value The enum numeric value on the wire for result to set.
     */
    private void setResultValue(int value) {
        result_ = value;
    }
    /**
     * <pre>
     * Result enum value
     * </pre>
     *
     * <code>.mavsdk.rpc.calibration.CalibrationResult.Result result = 1;</code>
     * @param value The result to set.
     */
    private void setResult(io.mavsdk.calibration.CalibrationProto.CalibrationResult.Result value) {
      result_ = value.getNumber();

    }
    /**
     * <pre>
     * Result enum value
     * </pre>
     *
     * <code>.mavsdk.rpc.calibration.CalibrationResult.Result result = 1;</code>
     */
    private void clearResult() {

      result_ = 0;
    }

    public static final int RESULT_STR_FIELD_NUMBER = 2;
    private java.lang.String resultStr_;
    /**
     * <pre>
     * Human-readable English string describing the result
     * </pre>
     *
     * <code>string result_str = 2;</code>
     * @return The resultStr.
     */
    @java.lang.Override
    public java.lang.String getResultStr() {
      return resultStr_;
    }
    /**
     * <pre>
     * Human-readable English string describing the result
     * </pre>
     *
     * <code>string result_str = 2;</code>
     * @return The bytes for resultStr.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getResultStrBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(resultStr_);
    }
    /**
     * <pre>
     * Human-readable English string describing the result
     * </pre>
     *
     * <code>string result_str = 2;</code>
     * @param value The resultStr to set.
     */
    private void setResultStr(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      resultStr_ = value;
    }
    /**
     * <pre>
     * Human-readable English string describing the result
     * </pre>
     *
     * <code>string result_str = 2;</code>
     */
    private void clearResultStr() {

      resultStr_ = getDefaultInstance().getResultStr();
    }
    /**
     * <pre>
     * Human-readable English string describing the result
     * </pre>
     *
     * <code>string result_str = 2;</code>
     * @param value The bytes for resultStr to set.
     */
    private void setResultStrBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      resultStr_ = value.toStringUtf8();

    }

    public static io.mavsdk.calibration.CalibrationProto.CalibrationResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrationResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrationResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrationResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrationResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrationResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrationResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrationResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.calibration.CalibrationProto.CalibrationResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.calibration.CalibrationProto.CalibrationResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrationResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.calibration.CalibrationProto.CalibrationResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.calibration.CalibrationProto.CalibrationResult prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Result type.
     * </pre>
     *
     * Protobuf type {@code mavsdk.rpc.calibration.CalibrationResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.calibration.CalibrationProto.CalibrationResult, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.calibration.CalibrationResult)
        io.mavsdk.calibration.CalibrationProto.CalibrationResultOrBuilder {
      // Construct using io.mavsdk.calibration.CalibrationProto.CalibrationResult.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Result enum value
       * </pre>
       *
       * <code>.mavsdk.rpc.calibration.CalibrationResult.Result result = 1;</code>
       * @return The enum numeric value on the wire for result.
       */
      @java.lang.Override
      public int getResultValue() {
        return instance.getResultValue();
      }
      /**
       * <pre>
       * Result enum value
       * </pre>
       *
       * <code>.mavsdk.rpc.calibration.CalibrationResult.Result result = 1;</code>
       * @param value The result to set.
       * @return This builder for chaining.
       */
      public Builder setResultValue(int value) {
        copyOnWrite();
        instance.setResultValue(value);
        return this;
      }
      /**
       * <pre>
       * Result enum value
       * </pre>
       *
       * <code>.mavsdk.rpc.calibration.CalibrationResult.Result result = 1;</code>
       * @return The result.
       */
      @java.lang.Override
      public io.mavsdk.calibration.CalibrationProto.CalibrationResult.Result getResult() {
        return instance.getResult();
      }
      /**
       * <pre>
       * Result enum value
       * </pre>
       *
       * <code>.mavsdk.rpc.calibration.CalibrationResult.Result result = 1;</code>
       * @param value The enum numeric value on the wire for result to set.
       * @return This builder for chaining.
       */
      public Builder setResult(io.mavsdk.calibration.CalibrationProto.CalibrationResult.Result value) {
        copyOnWrite();
        instance.setResult(value);
        return this;
      }
      /**
       * <pre>
       * Result enum value
       * </pre>
       *
       * <code>.mavsdk.rpc.calibration.CalibrationResult.Result result = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearResult() {
        copyOnWrite();
        instance.clearResult();
        return this;
      }

      /**
       * <pre>
       * Human-readable English string describing the result
       * </pre>
       *
       * <code>string result_str = 2;</code>
       * @return The resultStr.
       */
      @java.lang.Override
      public java.lang.String getResultStr() {
        return instance.getResultStr();
      }
      /**
       * <pre>
       * Human-readable English string describing the result
       * </pre>
       *
       * <code>string result_str = 2;</code>
       * @return The bytes for resultStr.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getResultStrBytes() {
        return instance.getResultStrBytes();
      }
      /**
       * <pre>
       * Human-readable English string describing the result
       * </pre>
       *
       * <code>string result_str = 2;</code>
       * @param value The resultStr to set.
       * @return This builder for chaining.
       */
      public Builder setResultStr(
          java.lang.String value) {
        copyOnWrite();
        instance.setResultStr(value);
        return this;
      }
      /**
       * <pre>
       * Human-readable English string describing the result
       * </pre>
       *
       * <code>string result_str = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearResultStr() {
        copyOnWrite();
        instance.clearResultStr();
        return this;
      }
      /**
       * <pre>
       * Human-readable English string describing the result
       * </pre>
       *
       * <code>string result_str = 2;</code>
       * @param value The bytes for resultStr to set.
       * @return This builder for chaining.
       */
      public Builder setResultStrBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setResultStrBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.calibration.CalibrationResult)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.calibration.CalibrationProto.CalibrationResult();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "result_",
              "resultStr_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\f\u0002\u0208" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.calibration.CalibrationProto.CalibrationResult> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.calibration.CalibrationProto.CalibrationResult.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.calibration.CalibrationProto.CalibrationResult>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.calibration.CalibrationResult)
    private static final io.mavsdk.calibration.CalibrationProto.CalibrationResult DEFAULT_INSTANCE;
    static {
      CalibrationResult defaultInstance = new CalibrationResult();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        CalibrationResult.class, defaultInstance);
    }

    public static io.mavsdk.calibration.CalibrationProto.CalibrationResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<CalibrationResult> PARSER;

    public static com.google.protobuf.Parser<CalibrationResult> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ProgressDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mavsdk.rpc.calibration.ProgressData)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Whether this ProgressData contains a 'progress' status or not
     * </pre>
     *
     * <code>bool has_progress = 1 [(.mavsdk.options.default_value) = "false"];</code>
     * @return The hasProgress.
     */
    boolean getHasProgress();

    /**
     * <pre>
     * Progress (percentage)
     * </pre>
     *
     * <code>float progress = 2 [(.mavsdk.options.default_value) = "NaN"];</code>
     * @return The progress.
     */
    float getProgress();

    /**
     * <pre>
     * Whether this ProgressData contains a 'status_text' or not
     * </pre>
     *
     * <code>bool has_status_text = 3 [(.mavsdk.options.default_value) = "false"];</code>
     * @return The hasStatusText.
     */
    boolean getHasStatusText();

    /**
     * <pre>
     * Instruction text
     * </pre>
     *
     * <code>string status_text = 4;</code>
     * @return The statusText.
     */
    java.lang.String getStatusText();
    /**
     * <pre>
     * Instruction text
     * </pre>
     *
     * <code>string status_text = 4;</code>
     * @return The bytes for statusText.
     */
    com.google.protobuf.ByteString
        getStatusTextBytes();
  }
  /**
   * <pre>
   *
   * Progress data coming from calibration.
   *
   * Can be a progress percentage, or an instruction text.
   * </pre>
   *
   * Protobuf type {@code mavsdk.rpc.calibration.ProgressData}
   */
  public  static final class ProgressData extends
      com.google.protobuf.GeneratedMessageLite<
          ProgressData, ProgressData.Builder> implements
      // @@protoc_insertion_point(message_implements:mavsdk.rpc.calibration.ProgressData)
      ProgressDataOrBuilder {
    private ProgressData() {
      statusText_ = "";
    }
    public static final int HAS_PROGRESS_FIELD_NUMBER = 1;
    private boolean hasProgress_;
    /**
     * <pre>
     * Whether this ProgressData contains a 'progress' status or not
     * </pre>
     *
     * <code>bool has_progress = 1 [(.mavsdk.options.default_value) = "false"];</code>
     * @return The hasProgress.
     */
    @java.lang.Override
    public boolean getHasProgress() {
      return hasProgress_;
    }
    /**
     * <pre>
     * Whether this ProgressData contains a 'progress' status or not
     * </pre>
     *
     * <code>bool has_progress = 1 [(.mavsdk.options.default_value) = "false"];</code>
     * @param value The hasProgress to set.
     */
    private void setHasProgress(boolean value) {
      
      hasProgress_ = value;
    }
    /**
     * <pre>
     * Whether this ProgressData contains a 'progress' status or not
     * </pre>
     *
     * <code>bool has_progress = 1 [(.mavsdk.options.default_value) = "false"];</code>
     */
    private void clearHasProgress() {

      hasProgress_ = false;
    }

    public static final int PROGRESS_FIELD_NUMBER = 2;
    private float progress_;
    /**
     * <pre>
     * Progress (percentage)
     * </pre>
     *
     * <code>float progress = 2 [(.mavsdk.options.default_value) = "NaN"];</code>
     * @return The progress.
     */
    @java.lang.Override
    public float getProgress() {
      return progress_;
    }
    /**
     * <pre>
     * Progress (percentage)
     * </pre>
     *
     * <code>float progress = 2 [(.mavsdk.options.default_value) = "NaN"];</code>
     * @param value The progress to set.
     */
    private void setProgress(float value) {
      
      progress_ = value;
    }
    /**
     * <pre>
     * Progress (percentage)
     * </pre>
     *
     * <code>float progress = 2 [(.mavsdk.options.default_value) = "NaN"];</code>
     */
    private void clearProgress() {

      progress_ = 0F;
    }

    public static final int HAS_STATUS_TEXT_FIELD_NUMBER = 3;
    private boolean hasStatusText_;
    /**
     * <pre>
     * Whether this ProgressData contains a 'status_text' or not
     * </pre>
     *
     * <code>bool has_status_text = 3 [(.mavsdk.options.default_value) = "false"];</code>
     * @return The hasStatusText.
     */
    @java.lang.Override
    public boolean getHasStatusText() {
      return hasStatusText_;
    }
    /**
     * <pre>
     * Whether this ProgressData contains a 'status_text' or not
     * </pre>
     *
     * <code>bool has_status_text = 3 [(.mavsdk.options.default_value) = "false"];</code>
     * @param value The hasStatusText to set.
     */
    private void setHasStatusText(boolean value) {
      
      hasStatusText_ = value;
    }
    /**
     * <pre>
     * Whether this ProgressData contains a 'status_text' or not
     * </pre>
     *
     * <code>bool has_status_text = 3 [(.mavsdk.options.default_value) = "false"];</code>
     */
    private void clearHasStatusText() {

      hasStatusText_ = false;
    }

    public static final int STATUS_TEXT_FIELD_NUMBER = 4;
    private java.lang.String statusText_;
    /**
     * <pre>
     * Instruction text
     * </pre>
     *
     * <code>string status_text = 4;</code>
     * @return The statusText.
     */
    @java.lang.Override
    public java.lang.String getStatusText() {
      return statusText_;
    }
    /**
     * <pre>
     * Instruction text
     * </pre>
     *
     * <code>string status_text = 4;</code>
     * @return The bytes for statusText.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStatusTextBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(statusText_);
    }
    /**
     * <pre>
     * Instruction text
     * </pre>
     *
     * <code>string status_text = 4;</code>
     * @param value The statusText to set.
     */
    private void setStatusText(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      statusText_ = value;
    }
    /**
     * <pre>
     * Instruction text
     * </pre>
     *
     * <code>string status_text = 4;</code>
     */
    private void clearStatusText() {

      statusText_ = getDefaultInstance().getStatusText();
    }
    /**
     * <pre>
     * Instruction text
     * </pre>
     *
     * <code>string status_text = 4;</code>
     * @param value The bytes for statusText to set.
     */
    private void setStatusTextBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      statusText_ = value.toStringUtf8();

    }

    public static io.mavsdk.calibration.CalibrationProto.ProgressData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.calibration.CalibrationProto.ProgressData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.ProgressData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.calibration.CalibrationProto.ProgressData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.ProgressData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.mavsdk.calibration.CalibrationProto.ProgressData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.ProgressData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.calibration.CalibrationProto.ProgressData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static io.mavsdk.calibration.CalibrationProto.ProgressData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static io.mavsdk.calibration.CalibrationProto.ProgressData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.mavsdk.calibration.CalibrationProto.ProgressData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.mavsdk.calibration.CalibrationProto.ProgressData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.mavsdk.calibration.CalibrationProto.ProgressData prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     *
     * Progress data coming from calibration.
     *
     * Can be a progress percentage, or an instruction text.
     * </pre>
     *
     * Protobuf type {@code mavsdk.rpc.calibration.ProgressData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.mavsdk.calibration.CalibrationProto.ProgressData, Builder> implements
        // @@protoc_insertion_point(builder_implements:mavsdk.rpc.calibration.ProgressData)
        io.mavsdk.calibration.CalibrationProto.ProgressDataOrBuilder {
      // Construct using io.mavsdk.calibration.CalibrationProto.ProgressData.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Whether this ProgressData contains a 'progress' status or not
       * </pre>
       *
       * <code>bool has_progress = 1 [(.mavsdk.options.default_value) = "false"];</code>
       * @return The hasProgress.
       */
      @java.lang.Override
      public boolean getHasProgress() {
        return instance.getHasProgress();
      }
      /**
       * <pre>
       * Whether this ProgressData contains a 'progress' status or not
       * </pre>
       *
       * <code>bool has_progress = 1 [(.mavsdk.options.default_value) = "false"];</code>
       * @param value The hasProgress to set.
       * @return This builder for chaining.
       */
      public Builder setHasProgress(boolean value) {
        copyOnWrite();
        instance.setHasProgress(value);
        return this;
      }
      /**
       * <pre>
       * Whether this ProgressData contains a 'progress' status or not
       * </pre>
       *
       * <code>bool has_progress = 1 [(.mavsdk.options.default_value) = "false"];</code>
       * @return This builder for chaining.
       */
      public Builder clearHasProgress() {
        copyOnWrite();
        instance.clearHasProgress();
        return this;
      }

      /**
       * <pre>
       * Progress (percentage)
       * </pre>
       *
       * <code>float progress = 2 [(.mavsdk.options.default_value) = "NaN"];</code>
       * @return The progress.
       */
      @java.lang.Override
      public float getProgress() {
        return instance.getProgress();
      }
      /**
       * <pre>
       * Progress (percentage)
       * </pre>
       *
       * <code>float progress = 2 [(.mavsdk.options.default_value) = "NaN"];</code>
       * @param value The progress to set.
       * @return This builder for chaining.
       */
      public Builder setProgress(float value) {
        copyOnWrite();
        instance.setProgress(value);
        return this;
      }
      /**
       * <pre>
       * Progress (percentage)
       * </pre>
       *
       * <code>float progress = 2 [(.mavsdk.options.default_value) = "NaN"];</code>
       * @return This builder for chaining.
       */
      public Builder clearProgress() {
        copyOnWrite();
        instance.clearProgress();
        return this;
      }

      /**
       * <pre>
       * Whether this ProgressData contains a 'status_text' or not
       * </pre>
       *
       * <code>bool has_status_text = 3 [(.mavsdk.options.default_value) = "false"];</code>
       * @return The hasStatusText.
       */
      @java.lang.Override
      public boolean getHasStatusText() {
        return instance.getHasStatusText();
      }
      /**
       * <pre>
       * Whether this ProgressData contains a 'status_text' or not
       * </pre>
       *
       * <code>bool has_status_text = 3 [(.mavsdk.options.default_value) = "false"];</code>
       * @param value The hasStatusText to set.
       * @return This builder for chaining.
       */
      public Builder setHasStatusText(boolean value) {
        copyOnWrite();
        instance.setHasStatusText(value);
        return this;
      }
      /**
       * <pre>
       * Whether this ProgressData contains a 'status_text' or not
       * </pre>
       *
       * <code>bool has_status_text = 3 [(.mavsdk.options.default_value) = "false"];</code>
       * @return This builder for chaining.
       */
      public Builder clearHasStatusText() {
        copyOnWrite();
        instance.clearHasStatusText();
        return this;
      }

      /**
       * <pre>
       * Instruction text
       * </pre>
       *
       * <code>string status_text = 4;</code>
       * @return The statusText.
       */
      @java.lang.Override
      public java.lang.String getStatusText() {
        return instance.getStatusText();
      }
      /**
       * <pre>
       * Instruction text
       * </pre>
       *
       * <code>string status_text = 4;</code>
       * @return The bytes for statusText.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getStatusTextBytes() {
        return instance.getStatusTextBytes();
      }
      /**
       * <pre>
       * Instruction text
       * </pre>
       *
       * <code>string status_text = 4;</code>
       * @param value The statusText to set.
       * @return This builder for chaining.
       */
      public Builder setStatusText(
          java.lang.String value) {
        copyOnWrite();
        instance.setStatusText(value);
        return this;
      }
      /**
       * <pre>
       * Instruction text
       * </pre>
       *
       * <code>string status_text = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearStatusText() {
        copyOnWrite();
        instance.clearStatusText();
        return this;
      }
      /**
       * <pre>
       * Instruction text
       * </pre>
       *
       * <code>string status_text = 4;</code>
       * @param value The bytes for statusText to set.
       * @return This builder for chaining.
       */
      public Builder setStatusTextBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setStatusTextBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mavsdk.rpc.calibration.ProgressData)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.mavsdk.calibration.CalibrationProto.ProgressData();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "hasProgress_",
              "progress_",
              "hasStatusText_",
              "statusText_",
            };
            java.lang.String info =
                "\u0000\u0004\u0000\u0000\u0001\u0004\u0004\u0000\u0000\u0000\u0001\u0007\u0002\u0001" +
                "\u0003\u0007\u0004\u0208";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.mavsdk.calibration.CalibrationProto.ProgressData> parser = PARSER;
          if (parser == null) {
            synchronized (io.mavsdk.calibration.CalibrationProto.ProgressData.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.mavsdk.calibration.CalibrationProto.ProgressData>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mavsdk.rpc.calibration.ProgressData)
    private static final io.mavsdk.calibration.CalibrationProto.ProgressData DEFAULT_INSTANCE;
    static {
      ProgressData defaultInstance = new ProgressData();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ProgressData.class, defaultInstance);
    }

    public static io.mavsdk.calibration.CalibrationProto.ProgressData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ProgressData> PARSER;

    public static com.google.protobuf.Parser<ProgressData> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}

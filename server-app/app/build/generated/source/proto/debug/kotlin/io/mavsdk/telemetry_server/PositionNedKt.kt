// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/telemetry_server/telemetry_server.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.telemetry_server;

@kotlin.jvm.JvmName("-initializepositionNed")
public inline fun positionNed(block: io.mavsdk.telemetry_server.PositionNedKt.Dsl.() -> kotlin.Unit): io.mavsdk.telemetry_server.TelemetryServerProto.PositionNed =
  io.mavsdk.telemetry_server.PositionNedKt.Dsl._create(io.mavsdk.telemetry_server.TelemetryServerProto.PositionNed.newBuilder()).apply { block() }._build()
/**
 * ```
 * PositionNed message type.
 * ```
 *
 * Protobuf type `mavsdk.rpc.telemetry_server.PositionNed`
 */
public object PositionNedKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.telemetry_server.TelemetryServerProto.PositionNed.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.telemetry_server.TelemetryServerProto.PositionNed.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.telemetry_server.TelemetryServerProto.PositionNed = _builder.build()

    /**
     * <pre>
     * Position along north direction in metres
     * </pre>
     *
     * <code>float north_m = 1 [(.mavsdk.options.default_value) = "NaN"];</code>
     */
    public var northM: kotlin.Float
      @JvmName("getNorthM")
      get() = _builder.getNorthM()
      @JvmName("setNorthM")
      set(value) {
        _builder.setNorthM(value)
      }
    /**
     * ```
     * Position along north direction in metres
     * ```
     *
     * `float north_m = 1 [(.mavsdk.options.default_value) = "NaN"];`
     */
    public fun clearNorthM() {
      _builder.clearNorthM()
    }

    /**
     * <pre>
     * Position along east direction in metres
     * </pre>
     *
     * <code>float east_m = 2 [(.mavsdk.options.default_value) = "NaN"];</code>
     */
    public var eastM: kotlin.Float
      @JvmName("getEastM")
      get() = _builder.getEastM()
      @JvmName("setEastM")
      set(value) {
        _builder.setEastM(value)
      }
    /**
     * ```
     * Position along east direction in metres
     * ```
     *
     * `float east_m = 2 [(.mavsdk.options.default_value) = "NaN"];`
     */
    public fun clearEastM() {
      _builder.clearEastM()
    }

    /**
     * <pre>
     * Position along down direction in metres
     * </pre>
     *
     * <code>float down_m = 3 [(.mavsdk.options.default_value) = "NaN"];</code>
     */
    public var downM: kotlin.Float
      @JvmName("getDownM")
      get() = _builder.getDownM()
      @JvmName("setDownM")
      set(value) {
        _builder.setDownM(value)
      }
    /**
     * ```
     * Position along down direction in metres
     * ```
     *
     * `float down_m = 3 [(.mavsdk.options.default_value) = "NaN"];`
     */
    public fun clearDownM() {
      _builder.clearDownM()
    }
  }
}
public inline fun io.mavsdk.telemetry_server.TelemetryServerProto.PositionNed.copy(block: `io.mavsdk.telemetry_server`.PositionNedKt.Dsl.() -> kotlin.Unit): io.mavsdk.telemetry_server.TelemetryServerProto.PositionNed =
  `io.mavsdk.telemetry_server`.PositionNedKt.Dsl._create(this.toBuilder()).apply { block() }._build()


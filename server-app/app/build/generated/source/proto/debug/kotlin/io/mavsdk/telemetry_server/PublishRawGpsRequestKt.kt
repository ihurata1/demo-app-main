// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/telemetry_server/telemetry_server.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.telemetry_server;

@kotlin.jvm.JvmName("-initializepublishRawGpsRequest")
public inline fun publishRawGpsRequest(block: io.mavsdk.telemetry_server.PublishRawGpsRequestKt.Dsl.() -> kotlin.Unit): io.mavsdk.telemetry_server.TelemetryServerProto.PublishRawGpsRequest =
  io.mavsdk.telemetry_server.PublishRawGpsRequestKt.Dsl._create(io.mavsdk.telemetry_server.TelemetryServerProto.PublishRawGpsRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `mavsdk.rpc.telemetry_server.PublishRawGpsRequest`
 */
public object PublishRawGpsRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.telemetry_server.TelemetryServerProto.PublishRawGpsRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.telemetry_server.TelemetryServerProto.PublishRawGpsRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.telemetry_server.TelemetryServerProto.PublishRawGpsRequest = _builder.build()

    /**
     * ```
     * The next 'Raw GPS' state. Warning: this is an advanced feature, use `Position` updates to get the location of the drone!
     * ```
     *
     * `.mavsdk.rpc.telemetry_server.RawGps raw_gps = 1;`
     */
    public var rawGps: io.mavsdk.telemetry_server.TelemetryServerProto.RawGps
      @JvmName("getRawGps")
      get() = _builder.getRawGps()
      @JvmName("setRawGps")
      set(value) {
        _builder.setRawGps(value)
      }
    /**
     * ```
     * The next 'Raw GPS' state. Warning: this is an advanced feature, use `Position` updates to get the location of the drone!
     * ```
     *
     * `.mavsdk.rpc.telemetry_server.RawGps raw_gps = 1;`
     */
    public fun clearRawGps() {
      _builder.clearRawGps()
    }
    /**
     * ```
     * The next 'Raw GPS' state. Warning: this is an advanced feature, use `Position` updates to get the location of the drone!
     * ```
     *
     * `.mavsdk.rpc.telemetry_server.RawGps raw_gps = 1;`
     * @return Whether the rawGps field is set.
     */
    public fun hasRawGps(): kotlin.Boolean {
      return _builder.hasRawGps()
    }

    /**
     * ```
     * The next 'GPS info' state
     * ```
     *
     * `.mavsdk.rpc.telemetry_server.GpsInfo gps_info = 2;`
     */
    public var gpsInfo: io.mavsdk.telemetry_server.TelemetryServerProto.GpsInfo
      @JvmName("getGpsInfo")
      get() = _builder.getGpsInfo()
      @JvmName("setGpsInfo")
      set(value) {
        _builder.setGpsInfo(value)
      }
    /**
     * ```
     * The next 'GPS info' state
     * ```
     *
     * `.mavsdk.rpc.telemetry_server.GpsInfo gps_info = 2;`
     */
    public fun clearGpsInfo() {
      _builder.clearGpsInfo()
    }
    /**
     * ```
     * The next 'GPS info' state
     * ```
     *
     * `.mavsdk.rpc.telemetry_server.GpsInfo gps_info = 2;`
     * @return Whether the gpsInfo field is set.
     */
    public fun hasGpsInfo(): kotlin.Boolean {
      return _builder.hasGpsInfo()
    }
  }
}
public inline fun io.mavsdk.telemetry_server.TelemetryServerProto.PublishRawGpsRequest.copy(block: `io.mavsdk.telemetry_server`.PublishRawGpsRequestKt.Dsl.() -> kotlin.Unit): io.mavsdk.telemetry_server.TelemetryServerProto.PublishRawGpsRequest =
  `io.mavsdk.telemetry_server`.PublishRawGpsRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val io.mavsdk.telemetry_server.TelemetryServerProto.PublishRawGpsRequestOrBuilder.rawGpsOrNull: io.mavsdk.telemetry_server.TelemetryServerProto.RawGps?
  get() = if (hasRawGps()) getRawGps() else null

public val io.mavsdk.telemetry_server.TelemetryServerProto.PublishRawGpsRequestOrBuilder.gpsInfoOrNull: io.mavsdk.telemetry_server.TelemetryServerProto.GpsInfo?
  get() = if (hasGpsInfo()) getGpsInfo() else null


// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/log_streaming/log_streaming.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.log_streaming;

@kotlin.jvm.JvmName("-initializelogStreamingRawResponse")
public inline fun logStreamingRawResponse(block: io.mavsdk.log_streaming.LogStreamingRawResponseKt.Dsl.() -> kotlin.Unit): io.mavsdk.log_streaming.LogStreamingProto.LogStreamingRawResponse =
  io.mavsdk.log_streaming.LogStreamingRawResponseKt.Dsl._create(io.mavsdk.log_streaming.LogStreamingProto.LogStreamingRawResponse.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `mavsdk.rpc.log_streaming.LogStreamingRawResponse`
 */
public object LogStreamingRawResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.log_streaming.LogStreamingProto.LogStreamingRawResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.log_streaming.LogStreamingProto.LogStreamingRawResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.log_streaming.LogStreamingProto.LogStreamingRawResponse = _builder.build()

    /**
     * ```
     * A message containing logged data
     * ```
     *
     * `.mavsdk.rpc.log_streaming.LogStreamingRaw logging_raw = 1;`
     */
    public var loggingRaw: io.mavsdk.log_streaming.LogStreamingProto.LogStreamingRaw
      @JvmName("getLoggingRaw")
      get() = _builder.getLoggingRaw()
      @JvmName("setLoggingRaw")
      set(value) {
        _builder.setLoggingRaw(value)
      }
    /**
     * ```
     * A message containing logged data
     * ```
     *
     * `.mavsdk.rpc.log_streaming.LogStreamingRaw logging_raw = 1;`
     */
    public fun clearLoggingRaw() {
      _builder.clearLoggingRaw()
    }
    /**
     * ```
     * A message containing logged data
     * ```
     *
     * `.mavsdk.rpc.log_streaming.LogStreamingRaw logging_raw = 1;`
     * @return Whether the loggingRaw field is set.
     */
    public fun hasLoggingRaw(): kotlin.Boolean {
      return _builder.hasLoggingRaw()
    }
  }
}
public inline fun io.mavsdk.log_streaming.LogStreamingProto.LogStreamingRawResponse.copy(block: `io.mavsdk.log_streaming`.LogStreamingRawResponseKt.Dsl.() -> kotlin.Unit): io.mavsdk.log_streaming.LogStreamingProto.LogStreamingRawResponse =
  `io.mavsdk.log_streaming`.LogStreamingRawResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val io.mavsdk.log_streaming.LogStreamingProto.LogStreamingRawResponseOrBuilder.loggingRawOrNull: io.mavsdk.log_streaming.LogStreamingProto.LogStreamingRaw?
  get() = if (hasLoggingRaw()) getLoggingRaw() else null


// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/telemetry_server/telemetry_server.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.telemetry_server;

@kotlin.jvm.JvmName("-initializepositionVelocityNed")
public inline fun positionVelocityNed(block: io.mavsdk.telemetry_server.PositionVelocityNedKt.Dsl.() -> kotlin.Unit): io.mavsdk.telemetry_server.TelemetryServerProto.PositionVelocityNed =
  io.mavsdk.telemetry_server.PositionVelocityNedKt.Dsl._create(io.mavsdk.telemetry_server.TelemetryServerProto.PositionVelocityNed.newBuilder()).apply { block() }._build()
/**
 * ```
 * PositionVelocityNed message type.
 * ```
 *
 * Protobuf type `mavsdk.rpc.telemetry_server.PositionVelocityNed`
 */
public object PositionVelocityNedKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.telemetry_server.TelemetryServerProto.PositionVelocityNed.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.telemetry_server.TelemetryServerProto.PositionVelocityNed.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.telemetry_server.TelemetryServerProto.PositionVelocityNed = _builder.build()

    /**
     * ```
     * Position (NED)
     * ```
     *
     * `.mavsdk.rpc.telemetry_server.PositionNed position = 1;`
     */
    public var position: io.mavsdk.telemetry_server.TelemetryServerProto.PositionNed
      @JvmName("getPosition")
      get() = _builder.getPosition()
      @JvmName("setPosition")
      set(value) {
        _builder.setPosition(value)
      }
    /**
     * ```
     * Position (NED)
     * ```
     *
     * `.mavsdk.rpc.telemetry_server.PositionNed position = 1;`
     */
    public fun clearPosition() {
      _builder.clearPosition()
    }
    /**
     * ```
     * Position (NED)
     * ```
     *
     * `.mavsdk.rpc.telemetry_server.PositionNed position = 1;`
     * @return Whether the position field is set.
     */
    public fun hasPosition(): kotlin.Boolean {
      return _builder.hasPosition()
    }

    /**
     * ```
     * Velocity (NED)
     * ```
     *
     * `.mavsdk.rpc.telemetry_server.VelocityNed velocity = 2;`
     */
    public var velocity: io.mavsdk.telemetry_server.TelemetryServerProto.VelocityNed
      @JvmName("getVelocity")
      get() = _builder.getVelocity()
      @JvmName("setVelocity")
      set(value) {
        _builder.setVelocity(value)
      }
    /**
     * ```
     * Velocity (NED)
     * ```
     *
     * `.mavsdk.rpc.telemetry_server.VelocityNed velocity = 2;`
     */
    public fun clearVelocity() {
      _builder.clearVelocity()
    }
    /**
     * ```
     * Velocity (NED)
     * ```
     *
     * `.mavsdk.rpc.telemetry_server.VelocityNed velocity = 2;`
     * @return Whether the velocity field is set.
     */
    public fun hasVelocity(): kotlin.Boolean {
      return _builder.hasVelocity()
    }
  }
}
public inline fun io.mavsdk.telemetry_server.TelemetryServerProto.PositionVelocityNed.copy(block: `io.mavsdk.telemetry_server`.PositionVelocityNedKt.Dsl.() -> kotlin.Unit): io.mavsdk.telemetry_server.TelemetryServerProto.PositionVelocityNed =
  `io.mavsdk.telemetry_server`.PositionVelocityNedKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val io.mavsdk.telemetry_server.TelemetryServerProto.PositionVelocityNedOrBuilder.positionOrNull: io.mavsdk.telemetry_server.TelemetryServerProto.PositionNed?
  get() = if (hasPosition()) getPosition() else null

public val io.mavsdk.telemetry_server.TelemetryServerProto.PositionVelocityNedOrBuilder.velocityOrNull: io.mavsdk.telemetry_server.TelemetryServerProto.VelocityNed?
  get() = if (hasVelocity()) getVelocity() else null


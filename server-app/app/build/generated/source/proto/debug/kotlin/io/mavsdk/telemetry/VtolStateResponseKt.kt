// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/telemetry/telemetry.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.telemetry;

@kotlin.jvm.JvmName("-initializevtolStateResponse")
public inline fun vtolStateResponse(block: io.mavsdk.telemetry.VtolStateResponseKt.Dsl.() -> kotlin.Unit): io.mavsdk.telemetry.TelemetryProto.VtolStateResponse =
  io.mavsdk.telemetry.VtolStateResponseKt.Dsl._create(io.mavsdk.telemetry.TelemetryProto.VtolStateResponse.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `mavsdk.rpc.telemetry.VtolStateResponse`
 */
public object VtolStateResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.telemetry.TelemetryProto.VtolStateResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.telemetry.TelemetryProto.VtolStateResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.telemetry.TelemetryProto.VtolStateResponse = _builder.build()

    /**
     * ```
     * The next 'vtol' state
     * ```
     *
     * `.mavsdk.rpc.telemetry.VtolState vtol_state = 1;`
     */
    public var vtolState: io.mavsdk.telemetry.TelemetryProto.VtolState
      @JvmName("getVtolState")
      get() = _builder.getVtolState()
      @JvmName("setVtolState")
      set(value) {
        _builder.setVtolState(value)
      }
    public var vtolStateValue: kotlin.Int
      @JvmName("getVtolStateValue")
      get() = _builder.getVtolStateValue()
      @JvmName("setVtolStateValue")
      set(value) {
        _builder.setVtolStateValue(value)
      }
    /**
     * ```
     * The next 'vtol' state
     * ```
     *
     * `.mavsdk.rpc.telemetry.VtolState vtol_state = 1;`
     */
    public fun clearVtolState() {
      _builder.clearVtolState()
    }
  }
}
public inline fun io.mavsdk.telemetry.TelemetryProto.VtolStateResponse.copy(block: `io.mavsdk.telemetry`.VtolStateResponseKt.Dsl.() -> kotlin.Unit): io.mavsdk.telemetry.TelemetryProto.VtolStateResponse =
  `io.mavsdk.telemetry`.VtolStateResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()


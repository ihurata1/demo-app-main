// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/telemetry/telemetry.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.telemetry;

@kotlin.jvm.JvmName("-initializevelocityBody")
public inline fun velocityBody(block: io.mavsdk.telemetry.VelocityBodyKt.Dsl.() -> kotlin.Unit): io.mavsdk.telemetry.TelemetryProto.VelocityBody =
  io.mavsdk.telemetry.VelocityBodyKt.Dsl._create(io.mavsdk.telemetry.TelemetryProto.VelocityBody.newBuilder()).apply { block() }._build()
/**
 * ```
 * Velocity type, represented in the Body (X Y Z) frame and in metres/second.
 * ```
 *
 * Protobuf type `mavsdk.rpc.telemetry.VelocityBody`
 */
public object VelocityBodyKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.telemetry.TelemetryProto.VelocityBody.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.telemetry.TelemetryProto.VelocityBody.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.telemetry.TelemetryProto.VelocityBody = _builder.build()

    /**
     * <pre>
     * Velocity in X in metres/second
     * </pre>
     *
     * <code>float x_m_s = 1;</code>
     */
    public var xMS: kotlin.Float
      @JvmName("getXMS")
      get() = _builder.getXMS()
      @JvmName("setXMS")
      set(value) {
        _builder.setXMS(value)
      }
    /**
     * ```
     * Velocity in X in metres/second
     * ```
     *
     * `float x_m_s = 1;`
     */
    public fun clearXMS() {
      _builder.clearXMS()
    }

    /**
     * <pre>
     * Velocity in Y in metres/second
     * </pre>
     *
     * <code>float y_m_s = 2;</code>
     */
    public var yMS: kotlin.Float
      @JvmName("getYMS")
      get() = _builder.getYMS()
      @JvmName("setYMS")
      set(value) {
        _builder.setYMS(value)
      }
    /**
     * ```
     * Velocity in Y in metres/second
     * ```
     *
     * `float y_m_s = 2;`
     */
    public fun clearYMS() {
      _builder.clearYMS()
    }

    /**
     * <pre>
     * Velocity in Z in metres/second
     * </pre>
     *
     * <code>float z_m_s = 3;</code>
     */
    public var zMS: kotlin.Float
      @JvmName("getZMS")
      get() = _builder.getZMS()
      @JvmName("setZMS")
      set(value) {
        _builder.setZMS(value)
      }
    /**
     * ```
     * Velocity in Z in metres/second
     * ```
     *
     * `float z_m_s = 3;`
     */
    public fun clearZMS() {
      _builder.clearZMS()
    }
  }
}
public inline fun io.mavsdk.telemetry.TelemetryProto.VelocityBody.copy(block: `io.mavsdk.telemetry`.VelocityBodyKt.Dsl.() -> kotlin.Unit): io.mavsdk.telemetry.TelemetryProto.VelocityBody =
  `io.mavsdk.telemetry`.VelocityBodyKt.Dsl._create(this.toBuilder()).apply { block() }._build()


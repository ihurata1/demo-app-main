// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/gimbal/gimbal.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.gimbal;

@kotlin.jvm.JvmName("-initializesetPitchRateAndYawRateRequest")
public inline fun setPitchRateAndYawRateRequest(block: io.mavsdk.gimbal.SetPitchRateAndYawRateRequestKt.Dsl.() -> kotlin.Unit): io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateRequest =
  io.mavsdk.gimbal.SetPitchRateAndYawRateRequestKt.Dsl._create(io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `mavsdk.rpc.gimbal.SetPitchRateAndYawRateRequest`
 */
public object SetPitchRateAndYawRateRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateRequest = _builder.build()

    /**
     * <pre>
     * Angular rate around pitch axis in degrees/second (negative downward)
     * </pre>
     *
     * <code>float pitch_rate_deg_s = 1;</code>
     */
    public var pitchRateDegS: kotlin.Float
      @JvmName("getPitchRateDegS")
      get() = _builder.getPitchRateDegS()
      @JvmName("setPitchRateDegS")
      set(value) {
        _builder.setPitchRateDegS(value)
      }
    /**
     * ```
     * Angular rate around pitch axis in degrees/second (negative downward)
     * ```
     *
     * `float pitch_rate_deg_s = 1;`
     */
    public fun clearPitchRateDegS() {
      _builder.clearPitchRateDegS()
    }

    /**
     * <pre>
     * Angular rate around yaw axis in degrees/second (positive is clock-wise)
     * </pre>
     *
     * <code>float yaw_rate_deg_s = 2;</code>
     */
    public var yawRateDegS: kotlin.Float
      @JvmName("getYawRateDegS")
      get() = _builder.getYawRateDegS()
      @JvmName("setYawRateDegS")
      set(value) {
        _builder.setYawRateDegS(value)
      }
    /**
     * ```
     * Angular rate around yaw axis in degrees/second (positive is clock-wise)
     * ```
     *
     * `float yaw_rate_deg_s = 2;`
     */
    public fun clearYawRateDegS() {
      _builder.clearYawRateDegS()
    }
  }
}
public inline fun io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateRequest.copy(block: `io.mavsdk.gimbal`.SetPitchRateAndYawRateRequestKt.Dsl.() -> kotlin.Unit): io.mavsdk.gimbal.GimbalProto.SetPitchRateAndYawRateRequest =
  `io.mavsdk.gimbal`.SetPitchRateAndYawRateRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()


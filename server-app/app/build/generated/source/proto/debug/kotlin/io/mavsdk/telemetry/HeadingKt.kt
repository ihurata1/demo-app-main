// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/telemetry/telemetry.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.telemetry;

@kotlin.jvm.JvmName("-initializeheading")
public inline fun heading(block: io.mavsdk.telemetry.HeadingKt.Dsl.() -> kotlin.Unit): io.mavsdk.telemetry.TelemetryProto.Heading =
  io.mavsdk.telemetry.HeadingKt.Dsl._create(io.mavsdk.telemetry.TelemetryProto.Heading.newBuilder()).apply { block() }._build()
/**
 * ```
 * Heading type used for global position
 * ```
 *
 * Protobuf type `mavsdk.rpc.telemetry.Heading`
 */
public object HeadingKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.telemetry.TelemetryProto.Heading.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.telemetry.TelemetryProto.Heading.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.telemetry.TelemetryProto.Heading = _builder.build()

    /**
     * <pre>
     * Heading in degrees (range: 0 to +360)
     * </pre>
     *
     * <code>double heading_deg = 1 [(.mavsdk.options.default_value) = "NaN"];</code>
     */
    public var headingDeg: kotlin.Double
      @JvmName("getHeadingDeg")
      get() = _builder.getHeadingDeg()
      @JvmName("setHeadingDeg")
      set(value) {
        _builder.setHeadingDeg(value)
      }
    /**
     * ```
     * Heading in degrees (range: 0 to +360)
     * ```
     *
     * `double heading_deg = 1 [(.mavsdk.options.default_value) = "NaN"];`
     */
    public fun clearHeadingDeg() {
      _builder.clearHeadingDeg()
    }
  }
}
public inline fun io.mavsdk.telemetry.TelemetryProto.Heading.copy(block: `io.mavsdk.telemetry`.HeadingKt.Dsl.() -> kotlin.Unit): io.mavsdk.telemetry.TelemetryProto.Heading =
  `io.mavsdk.telemetry`.HeadingKt.Dsl._create(this.toBuilder()).apply { block() }._build()


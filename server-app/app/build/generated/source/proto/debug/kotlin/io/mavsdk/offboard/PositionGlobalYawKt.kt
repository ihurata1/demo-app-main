// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/offboard/offboard.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.offboard;

@kotlin.jvm.JvmName("-initializepositionGlobalYaw")
public inline fun positionGlobalYaw(block: io.mavsdk.offboard.PositionGlobalYawKt.Dsl.() -> kotlin.Unit): io.mavsdk.offboard.OffboardProto.PositionGlobalYaw =
  io.mavsdk.offboard.PositionGlobalYawKt.Dsl._create(io.mavsdk.offboard.OffboardProto.PositionGlobalYaw.newBuilder()).apply { block() }._build()
/**
 * ```
 * Type for position commands in Global (Latitude, Longitude, Altitude) coordinates and yaw.
 * ```
 *
 * Protobuf type `mavsdk.rpc.offboard.PositionGlobalYaw`
 */
public object PositionGlobalYawKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.offboard.OffboardProto.PositionGlobalYaw.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.offboard.OffboardProto.PositionGlobalYaw.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.offboard.OffboardProto.PositionGlobalYaw = _builder.build()

    /**
     * <pre>
     * Latitude (in degrees)
     * </pre>
     *
     * <code>double lat_deg = 1;</code>
     */
    public var latDeg: kotlin.Double
      @JvmName("getLatDeg")
      get() = _builder.getLatDeg()
      @JvmName("setLatDeg")
      set(value) {
        _builder.setLatDeg(value)
      }
    /**
     * ```
     * Latitude (in degrees)
     * ```
     *
     * `double lat_deg = 1;`
     */
    public fun clearLatDeg() {
      _builder.clearLatDeg()
    }

    /**
     * <pre>
     * Longitude (in degrees)
     * </pre>
     *
     * <code>double lon_deg = 2;</code>
     */
    public var lonDeg: kotlin.Double
      @JvmName("getLonDeg")
      get() = _builder.getLonDeg()
      @JvmName("setLonDeg")
      set(value) {
        _builder.setLonDeg(value)
      }
    /**
     * ```
     * Longitude (in degrees)
     * ```
     *
     * `double lon_deg = 2;`
     */
    public fun clearLonDeg() {
      _builder.clearLonDeg()
    }

    /**
     * <pre>
     * altitude (in metres)
     * </pre>
     *
     * <code>float alt_m = 3;</code>
     */
    public var altM: kotlin.Float
      @JvmName("getAltM")
      get() = _builder.getAltM()
      @JvmName("setAltM")
      set(value) {
        _builder.setAltM(value)
      }
    /**
     * ```
     * altitude (in metres)
     * ```
     *
     * `float alt_m = 3;`
     */
    public fun clearAltM() {
      _builder.clearAltM()
    }

    /**
     * <pre>
     * Yaw in degrees (0 North, positive is clock-wise looking from above)
     * </pre>
     *
     * <code>float yaw_deg = 4;</code>
     */
    public var yawDeg: kotlin.Float
      @JvmName("getYawDeg")
      get() = _builder.getYawDeg()
      @JvmName("setYawDeg")
      set(value) {
        _builder.setYawDeg(value)
      }
    /**
     * ```
     * Yaw in degrees (0 North, positive is clock-wise looking from above)
     * ```
     *
     * `float yaw_deg = 4;`
     */
    public fun clearYawDeg() {
      _builder.clearYawDeg()
    }

    /**
     * ```
     * altitude type for this position
     * ```
     *
     * `.mavsdk.rpc.offboard.PositionGlobalYaw.AltitudeType altitude_type = 5;`
     */
    public var altitudeType: io.mavsdk.offboard.OffboardProto.PositionGlobalYaw.AltitudeType
      @JvmName("getAltitudeType")
      get() = _builder.getAltitudeType()
      @JvmName("setAltitudeType")
      set(value) {
        _builder.setAltitudeType(value)
      }
    public var altitudeTypeValue: kotlin.Int
      @JvmName("getAltitudeTypeValue")
      get() = _builder.getAltitudeTypeValue()
      @JvmName("setAltitudeTypeValue")
      set(value) {
        _builder.setAltitudeTypeValue(value)
      }
    /**
     * ```
     * altitude type for this position
     * ```
     *
     * `.mavsdk.rpc.offboard.PositionGlobalYaw.AltitudeType altitude_type = 5;`
     */
    public fun clearAltitudeType() {
      _builder.clearAltitudeType()
    }
  }
}
public inline fun io.mavsdk.offboard.OffboardProto.PositionGlobalYaw.copy(block: `io.mavsdk.offboard`.PositionGlobalYawKt.Dsl.() -> kotlin.Unit): io.mavsdk.offboard.OffboardProto.PositionGlobalYaw =
  `io.mavsdk.offboard`.PositionGlobalYawKt.Dsl._create(this.toBuilder()).apply { block() }._build()


// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/ftp/ftp.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.ftp;

@kotlin.jvm.JvmName("-initializeareFilesIdenticalRequest")
public inline fun areFilesIdenticalRequest(block: io.mavsdk.ftp.AreFilesIdenticalRequestKt.Dsl.() -> kotlin.Unit): io.mavsdk.ftp.FtpProto.AreFilesIdenticalRequest =
  io.mavsdk.ftp.AreFilesIdenticalRequestKt.Dsl._create(io.mavsdk.ftp.FtpProto.AreFilesIdenticalRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `mavsdk.rpc.ftp.AreFilesIdenticalRequest`
 */
public object AreFilesIdenticalRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.ftp.FtpProto.AreFilesIdenticalRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.ftp.FtpProto.AreFilesIdenticalRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.ftp.FtpProto.AreFilesIdenticalRequest = _builder.build()

    /**
     * ```
     * The path of the local file.
     * ```
     *
     * `string local_file_path = 1;`
     */
    public var localFilePath: kotlin.String
      @JvmName("getLocalFilePath")
      get() = _builder.getLocalFilePath()
      @JvmName("setLocalFilePath")
      set(value) {
        _builder.setLocalFilePath(value)
      }
    /**
     * ```
     * The path of the local file.
     * ```
     *
     * `string local_file_path = 1;`
     */
    public fun clearLocalFilePath() {
      _builder.clearLocalFilePath()
    }

    /**
     * ```
     * The path of the remote file.
     * ```
     *
     * `string remote_file_path = 2;`
     */
    public var remoteFilePath: kotlin.String
      @JvmName("getRemoteFilePath")
      get() = _builder.getRemoteFilePath()
      @JvmName("setRemoteFilePath")
      set(value) {
        _builder.setRemoteFilePath(value)
      }
    /**
     * ```
     * The path of the remote file.
     * ```
     *
     * `string remote_file_path = 2;`
     */
    public fun clearRemoteFilePath() {
      _builder.clearRemoteFilePath()
    }
  }
}
public inline fun io.mavsdk.ftp.FtpProto.AreFilesIdenticalRequest.copy(block: `io.mavsdk.ftp`.AreFilesIdenticalRequestKt.Dsl.() -> kotlin.Unit): io.mavsdk.ftp.FtpProto.AreFilesIdenticalRequest =
  `io.mavsdk.ftp`.AreFilesIdenticalRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()


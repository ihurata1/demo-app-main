// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/offboard/offboard.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.offboard;

@kotlin.jvm.JvmName("-initializesetActuatorControlRequest")
public inline fun setActuatorControlRequest(block: io.mavsdk.offboard.SetActuatorControlRequestKt.Dsl.() -> kotlin.Unit): io.mavsdk.offboard.OffboardProto.SetActuatorControlRequest =
  io.mavsdk.offboard.SetActuatorControlRequestKt.Dsl._create(io.mavsdk.offboard.OffboardProto.SetActuatorControlRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `mavsdk.rpc.offboard.SetActuatorControlRequest`
 */
public object SetActuatorControlRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.offboard.OffboardProto.SetActuatorControlRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.offboard.OffboardProto.SetActuatorControlRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.offboard.OffboardProto.SetActuatorControlRequest = _builder.build()

    /**
     * ```
     * Actuator control values
     * ```
     *
     * `.mavsdk.rpc.offboard.ActuatorControl actuator_control = 1;`
     */
    public var actuatorControl: io.mavsdk.offboard.OffboardProto.ActuatorControl
      @JvmName("getActuatorControl")
      get() = _builder.getActuatorControl()
      @JvmName("setActuatorControl")
      set(value) {
        _builder.setActuatorControl(value)
      }
    /**
     * ```
     * Actuator control values
     * ```
     *
     * `.mavsdk.rpc.offboard.ActuatorControl actuator_control = 1;`
     */
    public fun clearActuatorControl() {
      _builder.clearActuatorControl()
    }
    /**
     * ```
     * Actuator control values
     * ```
     *
     * `.mavsdk.rpc.offboard.ActuatorControl actuator_control = 1;`
     * @return Whether the actuatorControl field is set.
     */
    public fun hasActuatorControl(): kotlin.Boolean {
      return _builder.hasActuatorControl()
    }
  }
}
public inline fun io.mavsdk.offboard.OffboardProto.SetActuatorControlRequest.copy(block: `io.mavsdk.offboard`.SetActuatorControlRequestKt.Dsl.() -> kotlin.Unit): io.mavsdk.offboard.OffboardProto.SetActuatorControlRequest =
  `io.mavsdk.offboard`.SetActuatorControlRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val io.mavsdk.offboard.OffboardProto.SetActuatorControlRequestOrBuilder.actuatorControlOrNull: io.mavsdk.offboard.OffboardProto.ActuatorControl?
  get() = if (hasActuatorControl()) getActuatorControl() else null


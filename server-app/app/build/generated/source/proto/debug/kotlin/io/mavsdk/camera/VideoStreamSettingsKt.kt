// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/camera/camera.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.camera;

@kotlin.jvm.JvmName("-initializevideoStreamSettings")
public inline fun videoStreamSettings(block: io.mavsdk.camera.VideoStreamSettingsKt.Dsl.() -> kotlin.Unit): io.mavsdk.camera.CameraProto.VideoStreamSettings =
  io.mavsdk.camera.VideoStreamSettingsKt.Dsl._create(io.mavsdk.camera.CameraProto.VideoStreamSettings.newBuilder()).apply { block() }._build()
/**
 * ```
 * Type for video stream settings.
 * ```
 *
 * Protobuf type `mavsdk.rpc.camera.VideoStreamSettings`
 */
public object VideoStreamSettingsKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.camera.CameraProto.VideoStreamSettings.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.camera.CameraProto.VideoStreamSettings.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.camera.CameraProto.VideoStreamSettings = _builder.build()

    /**
     * <pre>
     * Frames per second
     * </pre>
     *
     * <code>float frame_rate_hz = 1;</code>
     */
    public var frameRateHz: kotlin.Float
      @JvmName("getFrameRateHz")
      get() = _builder.getFrameRateHz()
      @JvmName("setFrameRateHz")
      set(value) {
        _builder.setFrameRateHz(value)
      }
    /**
     * ```
     * Frames per second
     * ```
     *
     * `float frame_rate_hz = 1;`
     */
    public fun clearFrameRateHz() {
      _builder.clearFrameRateHz()
    }

    /**
     * <pre>
     * Horizontal resolution (in pixels)
     * </pre>
     *
     * <code>uint32 horizontal_resolution_pix = 2;</code>
     */
    public var horizontalResolutionPix: kotlin.Int
      @JvmName("getHorizontalResolutionPix")
      get() = _builder.getHorizontalResolutionPix()
      @JvmName("setHorizontalResolutionPix")
      set(value) {
        _builder.setHorizontalResolutionPix(value)
      }
    /**
     * ```
     * Horizontal resolution (in pixels)
     * ```
     *
     * `uint32 horizontal_resolution_pix = 2;`
     */
    public fun clearHorizontalResolutionPix() {
      _builder.clearHorizontalResolutionPix()
    }

    /**
     * <pre>
     * Vertical resolution (in pixels)
     * </pre>
     *
     * <code>uint32 vertical_resolution_pix = 3;</code>
     */
    public var verticalResolutionPix: kotlin.Int
      @JvmName("getVerticalResolutionPix")
      get() = _builder.getVerticalResolutionPix()
      @JvmName("setVerticalResolutionPix")
      set(value) {
        _builder.setVerticalResolutionPix(value)
      }
    /**
     * ```
     * Vertical resolution (in pixels)
     * ```
     *
     * `uint32 vertical_resolution_pix = 3;`
     */
    public fun clearVerticalResolutionPix() {
      _builder.clearVerticalResolutionPix()
    }

    /**
     * <pre>
     * Bit rate (in bits per second)
     * </pre>
     *
     * <code>uint32 bit_rate_b_s = 4;</code>
     */
    public var bitRateBS: kotlin.Int
      @JvmName("getBitRateBS")
      get() = _builder.getBitRateBS()
      @JvmName("setBitRateBS")
      set(value) {
        _builder.setBitRateBS(value)
      }
    /**
     * ```
     * Bit rate (in bits per second)
     * ```
     *
     * `uint32 bit_rate_b_s = 4;`
     */
    public fun clearBitRateBS() {
      _builder.clearBitRateBS()
    }

    /**
     * <pre>
     * Video image rotation (clockwise, 0-359 degrees)
     * </pre>
     *
     * <code>uint32 rotation_deg = 5;</code>
     */
    public var rotationDeg: kotlin.Int
      @JvmName("getRotationDeg")
      get() = _builder.getRotationDeg()
      @JvmName("setRotationDeg")
      set(value) {
        _builder.setRotationDeg(value)
      }
    /**
     * ```
     * Video image rotation (clockwise, 0-359 degrees)
     * ```
     *
     * `uint32 rotation_deg = 5;`
     */
    public fun clearRotationDeg() {
      _builder.clearRotationDeg()
    }

    /**
     * ```
     * Video stream URI
     * ```
     *
     * `string uri = 6;`
     */
    public var uri: kotlin.String
      @JvmName("getUri")
      get() = _builder.getUri()
      @JvmName("setUri")
      set(value) {
        _builder.setUri(value)
      }
    /**
     * ```
     * Video stream URI
     * ```
     *
     * `string uri = 6;`
     */
    public fun clearUri() {
      _builder.clearUri()
    }

    /**
     * <pre>
     * Horizontal fov in degrees
     * </pre>
     *
     * <code>float horizontal_fov_deg = 7;</code>
     */
    public var horizontalFovDeg: kotlin.Float
      @JvmName("getHorizontalFovDeg")
      get() = _builder.getHorizontalFovDeg()
      @JvmName("setHorizontalFovDeg")
      set(value) {
        _builder.setHorizontalFovDeg(value)
      }
    /**
     * ```
     * Horizontal fov in degrees
     * ```
     *
     * `float horizontal_fov_deg = 7;`
     */
    public fun clearHorizontalFovDeg() {
      _builder.clearHorizontalFovDeg()
    }
  }
}
public inline fun io.mavsdk.camera.CameraProto.VideoStreamSettings.copy(block: `io.mavsdk.camera`.VideoStreamSettingsKt.Dsl.() -> kotlin.Unit): io.mavsdk.camera.CameraProto.VideoStreamSettings =
  `io.mavsdk.camera`.VideoStreamSettingsKt.Dsl._create(this.toBuilder()).apply { block() }._build()


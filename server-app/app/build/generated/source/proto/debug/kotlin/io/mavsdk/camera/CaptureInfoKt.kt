// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/camera/camera.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.camera;

@kotlin.jvm.JvmName("-initializecaptureInfo")
public inline fun captureInfo(block: io.mavsdk.camera.CaptureInfoKt.Dsl.() -> kotlin.Unit): io.mavsdk.camera.CameraProto.CaptureInfo =
  io.mavsdk.camera.CaptureInfoKt.Dsl._create(io.mavsdk.camera.CameraProto.CaptureInfo.newBuilder()).apply { block() }._build()
/**
 * ```
 * Information about a picture just captured.
 * ```
 *
 * Protobuf type `mavsdk.rpc.camera.CaptureInfo`
 */
public object CaptureInfoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.camera.CameraProto.CaptureInfo.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.camera.CameraProto.CaptureInfo.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.camera.CameraProto.CaptureInfo = _builder.build()

    /**
     * ```
     * Location where the picture was taken
     * ```
     *
     * `.mavsdk.rpc.camera.Position position = 1;`
     */
    public var position: io.mavsdk.camera.CameraProto.Position
      @JvmName("getPosition")
      get() = _builder.getPosition()
      @JvmName("setPosition")
      set(value) {
        _builder.setPosition(value)
      }
    /**
     * ```
     * Location where the picture was taken
     * ```
     *
     * `.mavsdk.rpc.camera.Position position = 1;`
     */
    public fun clearPosition() {
      _builder.clearPosition()
    }
    /**
     * ```
     * Location where the picture was taken
     * ```
     *
     * `.mavsdk.rpc.camera.Position position = 1;`
     * @return Whether the position field is set.
     */
    public fun hasPosition(): kotlin.Boolean {
      return _builder.hasPosition()
    }

    /**
     * ```
     * Attitude of the camera when the picture was taken (quaternion)
     * ```
     *
     * `.mavsdk.rpc.camera.Quaternion attitude_quaternion = 2;`
     */
    public var attitudeQuaternion: io.mavsdk.camera.CameraProto.Quaternion
      @JvmName("getAttitudeQuaternion")
      get() = _builder.getAttitudeQuaternion()
      @JvmName("setAttitudeQuaternion")
      set(value) {
        _builder.setAttitudeQuaternion(value)
      }
    /**
     * ```
     * Attitude of the camera when the picture was taken (quaternion)
     * ```
     *
     * `.mavsdk.rpc.camera.Quaternion attitude_quaternion = 2;`
     */
    public fun clearAttitudeQuaternion() {
      _builder.clearAttitudeQuaternion()
    }
    /**
     * ```
     * Attitude of the camera when the picture was taken (quaternion)
     * ```
     *
     * `.mavsdk.rpc.camera.Quaternion attitude_quaternion = 2;`
     * @return Whether the attitudeQuaternion field is set.
     */
    public fun hasAttitudeQuaternion(): kotlin.Boolean {
      return _builder.hasAttitudeQuaternion()
    }

    /**
     * ```
     * Attitude of the camera when the picture was taken (euler angle)
     * ```
     *
     * `.mavsdk.rpc.camera.EulerAngle attitude_euler_angle = 3;`
     */
    public var attitudeEulerAngle: io.mavsdk.camera.CameraProto.EulerAngle
      @JvmName("getAttitudeEulerAngle")
      get() = _builder.getAttitudeEulerAngle()
      @JvmName("setAttitudeEulerAngle")
      set(value) {
        _builder.setAttitudeEulerAngle(value)
      }
    /**
     * ```
     * Attitude of the camera when the picture was taken (euler angle)
     * ```
     *
     * `.mavsdk.rpc.camera.EulerAngle attitude_euler_angle = 3;`
     */
    public fun clearAttitudeEulerAngle() {
      _builder.clearAttitudeEulerAngle()
    }
    /**
     * ```
     * Attitude of the camera when the picture was taken (euler angle)
     * ```
     *
     * `.mavsdk.rpc.camera.EulerAngle attitude_euler_angle = 3;`
     * @return Whether the attitudeEulerAngle field is set.
     */
    public fun hasAttitudeEulerAngle(): kotlin.Boolean {
      return _builder.hasAttitudeEulerAngle()
    }

    /**
     * <pre>
     * Timestamp in UTC (since UNIX epoch) in microseconds
     * </pre>
     *
     * <code>uint64 time_utc_us = 4;</code>
     */
    public var timeUtcUs: kotlin.Long
      @JvmName("getTimeUtcUs")
      get() = _builder.getTimeUtcUs()
      @JvmName("setTimeUtcUs")
      set(value) {
        _builder.setTimeUtcUs(value)
      }
    /**
     * ```
     * Timestamp in UTC (since UNIX epoch) in microseconds
     * ```
     *
     * `uint64 time_utc_us = 4;`
     */
    public fun clearTimeUtcUs() {
      _builder.clearTimeUtcUs()
    }

    /**
     * <pre>
     * True if the capture was successful
     * </pre>
     *
     * <code>bool is_success = 5;</code>
     */
    public var isSuccess: kotlin.Boolean
      @JvmName("getIsSuccess")
      get() = _builder.getIsSuccess()
      @JvmName("setIsSuccess")
      set(value) {
        _builder.setIsSuccess(value)
      }
    /**
     * ```
     * True if the capture was successful
     * ```
     *
     * `bool is_success = 5;`
     */
    public fun clearIsSuccess() {
      _builder.clearIsSuccess()
    }

    /**
     * <pre>
     * Zero-based index of this image since vehicle was armed
     * </pre>
     *
     * <code>int32 index = 6;</code>
     */
    public var index: kotlin.Int
      @JvmName("getIndex")
      get() = _builder.getIndex()
      @JvmName("setIndex")
      set(value) {
        _builder.setIndex(value)
      }
    /**
     * ```
     * Zero-based index of this image since vehicle was armed
     * ```
     *
     * `int32 index = 6;`
     */
    public fun clearIndex() {
      _builder.clearIndex()
    }

    /**
     * ```
     * Download URL of this image
     * ```
     *
     * `string file_url = 7;`
     */
    public var fileUrl: kotlin.String
      @JvmName("getFileUrl")
      get() = _builder.getFileUrl()
      @JvmName("setFileUrl")
      set(value) {
        _builder.setFileUrl(value)
      }
    /**
     * ```
     * Download URL of this image
     * ```
     *
     * `string file_url = 7;`
     */
    public fun clearFileUrl() {
      _builder.clearFileUrl()
    }
  }
}
public inline fun io.mavsdk.camera.CameraProto.CaptureInfo.copy(block: `io.mavsdk.camera`.CaptureInfoKt.Dsl.() -> kotlin.Unit): io.mavsdk.camera.CameraProto.CaptureInfo =
  `io.mavsdk.camera`.CaptureInfoKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val io.mavsdk.camera.CameraProto.CaptureInfoOrBuilder.positionOrNull: io.mavsdk.camera.CameraProto.Position?
  get() = if (hasPosition()) getPosition() else null

public val io.mavsdk.camera.CameraProto.CaptureInfoOrBuilder.attitudeQuaternionOrNull: io.mavsdk.camera.CameraProto.Quaternion?
  get() = if (hasAttitudeQuaternion()) getAttitudeQuaternion() else null

public val io.mavsdk.camera.CameraProto.CaptureInfoOrBuilder.attitudeEulerAngleOrNull: io.mavsdk.camera.CameraProto.EulerAngle?
  get() = if (hasAttitudeEulerAngle()) getAttitudeEulerAngle() else null


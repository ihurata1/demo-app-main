// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/info/info.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.info;

@kotlin.jvm.JvmName("-initializeidentification")
public inline fun identification(block: io.mavsdk.info.IdentificationKt.Dsl.() -> kotlin.Unit): io.mavsdk.info.InfoProto.Identification =
  io.mavsdk.info.IdentificationKt.Dsl._create(io.mavsdk.info.InfoProto.Identification.newBuilder()).apply { block() }._build()
/**
 * ```
 * System identification.
 * ```
 *
 * Protobuf type `mavsdk.rpc.info.Identification`
 */
public object IdentificationKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.info.InfoProto.Identification.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.info.InfoProto.Identification.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.info.InfoProto.Identification = _builder.build()

    /**
     * ```
     * UID of the hardware. This refers to uid2 of MAVLink. If the system does not support uid2 yet, this is all zeros.
     * ```
     *
     * `string hardware_uid = 1;`
     */
    public var hardwareUid: kotlin.String
      @JvmName("getHardwareUid")
      get() = _builder.getHardwareUid()
      @JvmName("setHardwareUid")
      set(value) {
        _builder.setHardwareUid(value)
      }
    /**
     * ```
     * UID of the hardware. This refers to uid2 of MAVLink. If the system does not support uid2 yet, this is all zeros.
     * ```
     *
     * `string hardware_uid = 1;`
     */
    public fun clearHardwareUid() {
      _builder.clearHardwareUid()
    }

    /**
     * <pre>
     * Legacy UID of the hardware, referred to as uid in MAVLink (formerly exposed during system discovery as UUID).
     * </pre>
     *
     * <code>uint64 legacy_uid = 2;</code>
     */
    public var legacyUid: kotlin.Long
      @JvmName("getLegacyUid")
      get() = _builder.getLegacyUid()
      @JvmName("setLegacyUid")
      set(value) {
        _builder.setLegacyUid(value)
      }
    /**
     * ```
     * Legacy UID of the hardware, referred to as uid in MAVLink (formerly exposed during system discovery as UUID).
     * ```
     *
     * `uint64 legacy_uid = 2;`
     */
    public fun clearLegacyUid() {
      _builder.clearLegacyUid()
    }
  }
}
public inline fun io.mavsdk.info.InfoProto.Identification.copy(block: `io.mavsdk.info`.IdentificationKt.Dsl.() -> kotlin.Unit): io.mavsdk.info.InfoProto.Identification =
  `io.mavsdk.info`.IdentificationKt.Dsl._create(this.toBuilder()).apply { block() }._build()


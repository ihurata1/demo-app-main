// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/camera_server/camera_server.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.camera_server;

@kotlin.jvm.JvmName("-initializerespondTrackingOffCommandRequest")
public inline fun respondTrackingOffCommandRequest(block: io.mavsdk.camera_server.RespondTrackingOffCommandRequestKt.Dsl.() -> kotlin.Unit): io.mavsdk.camera_server.CameraServerProto.RespondTrackingOffCommandRequest =
  io.mavsdk.camera_server.RespondTrackingOffCommandRequestKt.Dsl._create(io.mavsdk.camera_server.CameraServerProto.RespondTrackingOffCommandRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `mavsdk.rpc.camera_server.RespondTrackingOffCommandRequest`
 */
public object RespondTrackingOffCommandRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.camera_server.CameraServerProto.RespondTrackingOffCommandRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.camera_server.CameraServerProto.RespondTrackingOffCommandRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.camera_server.CameraServerProto.RespondTrackingOffCommandRequest = _builder.build()

    /**
     * ```
     * the feedback
     * ```
     *
     * `.mavsdk.rpc.camera_server.CameraFeedback stop_video_feedback = 1;`
     */
    public var stopVideoFeedback: io.mavsdk.camera_server.CameraServerProto.CameraFeedback
      @JvmName("getStopVideoFeedback")
      get() = _builder.getStopVideoFeedback()
      @JvmName("setStopVideoFeedback")
      set(value) {
        _builder.setStopVideoFeedback(value)
      }
    public var stopVideoFeedbackValue: kotlin.Int
      @JvmName("getStopVideoFeedbackValue")
      get() = _builder.getStopVideoFeedbackValue()
      @JvmName("setStopVideoFeedbackValue")
      set(value) {
        _builder.setStopVideoFeedbackValue(value)
      }
    /**
     * ```
     * the feedback
     * ```
     *
     * `.mavsdk.rpc.camera_server.CameraFeedback stop_video_feedback = 1;`
     */
    public fun clearStopVideoFeedback() {
      _builder.clearStopVideoFeedback()
    }
  }
}
public inline fun io.mavsdk.camera_server.CameraServerProto.RespondTrackingOffCommandRequest.copy(block: `io.mavsdk.camera_server`.RespondTrackingOffCommandRequestKt.Dsl.() -> kotlin.Unit): io.mavsdk.camera_server.CameraServerProto.RespondTrackingOffCommandRequest =
  `io.mavsdk.camera_server`.RespondTrackingOffCommandRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()


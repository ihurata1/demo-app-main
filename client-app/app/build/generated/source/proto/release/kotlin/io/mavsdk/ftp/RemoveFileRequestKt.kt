// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/ftp/ftp.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.ftp;

@kotlin.jvm.JvmName("-initializeremoveFileRequest")
public inline fun removeFileRequest(block: io.mavsdk.ftp.RemoveFileRequestKt.Dsl.() -> kotlin.Unit): io.mavsdk.ftp.FtpProto.RemoveFileRequest =
  io.mavsdk.ftp.RemoveFileRequestKt.Dsl._create(io.mavsdk.ftp.FtpProto.RemoveFileRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `mavsdk.rpc.ftp.RemoveFileRequest`
 */
public object RemoveFileRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.ftp.FtpProto.RemoveFileRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.ftp.FtpProto.RemoveFileRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.ftp.FtpProto.RemoveFileRequest = _builder.build()

    /**
     * ```
     * The path of the remote file to remove.
     * ```
     *
     * `string remote_file_path = 1;`
     */
    public var remoteFilePath: kotlin.String
      @JvmName("getRemoteFilePath")
      get() = _builder.getRemoteFilePath()
      @JvmName("setRemoteFilePath")
      set(value) {
        _builder.setRemoteFilePath(value)
      }
    /**
     * ```
     * The path of the remote file to remove.
     * ```
     *
     * `string remote_file_path = 1;`
     */
    public fun clearRemoteFilePath() {
      _builder.clearRemoteFilePath()
    }
  }
}
public inline fun io.mavsdk.ftp.FtpProto.RemoveFileRequest.copy(block: `io.mavsdk.ftp`.RemoveFileRequestKt.Dsl.() -> kotlin.Unit): io.mavsdk.ftp.FtpProto.RemoveFileRequest =
  `io.mavsdk.ftp`.RemoveFileRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()


// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/arm_authorizer_server/arm_authorizer_server.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.arm_authorizer;

@kotlin.jvm.JvmName("-initializerejectArmAuthorizationResponse")
public inline fun rejectArmAuthorizationResponse(block: io.mavsdk.arm_authorizer.RejectArmAuthorizationResponseKt.Dsl.() -> kotlin.Unit): io.mavsdk.arm_authorizer.ArmAuthorizerServerProto.RejectArmAuthorizationResponse =
  io.mavsdk.arm_authorizer.RejectArmAuthorizationResponseKt.Dsl._create(io.mavsdk.arm_authorizer.ArmAuthorizerServerProto.RejectArmAuthorizationResponse.newBuilder()).apply { block() }._build()
/**
 * ```
 * Result type
 * ```
 *
 * Protobuf type `mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationResponse`
 */
public object RejectArmAuthorizationResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.arm_authorizer.ArmAuthorizerServerProto.RejectArmAuthorizationResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.arm_authorizer.ArmAuthorizerServerProto.RejectArmAuthorizationResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.arm_authorizer.ArmAuthorizerServerProto.RejectArmAuthorizationResponse = _builder.build()

    /**
     * ```
     * Result enum value
     * ```
     *
     * `.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult arm_authorizer_server_result = 1;`
     */
    public var armAuthorizerServerResult: io.mavsdk.arm_authorizer.ArmAuthorizerServerProto.ArmAuthorizerServerResult
      @JvmName("getArmAuthorizerServerResult")
      get() = _builder.getArmAuthorizerServerResult()
      @JvmName("setArmAuthorizerServerResult")
      set(value) {
        _builder.setArmAuthorizerServerResult(value)
      }
    /**
     * ```
     * Result enum value
     * ```
     *
     * `.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult arm_authorizer_server_result = 1;`
     */
    public fun clearArmAuthorizerServerResult() {
      _builder.clearArmAuthorizerServerResult()
    }
    /**
     * ```
     * Result enum value
     * ```
     *
     * `.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult arm_authorizer_server_result = 1;`
     * @return Whether the armAuthorizerServerResult field is set.
     */
    public fun hasArmAuthorizerServerResult(): kotlin.Boolean {
      return _builder.hasArmAuthorizerServerResult()
    }
  }
}
public inline fun io.mavsdk.arm_authorizer.ArmAuthorizerServerProto.RejectArmAuthorizationResponse.copy(block: `io.mavsdk.arm_authorizer`.RejectArmAuthorizationResponseKt.Dsl.() -> kotlin.Unit): io.mavsdk.arm_authorizer.ArmAuthorizerServerProto.RejectArmAuthorizationResponse =
  `io.mavsdk.arm_authorizer`.RejectArmAuthorizationResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val io.mavsdk.arm_authorizer.ArmAuthorizerServerProto.RejectArmAuthorizationResponseOrBuilder.armAuthorizerServerResultOrNull: io.mavsdk.arm_authorizer.ArmAuthorizerServerProto.ArmAuthorizerServerResult?
  get() = if (hasArmAuthorizerServerResult()) getArmAuthorizerServerResult() else null


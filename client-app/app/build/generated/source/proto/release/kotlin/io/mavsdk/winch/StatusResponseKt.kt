// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/winch/winch.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.winch;

@kotlin.jvm.JvmName("-initializestatusResponse")
public inline fun statusResponse(block: io.mavsdk.winch.StatusResponseKt.Dsl.() -> kotlin.Unit): io.mavsdk.winch.WinchProto.StatusResponse =
  io.mavsdk.winch.StatusResponseKt.Dsl._create(io.mavsdk.winch.WinchProto.StatusResponse.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `mavsdk.rpc.winch.StatusResponse`
 */
public object StatusResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.winch.WinchProto.StatusResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.winch.WinchProto.StatusResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.winch.WinchProto.StatusResponse = _builder.build()

    /**
     * ```
     * The next 'winch status' state
     * ```
     *
     * `.mavsdk.rpc.winch.Status status = 1;`
     */
    public var status: io.mavsdk.winch.WinchProto.Status
      @JvmName("getStatus")
      get() = _builder.getStatus()
      @JvmName("setStatus")
      set(value) {
        _builder.setStatus(value)
      }
    /**
     * ```
     * The next 'winch status' state
     * ```
     *
     * `.mavsdk.rpc.winch.Status status = 1;`
     */
    public fun clearStatus() {
      _builder.clearStatus()
    }
    /**
     * ```
     * The next 'winch status' state
     * ```
     *
     * `.mavsdk.rpc.winch.Status status = 1;`
     * @return Whether the status field is set.
     */
    public fun hasStatus(): kotlin.Boolean {
      return _builder.hasStatus()
    }
  }
}
public inline fun io.mavsdk.winch.WinchProto.StatusResponse.copy(block: `io.mavsdk.winch`.StatusResponseKt.Dsl.() -> kotlin.Unit): io.mavsdk.winch.WinchProto.StatusResponse =
  `io.mavsdk.winch`.StatusResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val io.mavsdk.winch.WinchProto.StatusResponseOrBuilder.statusOrNull: io.mavsdk.winch.WinchProto.Status?
  get() = if (hasStatus()) getStatus() else null


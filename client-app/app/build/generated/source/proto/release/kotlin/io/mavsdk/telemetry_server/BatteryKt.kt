// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/telemetry_server/telemetry_server.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.telemetry_server;

@kotlin.jvm.JvmName("-initializebattery")
public inline fun battery(block: io.mavsdk.telemetry_server.BatteryKt.Dsl.() -> kotlin.Unit): io.mavsdk.telemetry_server.TelemetryServerProto.Battery =
  io.mavsdk.telemetry_server.BatteryKt.Dsl._create(io.mavsdk.telemetry_server.TelemetryServerProto.Battery.newBuilder()).apply { block() }._build()
/**
 * ```
 * Battery type.
 * ```
 *
 * Protobuf type `mavsdk.rpc.telemetry_server.Battery`
 */
public object BatteryKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.telemetry_server.TelemetryServerProto.Battery.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.telemetry_server.TelemetryServerProto.Battery.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.telemetry_server.TelemetryServerProto.Battery = _builder.build()

    /**
     * <pre>
     * Voltage in volts
     * </pre>
     *
     * <code>float voltage_v = 1 [(.mavsdk.options.default_value) = "NaN"];</code>
     */
    public var voltageV: kotlin.Float
      @JvmName("getVoltageV")
      get() = _builder.getVoltageV()
      @JvmName("setVoltageV")
      set(value) {
        _builder.setVoltageV(value)
      }
    /**
     * ```
     * Voltage in volts
     * ```
     *
     * `float voltage_v = 1 [(.mavsdk.options.default_value) = "NaN"];`
     */
    public fun clearVoltageV() {
      _builder.clearVoltageV()
    }

    /**
     * <pre>
     * Estimated battery remaining (range: 0.0 to 1.0)
     * </pre>
     *
     * <code>float remaining_percent = 2 [(.mavsdk.options.default_value) = "NaN"];</code>
     */
    public var remainingPercent: kotlin.Float
      @JvmName("getRemainingPercent")
      get() = _builder.getRemainingPercent()
      @JvmName("setRemainingPercent")
      set(value) {
        _builder.setRemainingPercent(value)
      }
    /**
     * ```
     * Estimated battery remaining (range: 0.0 to 1.0)
     * ```
     *
     * `float remaining_percent = 2 [(.mavsdk.options.default_value) = "NaN"];`
     */
    public fun clearRemainingPercent() {
      _builder.clearRemainingPercent()
    }
  }
}
public inline fun io.mavsdk.telemetry_server.TelemetryServerProto.Battery.copy(block: `io.mavsdk.telemetry_server`.BatteryKt.Dsl.() -> kotlin.Unit): io.mavsdk.telemetry_server.TelemetryServerProto.Battery =
  `io.mavsdk.telemetry_server`.BatteryKt.Dsl._create(this.toBuilder()).apply { block() }._build()


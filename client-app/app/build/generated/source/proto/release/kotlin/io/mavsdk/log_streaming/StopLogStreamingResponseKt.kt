// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/log_streaming/log_streaming.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.log_streaming;

@kotlin.jvm.JvmName("-initializestopLogStreamingResponse")
public inline fun stopLogStreamingResponse(block: io.mavsdk.log_streaming.StopLogStreamingResponseKt.Dsl.() -> kotlin.Unit): io.mavsdk.log_streaming.LogStreamingProto.StopLogStreamingResponse =
  io.mavsdk.log_streaming.StopLogStreamingResponseKt.Dsl._create(io.mavsdk.log_streaming.LogStreamingProto.StopLogStreamingResponse.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `mavsdk.rpc.log_streaming.StopLogStreamingResponse`
 */
public object StopLogStreamingResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.log_streaming.LogStreamingProto.StopLogStreamingResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.log_streaming.LogStreamingProto.StopLogStreamingResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.log_streaming.LogStreamingProto.StopLogStreamingResponse = _builder.build()

    /**
     * `.mavsdk.rpc.log_streaming.LogStreamingResult log_streaming_result = 1;`
     */
    public var logStreamingResult: io.mavsdk.log_streaming.LogStreamingProto.LogStreamingResult
      @JvmName("getLogStreamingResult")
      get() = _builder.getLogStreamingResult()
      @JvmName("setLogStreamingResult")
      set(value) {
        _builder.setLogStreamingResult(value)
      }
    /**
     * `.mavsdk.rpc.log_streaming.LogStreamingResult log_streaming_result = 1;`
     */
    public fun clearLogStreamingResult() {
      _builder.clearLogStreamingResult()
    }
    /**
     * `.mavsdk.rpc.log_streaming.LogStreamingResult log_streaming_result = 1;`
     * @return Whether the logStreamingResult field is set.
     */
    public fun hasLogStreamingResult(): kotlin.Boolean {
      return _builder.hasLogStreamingResult()
    }
  }
}
public inline fun io.mavsdk.log_streaming.LogStreamingProto.StopLogStreamingResponse.copy(block: `io.mavsdk.log_streaming`.StopLogStreamingResponseKt.Dsl.() -> kotlin.Unit): io.mavsdk.log_streaming.LogStreamingProto.StopLogStreamingResponse =
  `io.mavsdk.log_streaming`.StopLogStreamingResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val io.mavsdk.log_streaming.LogStreamingProto.StopLogStreamingResponseOrBuilder.logStreamingResultOrNull: io.mavsdk.log_streaming.LogStreamingProto.LogStreamingResult?
  get() = if (hasLogStreamingResult()) getLogStreamingResult() else null


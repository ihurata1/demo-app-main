// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/camera/camera.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.camera;

@kotlin.jvm.JvmName("-initializesetting")
public inline fun setting(block: io.mavsdk.camera.SettingKt.Dsl.() -> kotlin.Unit): io.mavsdk.camera.CameraProto.Setting =
  io.mavsdk.camera.SettingKt.Dsl._create(io.mavsdk.camera.CameraProto.Setting.newBuilder()).apply { block() }._build()
/**
 * ```
 * Type to represent a setting with a selected option.
 * ```
 *
 * Protobuf type `mavsdk.rpc.camera.Setting`
 */
public object SettingKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.camera.CameraProto.Setting.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.camera.CameraProto.Setting.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.camera.CameraProto.Setting = _builder.build()

    /**
     * ```
     * Name of a setting (machine readable)
     * ```
     *
     * `string setting_id = 1;`
     */
    public var settingId: kotlin.String
      @JvmName("getSettingId")
      get() = _builder.getSettingId()
      @JvmName("setSettingId")
      set(value) {
        _builder.setSettingId(value)
      }
    /**
     * ```
     * Name of a setting (machine readable)
     * ```
     *
     * `string setting_id = 1;`
     */
    public fun clearSettingId() {
      _builder.clearSettingId()
    }

    /**
     * ```
     * Description of the setting (human readable). This field is meant to be read from the drone, ignore it when setting.
     * ```
     *
     * `string setting_description = 2;`
     */
    public var settingDescription: kotlin.String
      @JvmName("getSettingDescription")
      get() = _builder.getSettingDescription()
      @JvmName("setSettingDescription")
      set(value) {
        _builder.setSettingDescription(value)
      }
    /**
     * ```
     * Description of the setting (human readable). This field is meant to be read from the drone, ignore it when setting.
     * ```
     *
     * `string setting_description = 2;`
     */
    public fun clearSettingDescription() {
      _builder.clearSettingDescription()
    }

    /**
     * ```
     * Selected option
     * ```
     *
     * `.mavsdk.rpc.camera.Option option = 3;`
     */
    public var option: io.mavsdk.camera.CameraProto.Option
      @JvmName("getOption")
      get() = _builder.getOption()
      @JvmName("setOption")
      set(value) {
        _builder.setOption(value)
      }
    /**
     * ```
     * Selected option
     * ```
     *
     * `.mavsdk.rpc.camera.Option option = 3;`
     */
    public fun clearOption() {
      _builder.clearOption()
    }
    /**
     * ```
     * Selected option
     * ```
     *
     * `.mavsdk.rpc.camera.Option option = 3;`
     * @return Whether the option field is set.
     */
    public fun hasOption(): kotlin.Boolean {
      return _builder.hasOption()
    }

    /**
     * <pre>
     * If option is given as a range. This field is meant to be read from the drone, ignore it when setting.
     * </pre>
     *
     * <code>bool is_range = 4;</code>
     */
    public var isRange: kotlin.Boolean
      @JvmName("getIsRange")
      get() = _builder.getIsRange()
      @JvmName("setIsRange")
      set(value) {
        _builder.setIsRange(value)
      }
    /**
     * ```
     * If option is given as a range. This field is meant to be read from the drone, ignore it when setting.
     * ```
     *
     * `bool is_range = 4;`
     */
    public fun clearIsRange() {
      _builder.clearIsRange()
    }
  }
}
public inline fun io.mavsdk.camera.CameraProto.Setting.copy(block: `io.mavsdk.camera`.SettingKt.Dsl.() -> kotlin.Unit): io.mavsdk.camera.CameraProto.Setting =
  `io.mavsdk.camera`.SettingKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val io.mavsdk.camera.CameraProto.SettingOrBuilder.optionOrNull: io.mavsdk.camera.CameraProto.Option?
  get() = if (hasOption()) getOption() else null


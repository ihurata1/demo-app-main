// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/mission_raw_server/mission_raw_server.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.mission_raw_server;

@kotlin.jvm.JvmName("-initializeincomingMissionResponse")
public inline fun incomingMissionResponse(block: io.mavsdk.mission_raw_server.IncomingMissionResponseKt.Dsl.() -> kotlin.Unit): io.mavsdk.mission_raw_server.MissionRawServerProto.IncomingMissionResponse =
  io.mavsdk.mission_raw_server.IncomingMissionResponseKt.Dsl._create(io.mavsdk.mission_raw_server.MissionRawServerProto.IncomingMissionResponse.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `mavsdk.rpc.mission_raw_server.IncomingMissionResponse`
 */
public object IncomingMissionResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.mission_raw_server.MissionRawServerProto.IncomingMissionResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.mission_raw_server.MissionRawServerProto.IncomingMissionResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.mission_raw_server.MissionRawServerProto.IncomingMissionResponse = _builder.build()

    /**
     * `.mavsdk.rpc.mission_raw_server.MissionRawServerResult mission_raw_server_result = 1;`
     */
    public var missionRawServerResult: io.mavsdk.mission_raw_server.MissionRawServerProto.MissionRawServerResult
      @JvmName("getMissionRawServerResult")
      get() = _builder.getMissionRawServerResult()
      @JvmName("setMissionRawServerResult")
      set(value) {
        _builder.setMissionRawServerResult(value)
      }
    /**
     * `.mavsdk.rpc.mission_raw_server.MissionRawServerResult mission_raw_server_result = 1;`
     */
    public fun clearMissionRawServerResult() {
      _builder.clearMissionRawServerResult()
    }
    /**
     * `.mavsdk.rpc.mission_raw_server.MissionRawServerResult mission_raw_server_result = 1;`
     * @return Whether the missionRawServerResult field is set.
     */
    public fun hasMissionRawServerResult(): kotlin.Boolean {
      return _builder.hasMissionRawServerResult()
    }

    /**
     * ```
     * The mission plan
     * ```
     *
     * `.mavsdk.rpc.mission_raw_server.MissionPlan mission_plan = 2;`
     */
    public var missionPlan: io.mavsdk.mission_raw_server.MissionRawServerProto.MissionPlan
      @JvmName("getMissionPlan")
      get() = _builder.getMissionPlan()
      @JvmName("setMissionPlan")
      set(value) {
        _builder.setMissionPlan(value)
      }
    /**
     * ```
     * The mission plan
     * ```
     *
     * `.mavsdk.rpc.mission_raw_server.MissionPlan mission_plan = 2;`
     */
    public fun clearMissionPlan() {
      _builder.clearMissionPlan()
    }
    /**
     * ```
     * The mission plan
     * ```
     *
     * `.mavsdk.rpc.mission_raw_server.MissionPlan mission_plan = 2;`
     * @return Whether the missionPlan field is set.
     */
    public fun hasMissionPlan(): kotlin.Boolean {
      return _builder.hasMissionPlan()
    }
  }
}
public inline fun io.mavsdk.mission_raw_server.MissionRawServerProto.IncomingMissionResponse.copy(block: `io.mavsdk.mission_raw_server`.IncomingMissionResponseKt.Dsl.() -> kotlin.Unit): io.mavsdk.mission_raw_server.MissionRawServerProto.IncomingMissionResponse =
  `io.mavsdk.mission_raw_server`.IncomingMissionResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val io.mavsdk.mission_raw_server.MissionRawServerProto.IncomingMissionResponseOrBuilder.missionRawServerResultOrNull: io.mavsdk.mission_raw_server.MissionRawServerProto.MissionRawServerResult?
  get() = if (hasMissionRawServerResult()) getMissionRawServerResult() else null

public val io.mavsdk.mission_raw_server.MissionRawServerProto.IncomingMissionResponseOrBuilder.missionPlanOrNull: io.mavsdk.mission_raw_server.MissionRawServerProto.MissionPlan?
  get() = if (hasMissionPlan()) getMissionPlan() else null


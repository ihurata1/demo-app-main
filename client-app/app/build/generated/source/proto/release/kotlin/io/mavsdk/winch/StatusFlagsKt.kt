// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/winch/winch.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.winch;

@kotlin.jvm.JvmName("-initializestatusFlags")
public inline fun statusFlags(block: io.mavsdk.winch.StatusFlagsKt.Dsl.() -> kotlin.Unit): io.mavsdk.winch.WinchProto.StatusFlags =
  io.mavsdk.winch.StatusFlagsKt.Dsl._create(io.mavsdk.winch.WinchProto.StatusFlags.newBuilder()).apply { block() }._build()
/**
 * ```
 *
 * Winch Status Flags.
 *
 * The status flags are defined in mavlink
 * https://mavlink.io/en/messages/common.html#MAV_WINCH_STATUS_FLAG.
 *
 * Multiple status fields can be set simultaneously. Mavlink does
 * not specify which states are mutually exclusive.
 * ```
 *
 * Protobuf type `mavsdk.rpc.winch.StatusFlags`
 */
public object StatusFlagsKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.winch.WinchProto.StatusFlags.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.winch.WinchProto.StatusFlags.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.winch.WinchProto.StatusFlags = _builder.build()

    /**
     * <pre>
     * Winch is healthy
     * </pre>
     *
     * <code>bool healthy = 1;</code>
     */
    public var healthy: kotlin.Boolean
      @JvmName("getHealthy")
      get() = _builder.getHealthy()
      @JvmName("setHealthy")
      set(value) {
        _builder.setHealthy(value)
      }
    /**
     * ```
     * Winch is healthy
     * ```
     *
     * `bool healthy = 1;`
     */
    public fun clearHealthy() {
      _builder.clearHealthy()
    }

    /**
     * <pre>
     * Winch line is fully retracted
     * </pre>
     *
     * <code>bool fully_retracted = 2;</code>
     */
    public var fullyRetracted: kotlin.Boolean
      @JvmName("getFullyRetracted")
      get() = _builder.getFullyRetracted()
      @JvmName("setFullyRetracted")
      set(value) {
        _builder.setFullyRetracted(value)
      }
    /**
     * ```
     * Winch line is fully retracted
     * ```
     *
     * `bool fully_retracted = 2;`
     */
    public fun clearFullyRetracted() {
      _builder.clearFullyRetracted()
    }

    /**
     * <pre>
     * Winch motor is moving
     * </pre>
     *
     * <code>bool moving = 3;</code>
     */
    public var moving: kotlin.Boolean
      @JvmName("getMoving")
      get() = _builder.getMoving()
      @JvmName("setMoving")
      set(value) {
        _builder.setMoving(value)
      }
    /**
     * ```
     * Winch motor is moving
     * ```
     *
     * `bool moving = 3;`
     */
    public fun clearMoving() {
      _builder.clearMoving()
    }

    /**
     * <pre>
     * Winch clutch is engaged allowing motor to move freely
     * </pre>
     *
     * <code>bool clutch_engaged = 4;</code>
     */
    public var clutchEngaged: kotlin.Boolean
      @JvmName("getClutchEngaged")
      get() = _builder.getClutchEngaged()
      @JvmName("setClutchEngaged")
      set(value) {
        _builder.setClutchEngaged(value)
      }
    /**
     * ```
     * Winch clutch is engaged allowing motor to move freely
     * ```
     *
     * `bool clutch_engaged = 4;`
     */
    public fun clearClutchEngaged() {
      _builder.clearClutchEngaged()
    }

    /**
     * <pre>
     * Winch is locked by locking mechanism
     * </pre>
     *
     * <code>bool locked = 5;</code>
     */
    public var locked: kotlin.Boolean
      @JvmName("getLocked")
      get() = _builder.getLocked()
      @JvmName("setLocked")
      set(value) {
        _builder.setLocked(value)
      }
    /**
     * ```
     * Winch is locked by locking mechanism
     * ```
     *
     * `bool locked = 5;`
     */
    public fun clearLocked() {
      _builder.clearLocked()
    }

    /**
     * <pre>
     * Winch is gravity dropping payload
     * </pre>
     *
     * <code>bool dropping = 6;</code>
     */
    public var dropping: kotlin.Boolean
      @JvmName("getDropping")
      get() = _builder.getDropping()
      @JvmName("setDropping")
      set(value) {
        _builder.setDropping(value)
      }
    /**
     * ```
     * Winch is gravity dropping payload
     * ```
     *
     * `bool dropping = 6;`
     */
    public fun clearDropping() {
      _builder.clearDropping()
    }

    /**
     * <pre>
     * Winch is arresting payload descent
     * </pre>
     *
     * <code>bool arresting = 7;</code>
     */
    public var arresting: kotlin.Boolean
      @JvmName("getArresting")
      get() = _builder.getArresting()
      @JvmName("setArresting")
      set(value) {
        _builder.setArresting(value)
      }
    /**
     * ```
     * Winch is arresting payload descent
     * ```
     *
     * `bool arresting = 7;`
     */
    public fun clearArresting() {
      _builder.clearArresting()
    }

    /**
     * <pre>
     * Winch is using torque measurements to sense the ground
     * </pre>
     *
     * <code>bool ground_sense = 8;</code>
     */
    public var groundSense: kotlin.Boolean
      @JvmName("getGroundSense")
      get() = _builder.getGroundSense()
      @JvmName("setGroundSense")
      set(value) {
        _builder.setGroundSense(value)
      }
    /**
     * ```
     * Winch is using torque measurements to sense the ground
     * ```
     *
     * `bool ground_sense = 8;`
     */
    public fun clearGroundSense() {
      _builder.clearGroundSense()
    }

    /**
     * <pre>
     * Winch is returning to the fully retracted position
     * </pre>
     *
     * <code>bool retracting = 9;</code>
     */
    public var retracting: kotlin.Boolean
      @JvmName("getRetracting")
      get() = _builder.getRetracting()
      @JvmName("setRetracting")
      set(value) {
        _builder.setRetracting(value)
      }
    /**
     * ```
     * Winch is returning to the fully retracted position
     * ```
     *
     * `bool retracting = 9;`
     */
    public fun clearRetracting() {
      _builder.clearRetracting()
    }

    /**
     * <pre>
     * Winch is redelivering the payload. This is a failover state if the line tension goes above a threshold during RETRACTING.
     * </pre>
     *
     * <code>bool redeliver = 10;</code>
     */
    public var redeliver: kotlin.Boolean
      @JvmName("getRedeliver")
      get() = _builder.getRedeliver()
      @JvmName("setRedeliver")
      set(value) {
        _builder.setRedeliver(value)
      }
    /**
     * ```
     * Winch is redelivering the payload. This is a failover state if the line tension goes above a threshold during RETRACTING.
     * ```
     *
     * `bool redeliver = 10;`
     */
    public fun clearRedeliver() {
      _builder.clearRedeliver()
    }

    /**
     * <pre>
     * Winch is abandoning the line and possibly payload. Winch unspools the entire calculated line length. This is a failover state from REDELIVER if the number of attempts exceeds a threshold.
     * </pre>
     *
     * <code>bool abandon_line = 11;</code>
     */
    public var abandonLine: kotlin.Boolean
      @JvmName("getAbandonLine")
      get() = _builder.getAbandonLine()
      @JvmName("setAbandonLine")
      set(value) {
        _builder.setAbandonLine(value)
      }
    /**
     * ```
     * Winch is abandoning the line and possibly payload. Winch unspools the entire calculated line length. This is a failover state from REDELIVER if the number of attempts exceeds a threshold.
     * ```
     *
     * `bool abandon_line = 11;`
     */
    public fun clearAbandonLine() {
      _builder.clearAbandonLine()
    }

    /**
     * <pre>
     * Winch is engaging the locking mechanism
     * </pre>
     *
     * <code>bool locking = 12;</code>
     */
    public var locking: kotlin.Boolean
      @JvmName("getLocking")
      get() = _builder.getLocking()
      @JvmName("setLocking")
      set(value) {
        _builder.setLocking(value)
      }
    /**
     * ```
     * Winch is engaging the locking mechanism
     * ```
     *
     * `bool locking = 12;`
     */
    public fun clearLocking() {
      _builder.clearLocking()
    }

    /**
     * <pre>
     * Winch is spooling on line
     * </pre>
     *
     * <code>bool load_line = 13;</code>
     */
    public var loadLine: kotlin.Boolean
      @JvmName("getLoadLine")
      get() = _builder.getLoadLine()
      @JvmName("setLoadLine")
      set(value) {
        _builder.setLoadLine(value)
      }
    /**
     * ```
     * Winch is spooling on line
     * ```
     *
     * `bool load_line = 13;`
     */
    public fun clearLoadLine() {
      _builder.clearLoadLine()
    }

    /**
     * <pre>
     * Winch is loading a payload
     * </pre>
     *
     * <code>bool load_payload = 14;</code>
     */
    public var loadPayload: kotlin.Boolean
      @JvmName("getLoadPayload")
      get() = _builder.getLoadPayload()
      @JvmName("setLoadPayload")
      set(value) {
        _builder.setLoadPayload(value)
      }
    /**
     * ```
     * Winch is loading a payload
     * ```
     *
     * `bool load_payload = 14;`
     */
    public fun clearLoadPayload() {
      _builder.clearLoadPayload()
    }
  }
}
public inline fun io.mavsdk.winch.WinchProto.StatusFlags.copy(block: `io.mavsdk.winch`.StatusFlagsKt.Dsl.() -> kotlin.Unit): io.mavsdk.winch.WinchProto.StatusFlags =
  `io.mavsdk.winch`.StatusFlagsKt.Dsl._create(this.toBuilder()).apply { block() }._build()


// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/action_server/action_server.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.action_server;

@kotlin.jvm.JvmName("-initializesetDisarmableRequest")
public inline fun setDisarmableRequest(block: io.mavsdk.action_server.SetDisarmableRequestKt.Dsl.() -> kotlin.Unit): io.mavsdk.action_server.ActionServerProto.SetDisarmableRequest =
  io.mavsdk.action_server.SetDisarmableRequestKt.Dsl._create(io.mavsdk.action_server.ActionServerProto.SetDisarmableRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `mavsdk.rpc.action_server.SetDisarmableRequest`
 */
public object SetDisarmableRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.action_server.ActionServerProto.SetDisarmableRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.action_server.ActionServerProto.SetDisarmableRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.action_server.ActionServerProto.SetDisarmableRequest = _builder.build()

    /**
     * <pre>
     * Is disarmable now?
     * </pre>
     *
     * <code>bool disarmable = 1;</code>
     */
    public var disarmable: kotlin.Boolean
      @JvmName("getDisarmable")
      get() = _builder.getDisarmable()
      @JvmName("setDisarmable")
      set(value) {
        _builder.setDisarmable(value)
      }
    /**
     * ```
     * Is disarmable now?
     * ```
     *
     * `bool disarmable = 1;`
     */
    public fun clearDisarmable() {
      _builder.clearDisarmable()
    }

    /**
     * <pre>
     * Is disarmable with force? (Kill)
     * </pre>
     *
     * <code>bool force_disarmable = 2;</code>
     */
    public var forceDisarmable: kotlin.Boolean
      @JvmName("getForceDisarmable")
      get() = _builder.getForceDisarmable()
      @JvmName("setForceDisarmable")
      set(value) {
        _builder.setForceDisarmable(value)
      }
    /**
     * ```
     * Is disarmable with force? (Kill)
     * ```
     *
     * `bool force_disarmable = 2;`
     */
    public fun clearForceDisarmable() {
      _builder.clearForceDisarmable()
    }
  }
}
public inline fun io.mavsdk.action_server.ActionServerProto.SetDisarmableRequest.copy(block: `io.mavsdk.action_server`.SetDisarmableRequestKt.Dsl.() -> kotlin.Unit): io.mavsdk.action_server.ActionServerProto.SetDisarmableRequest =
  `io.mavsdk.action_server`.SetDisarmableRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()


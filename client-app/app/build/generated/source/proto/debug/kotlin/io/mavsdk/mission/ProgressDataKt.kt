// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/mission/mission.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.mission;

@kotlin.jvm.JvmName("-initializeprogressData")
public inline fun progressData(block: io.mavsdk.mission.ProgressDataKt.Dsl.() -> kotlin.Unit): io.mavsdk.mission.MissionProto.ProgressData =
  io.mavsdk.mission.ProgressDataKt.Dsl._create(io.mavsdk.mission.MissionProto.ProgressData.newBuilder()).apply { block() }._build()
/**
 * ```
 * Progress data coming from mission upload.
 * ```
 *
 * Protobuf type `mavsdk.rpc.mission.ProgressData`
 */
public object ProgressDataKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.mission.MissionProto.ProgressData.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.mission.MissionProto.ProgressData.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.mission.MissionProto.ProgressData = _builder.build()

    /**
     * <pre>
     * Progress (0..1.0)
     * </pre>
     *
     * <code>float progress = 1 [(.mavsdk.options.default_value) = "NaN"];</code>
     */
    public var progress: kotlin.Float
      @JvmName("getProgress")
      get() = _builder.getProgress()
      @JvmName("setProgress")
      set(value) {
        _builder.setProgress(value)
      }
    /**
     * ```
     * Progress (0..1.0)
     * ```
     *
     * `float progress = 1 [(.mavsdk.options.default_value) = "NaN"];`
     */
    public fun clearProgress() {
      _builder.clearProgress()
    }
  }
}
public inline fun io.mavsdk.mission.MissionProto.ProgressData.copy(block: `io.mavsdk.mission`.ProgressDataKt.Dsl.() -> kotlin.Unit): io.mavsdk.mission.MissionProto.ProgressData =
  `io.mavsdk.mission`.ProgressDataKt.Dsl._create(this.toBuilder()).apply { block() }._build()


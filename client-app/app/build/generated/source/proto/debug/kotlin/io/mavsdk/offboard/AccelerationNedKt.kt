// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/offboard/offboard.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.offboard;

@kotlin.jvm.JvmName("-initializeaccelerationNed")
public inline fun accelerationNed(block: io.mavsdk.offboard.AccelerationNedKt.Dsl.() -> kotlin.Unit): io.mavsdk.offboard.OffboardProto.AccelerationNed =
  io.mavsdk.offboard.AccelerationNedKt.Dsl._create(io.mavsdk.offboard.OffboardProto.AccelerationNed.newBuilder()).apply { block() }._build()
/**
 * ```
 * Type for acceleration commands in NED (North East Down) coordinates.
 * ```
 *
 * Protobuf type `mavsdk.rpc.offboard.AccelerationNed`
 */
public object AccelerationNedKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.offboard.OffboardProto.AccelerationNed.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.offboard.OffboardProto.AccelerationNed.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.offboard.OffboardProto.AccelerationNed = _builder.build()

    /**
     * <pre>
     * Acceleration North (in metres/second^2)
     * </pre>
     *
     * <code>float north_m_s2 = 1;</code>
     */
    public var northMS2: kotlin.Float
      @JvmName("getNorthMS2")
      get() = _builder.getNorthMS2()
      @JvmName("setNorthMS2")
      set(value) {
        _builder.setNorthMS2(value)
      }
    /**
     * ```
     * Acceleration North (in metres/second^2)
     * ```
     *
     * `float north_m_s2 = 1;`
     */
    public fun clearNorthMS2() {
      _builder.clearNorthMS2()
    }

    /**
     * <pre>
     * Acceleration East (in metres/second^2)
     * </pre>
     *
     * <code>float east_m_s2 = 2;</code>
     */
    public var eastMS2: kotlin.Float
      @JvmName("getEastMS2")
      get() = _builder.getEastMS2()
      @JvmName("setEastMS2")
      set(value) {
        _builder.setEastMS2(value)
      }
    /**
     * ```
     * Acceleration East (in metres/second^2)
     * ```
     *
     * `float east_m_s2 = 2;`
     */
    public fun clearEastMS2() {
      _builder.clearEastMS2()
    }

    /**
     * <pre>
     * Acceleration Down (in metres/second^2)
     * </pre>
     *
     * <code>float down_m_s2 = 3;</code>
     */
    public var downMS2: kotlin.Float
      @JvmName("getDownMS2")
      get() = _builder.getDownMS2()
      @JvmName("setDownMS2")
      set(value) {
        _builder.setDownMS2(value)
      }
    /**
     * ```
     * Acceleration Down (in metres/second^2)
     * ```
     *
     * `float down_m_s2 = 3;`
     */
    public fun clearDownMS2() {
      _builder.clearDownMS2()
    }
  }
}
public inline fun io.mavsdk.offboard.OffboardProto.AccelerationNed.copy(block: `io.mavsdk.offboard`.AccelerationNedKt.Dsl.() -> kotlin.Unit): io.mavsdk.offboard.OffboardProto.AccelerationNed =
  `io.mavsdk.offboard`.AccelerationNedKt.Dsl._create(this.toBuilder()).apply { block() }._build()


// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/transponder/transponder.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.transponder;

@kotlin.jvm.JvmName("-initializeadsbVehicle")
public inline fun adsbVehicle(block: io.mavsdk.transponder.AdsbVehicleKt.Dsl.() -> kotlin.Unit): io.mavsdk.transponder.TransponderProto.AdsbVehicle =
  io.mavsdk.transponder.AdsbVehicleKt.Dsl._create(io.mavsdk.transponder.TransponderProto.AdsbVehicle.newBuilder()).apply { block() }._build()
/**
 * ```
 * ADSB Vehicle type.
 * ```
 *
 * Protobuf type `mavsdk.rpc.transponder.AdsbVehicle`
 */
public object AdsbVehicleKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.transponder.TransponderProto.AdsbVehicle.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.transponder.TransponderProto.AdsbVehicle.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.transponder.TransponderProto.AdsbVehicle = _builder.build()

    /**
     * <pre>
     * ICAO (International Civil Aviation Organization) unique worldwide identifier
     * </pre>
     *
     * <code>uint32 icao_address = 1;</code>
     */
    public var icaoAddress: kotlin.Int
      @JvmName("getIcaoAddress")
      get() = _builder.getIcaoAddress()
      @JvmName("setIcaoAddress")
      set(value) {
        _builder.setIcaoAddress(value)
      }
    /**
     * ```
     * ICAO (International Civil Aviation Organization) unique worldwide identifier
     * ```
     *
     * `uint32 icao_address = 1;`
     */
    public fun clearIcaoAddress() {
      _builder.clearIcaoAddress()
    }

    /**
     * <pre>
     * Latitude in degrees (range: -90 to +90)
     * </pre>
     *
     * <code>double latitude_deg = 2;</code>
     */
    public var latitudeDeg: kotlin.Double
      @JvmName("getLatitudeDeg")
      get() = _builder.getLatitudeDeg()
      @JvmName("setLatitudeDeg")
      set(value) {
        _builder.setLatitudeDeg(value)
      }
    /**
     * ```
     * Latitude in degrees (range: -90 to +90)
     * ```
     *
     * `double latitude_deg = 2;`
     */
    public fun clearLatitudeDeg() {
      _builder.clearLatitudeDeg()
    }

    /**
     * <pre>
     * Longitude in degrees (range: -180 to +180).
     * </pre>
     *
     * <code>double longitude_deg = 3;</code>
     */
    public var longitudeDeg: kotlin.Double
      @JvmName("getLongitudeDeg")
      get() = _builder.getLongitudeDeg()
      @JvmName("setLongitudeDeg")
      set(value) {
        _builder.setLongitudeDeg(value)
      }
    /**
     * ```
     * Longitude in degrees (range: -180 to +180).
     * ```
     *
     * `double longitude_deg = 3;`
     */
    public fun clearLongitudeDeg() {
      _builder.clearLongitudeDeg()
    }

    /**
     * ```
     * ADSB altitude type.
     * ```
     *
     * `.mavsdk.rpc.transponder.AdsbAltitudeType altitude_type = 4;`
     */
    public var altitudeType: io.mavsdk.transponder.TransponderProto.AdsbAltitudeType
      @JvmName("getAltitudeType")
      get() = _builder.getAltitudeType()
      @JvmName("setAltitudeType")
      set(value) {
        _builder.setAltitudeType(value)
      }
    public var altitudeTypeValue: kotlin.Int
      @JvmName("getAltitudeTypeValue")
      get() = _builder.getAltitudeTypeValue()
      @JvmName("setAltitudeTypeValue")
      set(value) {
        _builder.setAltitudeTypeValue(value)
      }
    /**
     * ```
     * ADSB altitude type.
     * ```
     *
     * `.mavsdk.rpc.transponder.AdsbAltitudeType altitude_type = 4;`
     */
    public fun clearAltitudeType() {
      _builder.clearAltitudeType()
    }

    /**
     * <pre>
     * Altitude in metres according to altitude_type 
     * </pre>
     *
     * <code>float absolute_altitude_m = 5;</code>
     */
    public var absoluteAltitudeM: kotlin.Float
      @JvmName("getAbsoluteAltitudeM")
      get() = _builder.getAbsoluteAltitudeM()
      @JvmName("setAbsoluteAltitudeM")
      set(value) {
        _builder.setAbsoluteAltitudeM(value)
      }
    /**
     * ```
     * Altitude in metres according to altitude_type 
     * ```
     *
     * `float absolute_altitude_m = 5;`
     */
    public fun clearAbsoluteAltitudeM() {
      _builder.clearAbsoluteAltitudeM()
    }

    /**
     * <pre>
     * Course over ground, in degrees
     * </pre>
     *
     * <code>float heading_deg = 6;</code>
     */
    public var headingDeg: kotlin.Float
      @JvmName("getHeadingDeg")
      get() = _builder.getHeadingDeg()
      @JvmName("setHeadingDeg")
      set(value) {
        _builder.setHeadingDeg(value)
      }
    /**
     * ```
     * Course over ground, in degrees
     * ```
     *
     * `float heading_deg = 6;`
     */
    public fun clearHeadingDeg() {
      _builder.clearHeadingDeg()
    }

    /**
     * <pre>
     * The horizontal velocity in metres/second
     * </pre>
     *
     * <code>float horizontal_velocity_m_s = 7;</code>
     */
    public var horizontalVelocityMS: kotlin.Float
      @JvmName("getHorizontalVelocityMS")
      get() = _builder.getHorizontalVelocityMS()
      @JvmName("setHorizontalVelocityMS")
      set(value) {
        _builder.setHorizontalVelocityMS(value)
      }
    /**
     * ```
     * The horizontal velocity in metres/second
     * ```
     *
     * `float horizontal_velocity_m_s = 7;`
     */
    public fun clearHorizontalVelocityMS() {
      _builder.clearHorizontalVelocityMS()
    }

    /**
     * <pre>
     * The vertical velocity in metres/second. Positive is up.
     * </pre>
     *
     * <code>float vertical_velocity_m_s = 8;</code>
     */
    public var verticalVelocityMS: kotlin.Float
      @JvmName("getVerticalVelocityMS")
      get() = _builder.getVerticalVelocityMS()
      @JvmName("setVerticalVelocityMS")
      set(value) {
        _builder.setVerticalVelocityMS(value)
      }
    /**
     * ```
     * The vertical velocity in metres/second. Positive is up.
     * ```
     *
     * `float vertical_velocity_m_s = 8;`
     */
    public fun clearVerticalVelocityMS() {
      _builder.clearVerticalVelocityMS()
    }

    /**
     * ```
     * The callsign
     * ```
     *
     * `string callsign = 9;`
     */
    public var callsign: kotlin.String
      @JvmName("getCallsign")
      get() = _builder.getCallsign()
      @JvmName("setCallsign")
      set(value) {
        _builder.setCallsign(value)
      }
    /**
     * ```
     * The callsign
     * ```
     *
     * `string callsign = 9;`
     */
    public fun clearCallsign() {
      _builder.clearCallsign()
    }

    /**
     * ```
     * ADSB emitter type.
     * ```
     *
     * `.mavsdk.rpc.transponder.AdsbEmitterType emitter_type = 10;`
     */
    public var emitterType: io.mavsdk.transponder.TransponderProto.AdsbEmitterType
      @JvmName("getEmitterType")
      get() = _builder.getEmitterType()
      @JvmName("setEmitterType")
      set(value) {
        _builder.setEmitterType(value)
      }
    public var emitterTypeValue: kotlin.Int
      @JvmName("getEmitterTypeValue")
      get() = _builder.getEmitterTypeValue()
      @JvmName("setEmitterTypeValue")
      set(value) {
        _builder.setEmitterTypeValue(value)
      }
    /**
     * ```
     * ADSB emitter type.
     * ```
     *
     * `.mavsdk.rpc.transponder.AdsbEmitterType emitter_type = 10;`
     */
    public fun clearEmitterType() {
      _builder.clearEmitterType()
    }

    /**
     * <pre>
     * Squawk code.
     * </pre>
     *
     * <code>uint32 squawk = 13;</code>
     */
    public var squawk: kotlin.Int
      @JvmName("getSquawk")
      get() = _builder.getSquawk()
      @JvmName("setSquawk")
      set(value) {
        _builder.setSquawk(value)
      }
    /**
     * ```
     * Squawk code.
     * ```
     *
     * `uint32 squawk = 13;`
     */
    public fun clearSquawk() {
      _builder.clearSquawk()
    }

    /**
     * <pre>
     * Time Since Last Communication in seconds.
     * </pre>
     *
     * <code>uint32 tslc_s = 14;</code>
     */
    public var tslcS: kotlin.Int
      @JvmName("getTslcS")
      get() = _builder.getTslcS()
      @JvmName("setTslcS")
      set(value) {
        _builder.setTslcS(value)
      }
    /**
     * ```
     * Time Since Last Communication in seconds.
     * ```
     *
     * `uint32 tslc_s = 14;`
     */
    public fun clearTslcS() {
      _builder.clearTslcS()
    }
  }
}
public inline fun io.mavsdk.transponder.TransponderProto.AdsbVehicle.copy(block: `io.mavsdk.transponder`.AdsbVehicleKt.Dsl.() -> kotlin.Unit): io.mavsdk.transponder.TransponderProto.AdsbVehicle =
  `io.mavsdk.transponder`.AdsbVehicleKt.Dsl._create(this.toBuilder()).apply { block() }._build()


// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/mocap/mocap.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.mocap;

@kotlin.jvm.JvmName("-initializeangleBody")
public inline fun angleBody(block: io.mavsdk.mocap.AngleBodyKt.Dsl.() -> kotlin.Unit): io.mavsdk.mocap.MocapProto.AngleBody =
  io.mavsdk.mocap.AngleBodyKt.Dsl._create(io.mavsdk.mocap.MocapProto.AngleBody.newBuilder()).apply { block() }._build()
/**
 * ```
 * Body angle type
 * ```
 *
 * Protobuf type `mavsdk.rpc.mocap.AngleBody`
 */
public object AngleBodyKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.mocap.MocapProto.AngleBody.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.mocap.MocapProto.AngleBody.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.mocap.MocapProto.AngleBody = _builder.build()

    /**
     * <pre>
     * Roll angle in radians.
     * </pre>
     *
     * <code>float roll_rad = 1;</code>
     */
    public var rollRad: kotlin.Float
      @JvmName("getRollRad")
      get() = _builder.getRollRad()
      @JvmName("setRollRad")
      set(value) {
        _builder.setRollRad(value)
      }
    /**
     * ```
     * Roll angle in radians.
     * ```
     *
     * `float roll_rad = 1;`
     */
    public fun clearRollRad() {
      _builder.clearRollRad()
    }

    /**
     * <pre>
     * Pitch angle in radians.
     * </pre>
     *
     * <code>float pitch_rad = 2;</code>
     */
    public var pitchRad: kotlin.Float
      @JvmName("getPitchRad")
      get() = _builder.getPitchRad()
      @JvmName("setPitchRad")
      set(value) {
        _builder.setPitchRad(value)
      }
    /**
     * ```
     * Pitch angle in radians.
     * ```
     *
     * `float pitch_rad = 2;`
     */
    public fun clearPitchRad() {
      _builder.clearPitchRad()
    }

    /**
     * <pre>
     * Yaw angle in radians.
     * </pre>
     *
     * <code>float yaw_rad = 3;</code>
     */
    public var yawRad: kotlin.Float
      @JvmName("getYawRad")
      get() = _builder.getYawRad()
      @JvmName("setYawRad")
      set(value) {
        _builder.setYawRad(value)
      }
    /**
     * ```
     * Yaw angle in radians.
     * ```
     *
     * `float yaw_rad = 3;`
     */
    public fun clearYawRad() {
      _builder.clearYawRad()
    }
  }
}
public inline fun io.mavsdk.mocap.MocapProto.AngleBody.copy(block: `io.mavsdk.mocap`.AngleBodyKt.Dsl.() -> kotlin.Unit): io.mavsdk.mocap.MocapProto.AngleBody =
  `io.mavsdk.mocap`.AngleBodyKt.Dsl._create(this.toBuilder()).apply { block() }._build()


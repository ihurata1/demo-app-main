// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/offboard/offboard.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.offboard;

@kotlin.jvm.JvmName("-initializesetAttitudeRequest")
public inline fun setAttitudeRequest(block: io.mavsdk.offboard.SetAttitudeRequestKt.Dsl.() -> kotlin.Unit): io.mavsdk.offboard.OffboardProto.SetAttitudeRequest =
  io.mavsdk.offboard.SetAttitudeRequestKt.Dsl._create(io.mavsdk.offboard.OffboardProto.SetAttitudeRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `mavsdk.rpc.offboard.SetAttitudeRequest`
 */
public object SetAttitudeRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.offboard.OffboardProto.SetAttitudeRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.offboard.OffboardProto.SetAttitudeRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.offboard.OffboardProto.SetAttitudeRequest = _builder.build()

    /**
     * ```
     * Attitude roll, pitch and yaw along with thrust
     * ```
     *
     * `.mavsdk.rpc.offboard.Attitude attitude = 1;`
     */
    public var attitude: io.mavsdk.offboard.OffboardProto.Attitude
      @JvmName("getAttitude")
      get() = _builder.getAttitude()
      @JvmName("setAttitude")
      set(value) {
        _builder.setAttitude(value)
      }
    /**
     * ```
     * Attitude roll, pitch and yaw along with thrust
     * ```
     *
     * `.mavsdk.rpc.offboard.Attitude attitude = 1;`
     */
    public fun clearAttitude() {
      _builder.clearAttitude()
    }
    /**
     * ```
     * Attitude roll, pitch and yaw along with thrust
     * ```
     *
     * `.mavsdk.rpc.offboard.Attitude attitude = 1;`
     * @return Whether the attitude field is set.
     */
    public fun hasAttitude(): kotlin.Boolean {
      return _builder.hasAttitude()
    }
  }
}
public inline fun io.mavsdk.offboard.OffboardProto.SetAttitudeRequest.copy(block: `io.mavsdk.offboard`.SetAttitudeRequestKt.Dsl.() -> kotlin.Unit): io.mavsdk.offboard.OffboardProto.SetAttitudeRequest =
  `io.mavsdk.offboard`.SetAttitudeRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val io.mavsdk.offboard.OffboardProto.SetAttitudeRequestOrBuilder.attitudeOrNull: io.mavsdk.offboard.OffboardProto.Attitude?
  get() = if (hasAttitude()) getAttitude() else null


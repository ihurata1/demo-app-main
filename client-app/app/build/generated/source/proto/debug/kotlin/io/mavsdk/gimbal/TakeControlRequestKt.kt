// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/gimbal/gimbal.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.gimbal;

@kotlin.jvm.JvmName("-initializetakeControlRequest")
public inline fun takeControlRequest(block: io.mavsdk.gimbal.TakeControlRequestKt.Dsl.() -> kotlin.Unit): io.mavsdk.gimbal.GimbalProto.TakeControlRequest =
  io.mavsdk.gimbal.TakeControlRequestKt.Dsl._create(io.mavsdk.gimbal.GimbalProto.TakeControlRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `mavsdk.rpc.gimbal.TakeControlRequest`
 */
public object TakeControlRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.gimbal.GimbalProto.TakeControlRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.gimbal.GimbalProto.TakeControlRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.gimbal.GimbalProto.TakeControlRequest = _builder.build()

    /**
     * ```
     * Control mode (primary or secondary)
     * ```
     *
     * `.mavsdk.rpc.gimbal.ControlMode control_mode = 1;`
     */
    public var controlMode: io.mavsdk.gimbal.GimbalProto.ControlMode
      @JvmName("getControlMode")
      get() = _builder.getControlMode()
      @JvmName("setControlMode")
      set(value) {
        _builder.setControlMode(value)
      }
    public var controlModeValue: kotlin.Int
      @JvmName("getControlModeValue")
      get() = _builder.getControlModeValue()
      @JvmName("setControlModeValue")
      set(value) {
        _builder.setControlModeValue(value)
      }
    /**
     * ```
     * Control mode (primary or secondary)
     * ```
     *
     * `.mavsdk.rpc.gimbal.ControlMode control_mode = 1;`
     */
    public fun clearControlMode() {
      _builder.clearControlMode()
    }
  }
}
public inline fun io.mavsdk.gimbal.GimbalProto.TakeControlRequest.copy(block: `io.mavsdk.gimbal`.TakeControlRequestKt.Dsl.() -> kotlin.Unit): io.mavsdk.gimbal.GimbalProto.TakeControlRequest =
  `io.mavsdk.gimbal`.TakeControlRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()


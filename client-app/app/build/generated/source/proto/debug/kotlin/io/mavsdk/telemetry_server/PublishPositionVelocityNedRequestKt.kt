// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/telemetry_server/telemetry_server.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.telemetry_server;

@kotlin.jvm.JvmName("-initializepublishPositionVelocityNedRequest")
public inline fun publishPositionVelocityNedRequest(block: io.mavsdk.telemetry_server.PublishPositionVelocityNedRequestKt.Dsl.() -> kotlin.Unit): io.mavsdk.telemetry_server.TelemetryServerProto.PublishPositionVelocityNedRequest =
  io.mavsdk.telemetry_server.PublishPositionVelocityNedRequestKt.Dsl._create(io.mavsdk.telemetry_server.TelemetryServerProto.PublishPositionVelocityNedRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `mavsdk.rpc.telemetry_server.PublishPositionVelocityNedRequest`
 */
public object PublishPositionVelocityNedRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.telemetry_server.TelemetryServerProto.PublishPositionVelocityNedRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.telemetry_server.TelemetryServerProto.PublishPositionVelocityNedRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.telemetry_server.TelemetryServerProto.PublishPositionVelocityNedRequest = _builder.build()

    /**
     * ```
     * The next position and velocity status
     * ```
     *
     * `.mavsdk.rpc.telemetry_server.PositionVelocityNed position_velocity_ned = 1;`
     */
    public var positionVelocityNed: io.mavsdk.telemetry_server.TelemetryServerProto.PositionVelocityNed
      @JvmName("getPositionVelocityNed")
      get() = _builder.getPositionVelocityNed()
      @JvmName("setPositionVelocityNed")
      set(value) {
        _builder.setPositionVelocityNed(value)
      }
    /**
     * ```
     * The next position and velocity status
     * ```
     *
     * `.mavsdk.rpc.telemetry_server.PositionVelocityNed position_velocity_ned = 1;`
     */
    public fun clearPositionVelocityNed() {
      _builder.clearPositionVelocityNed()
    }
    /**
     * ```
     * The next position and velocity status
     * ```
     *
     * `.mavsdk.rpc.telemetry_server.PositionVelocityNed position_velocity_ned = 1;`
     * @return Whether the positionVelocityNed field is set.
     */
    public fun hasPositionVelocityNed(): kotlin.Boolean {
      return _builder.hasPositionVelocityNed()
    }
  }
}
public inline fun io.mavsdk.telemetry_server.TelemetryServerProto.PublishPositionVelocityNedRequest.copy(block: `io.mavsdk.telemetry_server`.PublishPositionVelocityNedRequestKt.Dsl.() -> kotlin.Unit): io.mavsdk.telemetry_server.TelemetryServerProto.PublishPositionVelocityNedRequest =
  `io.mavsdk.telemetry_server`.PublishPositionVelocityNedRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val io.mavsdk.telemetry_server.TelemetryServerProto.PublishPositionVelocityNedRequestOrBuilder.positionVelocityNedOrNull: io.mavsdk.telemetry_server.TelemetryServerProto.PositionVelocityNed?
  get() = if (hasPositionVelocityNed()) getPositionVelocityNed() else null


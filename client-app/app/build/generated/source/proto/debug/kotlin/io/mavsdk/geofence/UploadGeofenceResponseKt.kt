// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/geofence/geofence.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.geofence;

@kotlin.jvm.JvmName("-initializeuploadGeofenceResponse")
public inline fun uploadGeofenceResponse(block: io.mavsdk.geofence.UploadGeofenceResponseKt.Dsl.() -> kotlin.Unit): io.mavsdk.geofence.GeofenceProto.UploadGeofenceResponse =
  io.mavsdk.geofence.UploadGeofenceResponseKt.Dsl._create(io.mavsdk.geofence.GeofenceProto.UploadGeofenceResponse.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `mavsdk.rpc.geofence.UploadGeofenceResponse`
 */
public object UploadGeofenceResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.geofence.GeofenceProto.UploadGeofenceResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.geofence.GeofenceProto.UploadGeofenceResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.geofence.GeofenceProto.UploadGeofenceResponse = _builder.build()

    /**
     * `.mavsdk.rpc.geofence.GeofenceResult geofence_result = 1;`
     */
    public var geofenceResult: io.mavsdk.geofence.GeofenceProto.GeofenceResult
      @JvmName("getGeofenceResult")
      get() = _builder.getGeofenceResult()
      @JvmName("setGeofenceResult")
      set(value) {
        _builder.setGeofenceResult(value)
      }
    /**
     * `.mavsdk.rpc.geofence.GeofenceResult geofence_result = 1;`
     */
    public fun clearGeofenceResult() {
      _builder.clearGeofenceResult()
    }
    /**
     * `.mavsdk.rpc.geofence.GeofenceResult geofence_result = 1;`
     * @return Whether the geofenceResult field is set.
     */
    public fun hasGeofenceResult(): kotlin.Boolean {
      return _builder.hasGeofenceResult()
    }
  }
}
public inline fun io.mavsdk.geofence.GeofenceProto.UploadGeofenceResponse.copy(block: `io.mavsdk.geofence`.UploadGeofenceResponseKt.Dsl.() -> kotlin.Unit): io.mavsdk.geofence.GeofenceProto.UploadGeofenceResponse =
  `io.mavsdk.geofence`.UploadGeofenceResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val io.mavsdk.geofence.GeofenceProto.UploadGeofenceResponseOrBuilder.geofenceResultOrNull: io.mavsdk.geofence.GeofenceProto.GeofenceResult?
  get() = if (hasGeofenceResult()) getGeofenceResult() else null


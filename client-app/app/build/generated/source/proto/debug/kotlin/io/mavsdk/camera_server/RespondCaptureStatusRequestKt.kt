// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/camera_server/camera_server.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.camera_server;

@kotlin.jvm.JvmName("-initializerespondCaptureStatusRequest")
public inline fun respondCaptureStatusRequest(block: io.mavsdk.camera_server.RespondCaptureStatusRequestKt.Dsl.() -> kotlin.Unit): io.mavsdk.camera_server.CameraServerProto.RespondCaptureStatusRequest =
  io.mavsdk.camera_server.RespondCaptureStatusRequestKt.Dsl._create(io.mavsdk.camera_server.CameraServerProto.RespondCaptureStatusRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `mavsdk.rpc.camera_server.RespondCaptureStatusRequest`
 */
public object RespondCaptureStatusRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.camera_server.CameraServerProto.RespondCaptureStatusRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.camera_server.CameraServerProto.RespondCaptureStatusRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.camera_server.CameraServerProto.RespondCaptureStatusRequest = _builder.build()

    /**
     * ```
     * the feedback
     * ```
     *
     * `.mavsdk.rpc.camera_server.CameraFeedback capture_status_feedback = 1;`
     */
    public var captureStatusFeedback: io.mavsdk.camera_server.CameraServerProto.CameraFeedback
      @JvmName("getCaptureStatusFeedback")
      get() = _builder.getCaptureStatusFeedback()
      @JvmName("setCaptureStatusFeedback")
      set(value) {
        _builder.setCaptureStatusFeedback(value)
      }
    public var captureStatusFeedbackValue: kotlin.Int
      @JvmName("getCaptureStatusFeedbackValue")
      get() = _builder.getCaptureStatusFeedbackValue()
      @JvmName("setCaptureStatusFeedbackValue")
      set(value) {
        _builder.setCaptureStatusFeedbackValue(value)
      }
    /**
     * ```
     * the feedback
     * ```
     *
     * `.mavsdk.rpc.camera_server.CameraFeedback capture_status_feedback = 1;`
     */
    public fun clearCaptureStatusFeedback() {
      _builder.clearCaptureStatusFeedback()
    }

    /**
     * ```
     * the capture status
     * ```
     *
     * `.mavsdk.rpc.camera_server.CaptureStatus capture_status = 2;`
     */
    public var captureStatus: io.mavsdk.camera_server.CameraServerProto.CaptureStatus
      @JvmName("getCaptureStatus")
      get() = _builder.getCaptureStatus()
      @JvmName("setCaptureStatus")
      set(value) {
        _builder.setCaptureStatus(value)
      }
    /**
     * ```
     * the capture status
     * ```
     *
     * `.mavsdk.rpc.camera_server.CaptureStatus capture_status = 2;`
     */
    public fun clearCaptureStatus() {
      _builder.clearCaptureStatus()
    }
    /**
     * ```
     * the capture status
     * ```
     *
     * `.mavsdk.rpc.camera_server.CaptureStatus capture_status = 2;`
     * @return Whether the captureStatus field is set.
     */
    public fun hasCaptureStatus(): kotlin.Boolean {
      return _builder.hasCaptureStatus()
    }
  }
}
public inline fun io.mavsdk.camera_server.CameraServerProto.RespondCaptureStatusRequest.copy(block: `io.mavsdk.camera_server`.RespondCaptureStatusRequestKt.Dsl.() -> kotlin.Unit): io.mavsdk.camera_server.CameraServerProto.RespondCaptureStatusRequest =
  `io.mavsdk.camera_server`.RespondCaptureStatusRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val io.mavsdk.camera_server.CameraServerProto.RespondCaptureStatusRequestOrBuilder.captureStatusOrNull: io.mavsdk.camera_server.CameraServerProto.CaptureStatus?
  get() = if (hasCaptureStatus()) getCaptureStatus() else null


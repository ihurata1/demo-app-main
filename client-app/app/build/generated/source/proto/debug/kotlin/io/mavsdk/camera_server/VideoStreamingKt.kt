// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/camera_server/camera_server.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.camera_server;

@kotlin.jvm.JvmName("-initializevideoStreaming")
public inline fun videoStreaming(block: io.mavsdk.camera_server.VideoStreamingKt.Dsl.() -> kotlin.Unit): io.mavsdk.camera_server.CameraServerProto.VideoStreaming =
  io.mavsdk.camera_server.VideoStreamingKt.Dsl._create(io.mavsdk.camera_server.CameraServerProto.VideoStreaming.newBuilder()).apply { block() }._build()
/**
 * ```
 * Type to represent video streaming settings
 * ```
 *
 * Protobuf type `mavsdk.rpc.camera_server.VideoStreaming`
 */
public object VideoStreamingKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.camera_server.CameraServerProto.VideoStreaming.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.camera_server.CameraServerProto.VideoStreaming.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.camera_server.CameraServerProto.VideoStreaming = _builder.build()

    /**
     * <pre>
     * True if the capture was successful
     * </pre>
     *
     * <code>bool has_rtsp_server = 1;</code>
     */
    public var hasRtspServer: kotlin.Boolean
      @JvmName("getHasRtspServer")
      get() = _builder.getHasRtspServer()
      @JvmName("setHasRtspServer")
      set(value) {
        _builder.setHasRtspServer(value)
      }
    /**
     * ```
     * True if the capture was successful
     * ```
     *
     * `bool has_rtsp_server = 1;`
     */
    public fun clearHasRtspServer() {
      _builder.clearHasRtspServer()
    }

    /**
     * ```
     * RTSP URI (e.g. rtsp://192.168.1.42:8554/live)
     * ```
     *
     * `string rtsp_uri = 2;`
     */
    public var rtspUri: kotlin.String
      @JvmName("getRtspUri")
      get() = _builder.getRtspUri()
      @JvmName("setRtspUri")
      set(value) {
        _builder.setRtspUri(value)
      }
    /**
     * ```
     * RTSP URI (e.g. rtsp://192.168.1.42:8554/live)
     * ```
     *
     * `string rtsp_uri = 2;`
     */
    public fun clearRtspUri() {
      _builder.clearRtspUri()
    }
  }
}
public inline fun io.mavsdk.camera_server.CameraServerProto.VideoStreaming.copy(block: `io.mavsdk.camera_server`.VideoStreamingKt.Dsl.() -> kotlin.Unit): io.mavsdk.camera_server.CameraServerProto.VideoStreaming =
  `io.mavsdk.camera_server`.VideoStreamingKt.Dsl._create(this.toBuilder()).apply { block() }._build()


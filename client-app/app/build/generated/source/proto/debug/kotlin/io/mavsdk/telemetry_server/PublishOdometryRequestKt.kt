// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/telemetry_server/telemetry_server.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.telemetry_server;

@kotlin.jvm.JvmName("-initializepublishOdometryRequest")
public inline fun publishOdometryRequest(block: io.mavsdk.telemetry_server.PublishOdometryRequestKt.Dsl.() -> kotlin.Unit): io.mavsdk.telemetry_server.TelemetryServerProto.PublishOdometryRequest =
  io.mavsdk.telemetry_server.PublishOdometryRequestKt.Dsl._create(io.mavsdk.telemetry_server.TelemetryServerProto.PublishOdometryRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `mavsdk.rpc.telemetry_server.PublishOdometryRequest`
 */
public object PublishOdometryRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.telemetry_server.TelemetryServerProto.PublishOdometryRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.telemetry_server.TelemetryServerProto.PublishOdometryRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.telemetry_server.TelemetryServerProto.PublishOdometryRequest = _builder.build()

    /**
     * ```
     * The next odometry status
     * ```
     *
     * `.mavsdk.rpc.telemetry_server.Odometry odometry = 1;`
     */
    public var odometry: io.mavsdk.telemetry_server.TelemetryServerProto.Odometry
      @JvmName("getOdometry")
      get() = _builder.getOdometry()
      @JvmName("setOdometry")
      set(value) {
        _builder.setOdometry(value)
      }
    /**
     * ```
     * The next odometry status
     * ```
     *
     * `.mavsdk.rpc.telemetry_server.Odometry odometry = 1;`
     */
    public fun clearOdometry() {
      _builder.clearOdometry()
    }
    /**
     * ```
     * The next odometry status
     * ```
     *
     * `.mavsdk.rpc.telemetry_server.Odometry odometry = 1;`
     * @return Whether the odometry field is set.
     */
    public fun hasOdometry(): kotlin.Boolean {
      return _builder.hasOdometry()
    }
  }
}
public inline fun io.mavsdk.telemetry_server.TelemetryServerProto.PublishOdometryRequest.copy(block: `io.mavsdk.telemetry_server`.PublishOdometryRequestKt.Dsl.() -> kotlin.Unit): io.mavsdk.telemetry_server.TelemetryServerProto.PublishOdometryRequest =
  `io.mavsdk.telemetry_server`.PublishOdometryRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val io.mavsdk.telemetry_server.TelemetryServerProto.PublishOdometryRequestOrBuilder.odometryOrNull: io.mavsdk.telemetry_server.TelemetryServerProto.Odometry?
  get() = if (hasOdometry()) getOdometry() else null


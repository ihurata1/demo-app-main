// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/offboard/offboard.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.offboard;

@kotlin.jvm.JvmName("-initializevelocityBodyYawspeed")
public inline fun velocityBodyYawspeed(block: io.mavsdk.offboard.VelocityBodyYawspeedKt.Dsl.() -> kotlin.Unit): io.mavsdk.offboard.OffboardProto.VelocityBodyYawspeed =
  io.mavsdk.offboard.VelocityBodyYawspeedKt.Dsl._create(io.mavsdk.offboard.OffboardProto.VelocityBodyYawspeed.newBuilder()).apply { block() }._build()
/**
 * ```
 * Type for velocity commands in body coordinates.
 * ```
 *
 * Protobuf type `mavsdk.rpc.offboard.VelocityBodyYawspeed`
 */
public object VelocityBodyYawspeedKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.offboard.OffboardProto.VelocityBodyYawspeed.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.offboard.OffboardProto.VelocityBodyYawspeed.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.offboard.OffboardProto.VelocityBodyYawspeed = _builder.build()

    /**
     * <pre>
     * Velocity forward (in metres/second)
     * </pre>
     *
     * <code>float forward_m_s = 1;</code>
     */
    public var forwardMS: kotlin.Float
      @JvmName("getForwardMS")
      get() = _builder.getForwardMS()
      @JvmName("setForwardMS")
      set(value) {
        _builder.setForwardMS(value)
      }
    /**
     * ```
     * Velocity forward (in metres/second)
     * ```
     *
     * `float forward_m_s = 1;`
     */
    public fun clearForwardMS() {
      _builder.clearForwardMS()
    }

    /**
     * <pre>
     * Velocity right (in metres/second)
     * </pre>
     *
     * <code>float right_m_s = 2;</code>
     */
    public var rightMS: kotlin.Float
      @JvmName("getRightMS")
      get() = _builder.getRightMS()
      @JvmName("setRightMS")
      set(value) {
        _builder.setRightMS(value)
      }
    /**
     * ```
     * Velocity right (in metres/second)
     * ```
     *
     * `float right_m_s = 2;`
     */
    public fun clearRightMS() {
      _builder.clearRightMS()
    }

    /**
     * <pre>
     * Velocity down (in metres/second)
     * </pre>
     *
     * <code>float down_m_s = 3;</code>
     */
    public var downMS: kotlin.Float
      @JvmName("getDownMS")
      get() = _builder.getDownMS()
      @JvmName("setDownMS")
      set(value) {
        _builder.setDownMS(value)
      }
    /**
     * ```
     * Velocity down (in metres/second)
     * ```
     *
     * `float down_m_s = 3;`
     */
    public fun clearDownMS() {
      _builder.clearDownMS()
    }

    /**
     * <pre>
     * Yaw angular rate (in degrees/second, positive for clock-wise looking from above)
     * </pre>
     *
     * <code>float yawspeed_deg_s = 4;</code>
     */
    public var yawspeedDegS: kotlin.Float
      @JvmName("getYawspeedDegS")
      get() = _builder.getYawspeedDegS()
      @JvmName("setYawspeedDegS")
      set(value) {
        _builder.setYawspeedDegS(value)
      }
    /**
     * ```
     * Yaw angular rate (in degrees/second, positive for clock-wise looking from above)
     * ```
     *
     * `float yawspeed_deg_s = 4;`
     */
    public fun clearYawspeedDegS() {
      _builder.clearYawspeedDegS()
    }
  }
}
public inline fun io.mavsdk.offboard.OffboardProto.VelocityBodyYawspeed.copy(block: `io.mavsdk.offboard`.VelocityBodyYawspeedKt.Dsl.() -> kotlin.Unit): io.mavsdk.offboard.OffboardProto.VelocityBodyYawspeed =
  `io.mavsdk.offboard`.VelocityBodyYawspeedKt.Dsl._create(this.toBuilder()).apply { block() }._build()


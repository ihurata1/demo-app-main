// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/info/info.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.info;

@kotlin.jvm.JvmName("-initializeproduct")
public inline fun product(block: io.mavsdk.info.ProductKt.Dsl.() -> kotlin.Unit): io.mavsdk.info.InfoProto.Product =
  io.mavsdk.info.ProductKt.Dsl._create(io.mavsdk.info.InfoProto.Product.newBuilder()).apply { block() }._build()
/**
 * ```
 * System product information.
 * ```
 *
 * Protobuf type `mavsdk.rpc.info.Product`
 */
public object ProductKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.info.InfoProto.Product.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.info.InfoProto.Product.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.info.InfoProto.Product = _builder.build()

    /**
     * <pre>
     * ID of the board vendor
     * </pre>
     *
     * <code>int32 vendor_id = 1;</code>
     */
    public var vendorId: kotlin.Int
      @JvmName("getVendorId")
      get() = _builder.getVendorId()
      @JvmName("setVendorId")
      set(value) {
        _builder.setVendorId(value)
      }
    /**
     * ```
     * ID of the board vendor
     * ```
     *
     * `int32 vendor_id = 1;`
     */
    public fun clearVendorId() {
      _builder.clearVendorId()
    }

    /**
     * ```
     * Name of the vendor
     * ```
     *
     * `string vendor_name = 2;`
     */
    public var vendorName: kotlin.String
      @JvmName("getVendorName")
      get() = _builder.getVendorName()
      @JvmName("setVendorName")
      set(value) {
        _builder.setVendorName(value)
      }
    /**
     * ```
     * Name of the vendor
     * ```
     *
     * `string vendor_name = 2;`
     */
    public fun clearVendorName() {
      _builder.clearVendorName()
    }

    /**
     * <pre>
     * ID of the product
     * </pre>
     *
     * <code>int32 product_id = 3;</code>
     */
    public var productId: kotlin.Int
      @JvmName("getProductId")
      get() = _builder.getProductId()
      @JvmName("setProductId")
      set(value) {
        _builder.setProductId(value)
      }
    /**
     * ```
     * ID of the product
     * ```
     *
     * `int32 product_id = 3;`
     */
    public fun clearProductId() {
      _builder.clearProductId()
    }

    /**
     * ```
     * Name of the product
     * ```
     *
     * `string product_name = 4;`
     */
    public var productName: kotlin.String
      @JvmName("getProductName")
      get() = _builder.getProductName()
      @JvmName("setProductName")
      set(value) {
        _builder.setProductName(value)
      }
    /**
     * ```
     * Name of the product
     * ```
     *
     * `string product_name = 4;`
     */
    public fun clearProductName() {
      _builder.clearProductName()
    }
  }
}
public inline fun io.mavsdk.info.InfoProto.Product.copy(block: `io.mavsdk.info`.ProductKt.Dsl.() -> kotlin.Unit): io.mavsdk.info.InfoProto.Product =
  `io.mavsdk.info`.ProductKt.Dsl._create(this.toBuilder()).apply { block() }._build()


// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/offboard/offboard.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.offboard;

@kotlin.jvm.JvmName("-initializeactuatorControl")
public inline fun actuatorControl(block: io.mavsdk.offboard.ActuatorControlKt.Dsl.() -> kotlin.Unit): io.mavsdk.offboard.OffboardProto.ActuatorControl =
  io.mavsdk.offboard.ActuatorControlKt.Dsl._create(io.mavsdk.offboard.OffboardProto.ActuatorControl.newBuilder()).apply { block() }._build()
/**
 * ```
 *
 * Type for actuator control.
 *
 * Control members should be normed to -1..+1 where 0 is neutral position.
 * Throttle for single rotation direction motors is 0..1, negative range for reverse direction.
 *
 * One group support eight controls.
 *
 * Up to 16 actuator controls can be set. To ignore an output group, set all it controls to NaN.
 * If one or more controls in group is not NaN, then all NaN controls will sent as zero.
 * The first 8 actuator controls internally map to control group 0, the latter 8 actuator
 * controls map to control group 1. Depending on what controls are set (instead of NaN) 1 or 2
 * MAVLink messages are actually sent.
 *
 * In PX4 v1.9.0 Only first four Control Groups are supported
 * (https://github.com/PX4/Firmware/blob/v1.9.0/src/modules/mavlink/mavlink_receiver.cpp#L980).
 * ```
 *
 * Protobuf type `mavsdk.rpc.offboard.ActuatorControl`
 */
public object ActuatorControlKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.offboard.OffboardProto.ActuatorControl.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.offboard.OffboardProto.ActuatorControl.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.offboard.OffboardProto.ActuatorControl = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class GroupsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * Control groups.
     * ```
     *
     * `repeated .mavsdk.rpc.offboard.ActuatorControlGroup groups = 1;`
     */
     public val groups: com.google.protobuf.kotlin.DslList<io.mavsdk.offboard.OffboardProto.ActuatorControlGroup, GroupsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getGroupsList()
      )
    /**
     * ```
     * Control groups.
     * ```
     *
     * `repeated .mavsdk.rpc.offboard.ActuatorControlGroup groups = 1;`
     * @param value The groups to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addGroups")
    public fun com.google.protobuf.kotlin.DslList<io.mavsdk.offboard.OffboardProto.ActuatorControlGroup, GroupsProxy>.add(value: io.mavsdk.offboard.OffboardProto.ActuatorControlGroup) {
      _builder.addGroups(value)
    }
    /**
     * ```
     * Control groups.
     * ```
     *
     * `repeated .mavsdk.rpc.offboard.ActuatorControlGroup groups = 1;`
     * @param value The groups to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignGroups")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<io.mavsdk.offboard.OffboardProto.ActuatorControlGroup, GroupsProxy>.plusAssign(value: io.mavsdk.offboard.OffboardProto.ActuatorControlGroup) {
      add(value)
    }
    /**
     * ```
     * Control groups.
     * ```
     *
     * `repeated .mavsdk.rpc.offboard.ActuatorControlGroup groups = 1;`
     * @param values The groups to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllGroups")
    public fun com.google.protobuf.kotlin.DslList<io.mavsdk.offboard.OffboardProto.ActuatorControlGroup, GroupsProxy>.addAll(values: kotlin.collections.Iterable<io.mavsdk.offboard.OffboardProto.ActuatorControlGroup>) {
      _builder.addAllGroups(values)
    }
    /**
     * ```
     * Control groups.
     * ```
     *
     * `repeated .mavsdk.rpc.offboard.ActuatorControlGroup groups = 1;`
     * @param values The groups to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllGroups")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<io.mavsdk.offboard.OffboardProto.ActuatorControlGroup, GroupsProxy>.plusAssign(values: kotlin.collections.Iterable<io.mavsdk.offboard.OffboardProto.ActuatorControlGroup>) {
      addAll(values)
    }
    /**
     * ```
     * Control groups.
     * ```
     *
     * `repeated .mavsdk.rpc.offboard.ActuatorControlGroup groups = 1;`
     * @param index The index to set the value at.
     * @param value The groups to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setGroups")
    public operator fun com.google.protobuf.kotlin.DslList<io.mavsdk.offboard.OffboardProto.ActuatorControlGroup, GroupsProxy>.set(index: kotlin.Int, value: io.mavsdk.offboard.OffboardProto.ActuatorControlGroup) {
      _builder.setGroups(index, value)
    }
    /**
     * ```
     * Control groups.
     * ```
     *
     * `repeated .mavsdk.rpc.offboard.ActuatorControlGroup groups = 1;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearGroups")
    public fun com.google.protobuf.kotlin.DslList<io.mavsdk.offboard.OffboardProto.ActuatorControlGroup, GroupsProxy>.clear() {
      _builder.clearGroups()
    }
  }
}
public inline fun io.mavsdk.offboard.OffboardProto.ActuatorControl.copy(block: `io.mavsdk.offboard`.ActuatorControlKt.Dsl.() -> kotlin.Unit): io.mavsdk.offboard.OffboardProto.ActuatorControl =
  `io.mavsdk.offboard`.ActuatorControlKt.Dsl._create(this.toBuilder()).apply { block() }._build()


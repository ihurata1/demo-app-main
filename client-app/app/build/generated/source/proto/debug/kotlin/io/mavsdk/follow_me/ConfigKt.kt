// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: mavsdk/follow_me/follow_me.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.mavsdk.follow_me;

@kotlin.jvm.JvmName("-initializeconfig")
public inline fun config(block: io.mavsdk.follow_me.ConfigKt.Dsl.() -> kotlin.Unit): io.mavsdk.follow_me.FollowMeProto.Config =
  io.mavsdk.follow_me.ConfigKt.Dsl._create(io.mavsdk.follow_me.FollowMeProto.Config.newBuilder()).apply { block() }._build()
/**
 * ```
 * Configuration type.
 * ```
 *
 * Protobuf type `mavsdk.rpc.follow_me.Config`
 */
public object ConfigKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.mavsdk.follow_me.FollowMeProto.Config.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.mavsdk.follow_me.FollowMeProto.Config.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.mavsdk.follow_me.FollowMeProto.Config = _builder.build()

    /**
     * <pre>
     * [m] Follow height in meters (recommended minimum 8 meters)
     * </pre>
     *
     * <code>float follow_height_m = 1 [(.mavsdk.options.default_value) = "8.0f"];</code>
     */
    public var followHeightM: kotlin.Float
      @JvmName("getFollowHeightM")
      get() = _builder.getFollowHeightM()
      @JvmName("setFollowHeightM")
      set(value) {
        _builder.setFollowHeightM(value)
      }
    /**
     * ```
     * [m] Follow height in meters (recommended minimum 8 meters)
     * ```
     *
     * `float follow_height_m = 1 [(.mavsdk.options.default_value) = "8.0f"];`
     */
    public fun clearFollowHeightM() {
      _builder.clearFollowHeightM()
    }

    /**
     * <pre>
     * [m] Follow distance to target in meters (recommended minimum 4 meter)
     * </pre>
     *
     * <code>float follow_distance_m = 2 [(.mavsdk.options.default_value) = "8.0f"];</code>
     */
    public var followDistanceM: kotlin.Float
      @JvmName("getFollowDistanceM")
      get() = _builder.getFollowDistanceM()
      @JvmName("setFollowDistanceM")
      set(value) {
        _builder.setFollowDistanceM(value)
      }
    /**
     * ```
     * [m] Follow distance to target in meters (recommended minimum 4 meter)
     * ```
     *
     * `float follow_distance_m = 2 [(.mavsdk.options.default_value) = "8.0f"];`
     */
    public fun clearFollowDistanceM() {
      _builder.clearFollowDistanceM()
    }

    /**
     * <pre>
     * FollowDirection follow_direction = 3; // [!DEPRECIATED!] Direction to follow target at. Exists as a legacy to old PX4 Follow-Me, but now only used for setting the follow_angle_deg. This value never gets sent to the PX4 side!
     * </pre>
     *
     * <code>float responsiveness = 4 [(.mavsdk.options.default_value) = "0.1f"];</code>
     */
    public var responsiveness: kotlin.Float
      @JvmName("getResponsiveness")
      get() = _builder.getResponsiveness()
      @JvmName("setResponsiveness")
      set(value) {
        _builder.setResponsiveness(value)
      }
    /**
     * ```
     * FollowDirection follow_direction = 3; // [!DEPRECIATED!] Direction to follow target at. Exists as a legacy to old PX4 Follow-Me, but now only used for setting the follow_angle_deg. This value never gets sent to the PX4 side!
     * ```
     *
     * `float responsiveness = 4 [(.mavsdk.options.default_value) = "0.1f"];`
     */
    public fun clearResponsiveness() {
      _builder.clearResponsiveness()
    }

    /**
     * ```
     * Follow Altitude control mode
     * ```
     *
     * `.mavsdk.rpc.follow_me.Config.FollowAltitudeMode altitude_mode = 5;`
     */
    public var altitudeMode: io.mavsdk.follow_me.FollowMeProto.Config.FollowAltitudeMode
      @JvmName("getAltitudeMode")
      get() = _builder.getAltitudeMode()
      @JvmName("setAltitudeMode")
      set(value) {
        _builder.setAltitudeMode(value)
      }
    public var altitudeModeValue: kotlin.Int
      @JvmName("getAltitudeModeValue")
      get() = _builder.getAltitudeModeValue()
      @JvmName("setAltitudeModeValue")
      set(value) {
        _builder.setAltitudeModeValue(value)
      }
    /**
     * ```
     * Follow Altitude control mode
     * ```
     *
     * `.mavsdk.rpc.follow_me.Config.FollowAltitudeMode altitude_mode = 5;`
     */
    public fun clearAltitudeMode() {
      _builder.clearAltitudeMode()
    }

    /**
     * <pre>
     * [m/s] Maximum orbit tangential velocity relative to the target, in meters per second. Higher value = More aggressive follow angle tracking.
     * </pre>
     *
     * <code>float max_tangential_vel_m_s = 6 [(.mavsdk.options.default_value) = "8.0f"];</code>
     */
    public var maxTangentialVelMS: kotlin.Float
      @JvmName("getMaxTangentialVelMS")
      get() = _builder.getMaxTangentialVelMS()
      @JvmName("setMaxTangentialVelMS")
      set(value) {
        _builder.setMaxTangentialVelMS(value)
      }
    /**
     * ```
     * [m/s] Maximum orbit tangential velocity relative to the target, in meters per second. Higher value = More aggressive follow angle tracking.
     * ```
     *
     * `float max_tangential_vel_m_s = 6 [(.mavsdk.options.default_value) = "8.0f"];`
     */
    public fun clearMaxTangentialVelMS() {
      _builder.clearMaxTangentialVelMS()
    }

    /**
     * <pre>
     * [deg] Follow Angle relative to the target. 0 equals following in front of the target's direction. Angle increases in Clockwise direction, so following from right would be 90 degrees, from the left is -90 degrees, and so on.
     * </pre>
     *
     * <code>float follow_angle_deg = 7 [(.mavsdk.options.default_value) = "180.0f"];</code>
     */
    public var followAngleDeg: kotlin.Float
      @JvmName("getFollowAngleDeg")
      get() = _builder.getFollowAngleDeg()
      @JvmName("setFollowAngleDeg")
      set(value) {
        _builder.setFollowAngleDeg(value)
      }
    /**
     * ```
     * [deg] Follow Angle relative to the target. 0 equals following in front of the target's direction. Angle increases in Clockwise direction, so following from right would be 90 degrees, from the left is -90 degrees, and so on.
     * ```
     *
     * `float follow_angle_deg = 7 [(.mavsdk.options.default_value) = "180.0f"];`
     */
    public fun clearFollowAngleDeg() {
      _builder.clearFollowAngleDeg()
    }
  }
}
public inline fun io.mavsdk.follow_me.FollowMeProto.Config.copy(block: `io.mavsdk.follow_me`.ConfigKt.Dsl.() -> kotlin.Unit): io.mavsdk.follow_me.FollowMeProto.Config =
  `io.mavsdk.follow_me`.ConfigKt.Dsl._create(this.toBuilder()).apply { block() }._build()

